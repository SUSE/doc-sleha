<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_ocfs2.xml" version="5.0" xml:id="cha-ha-ocfs2">
 <title>OCFS2</title>
 <info>
      <abstract>
        <para>
    OCFS 2 (Oracle Cluster File System 2)は、Linux 2.6以降のカーネルに完全に統合されている汎用ジャーナリングファイルシステムです。Oracle Cluster File System 2を利用すれば、アプリケーションバイナリファイル、データファイル、およびデータベースを、共有ストレージ中のデバイスに保管することができます。このファイルシステムには、クラスタ中のすべてのノードが同時に読み書きすることができます。ユーザスペース管理デーモンは、クローンリソースを介して管理され、HAスタック(特に、CorosyncおよびDLM (Distributed Lock Manager))との統合を実現します。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
 <sect1 xml:id="sec-ha-ocfs2-features">
  <title>特長と利点</title>

  <para>
   OCFS2は、以下のようなストレージソリューションに使用できます。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     一般のアプリケーションとワークロード。
    </para>
   </listitem>
   <listitem>
    <para>
     クラスタ中のXENイメージ。Xen仮想マシンと仮想サーバは、クラスタサーバによってマウントされたOCFS2ボリュームに保存できます。これによって、サーバ間でXen仮想マシンを素早く容易に移植できます。
    </para>
   </listitem>
   <listitem>
    <para>
     LAMP (Linux、Apache、MySQL、およびPHP | Perl | Python)スタック。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   OCFS2は、高パフォーマンスで対称的なパラレルクラスタファイルシステムとして、次の機能をサポートします。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     アプリケーションのファイルを、クラスタ内のすべてのノードで使用できます。ユーザは、クラスタ中のOracle Cluster File System 2ボリュームに1回インストールするだけで構いません。
    </para>
   </listitem>
   <listitem>
    <para>
     すべてのノードが、標準ファイルシステムインタフェースを介して、同時並行的に、ストレージに直接読み書きできるので、クラスタ全体に渡わたって実行されるアプリケーションの管理が容易になります。
    </para>
   </listitem>
   <listitem>
    <para>
     ファイルアクセスがDLMを介して調整されます。ほとんどの場合、DLMによる制御は適切に機能しますが、アプリケーションの設計によっては、アプリケーションとDLMがファイルアクセスの調整で競合すると、スケーラビリティが制限されることがあります。
    </para>
   </listitem>
   <listitem>
    <para>
     すべてのバックエンドストレージで、ストレージのバックアップ機能を利用することができます。共有アプリケーションファイルのイメージを簡単に作成することができるため、災害発生時でも素早くデータを復元することができます。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Oracle Cluster File System 2には、次の機能も用意されています。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     メタデータのキャッシュ処理。
    </para>
   </listitem>
   <listitem>
    <para>
     メタデータのジャーナル処理。
    </para>
   </listitem>
   <listitem>
    <para>
     ノード間にまたがるファイルデータの整合性。
    </para>
   </listitem>
   <listitem>
    <para>
     最大4KBのマルチブロックサイズ、最大1MBのクラスタサイズ、4PB(ペタバイト)の最大ボリュームサイズをサポートします。
    </para>
   </listitem>
   <listitem>
    <para>
     32台までのクラスタノードをサポート。
    </para>
   </listitem>
   <listitem>
    <para>
     データベースのパフォーマンスを向上する非同期、直接I/Oのサポート。
    </para>
   </listitem>
  </itemizedlist>

  <note>
   <title>OCFS2用サポート</title>
   <para>
    OCFS2は、SUSE Linux Enterprise High Availabilityによって提供される、pcmk (Pacemaker)スタックと併用する場合にのみ、SUSEによってサポートされます。o2cbスタックと組み合わせた場合、SUSEはOCFS2をサポートしません。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-utils">
  <title>OCFS2のパッケージと管理ユーティリティ</title>

  <para>
   OCFS2カーネルモジュール(<literal>ocfs2</literal>)は、SUSE Linux Enterprise High Availability 15 SP6に自動的にインストールされます。OCFS2を使用するには、<package>ocfs2-tools</package>と、ご使用のカーネルに適合する<package>ocfs2-kmp-*</package>パッケージが、クラスタの各ノードにインストールされていることを確認してください。
  </para>

  <para>
   <package>ocfs2-tools</package>パッケージには、次に示すOCFS2ボリュームの管理ユーティリティがあります。構文については、各マニュアルページを参照してください。
  </para>
  <variablelist>
   <varlistentry>
    <term>debugfs.ocfs2</term>
    <listitem>
     <para>
      デバッグのために、OCFS2ファイルシステムの状態を調査します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>defragfs.ocfs2</term>
    <listitem>
     <para>
      OCFS2ファイルシステムのフラグメンテーションを減らします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>fsck.ocfs2</term>
    <listitem>
     <para>
      ファイルシステムにエラーがないかをチェックし、必要に応じてエラーを修復します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>mkfs.ocfs2</term>
    <listitem>
     <para>
      デバイス上にOCFS2ファイルシステムを作成します。通常は、共有物理/論理ディスク上のパーティションに作成します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>mounted.ocfs2</term>
    <listitem>
     <para>
      クラスタシステム上のすべてのOCFS2ボリュームを検出、表示します。OCFS2デバイスをマウントしているシステム上のすべてのノードを検出、表示するか、またはすべてのOCFS2デバイスを表示します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>tunefs.ocfs2</term>
    <listitem>
     <para>
      ボリュームラベル、ノードスロット数、すべてのノードスロットのジャーナルサイズ、およびボリュームサイズなど、OCFS2ファイルのシステムパラメータを変更します。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-create-service">
  <title>OCFS2サービスとSTONITHリソースの設定</title>

  <para>
   OCFS2ボリュームを作成する前に、DLMおよびSTONITHリソースをクラスタ内のサービスとして設定する必要があります。
  </para>

  <para>
   次の手順では、<command>crm</command>シェルを使用してクラスタリソースを設定します。<xref linkend="sec-ha-ocfs2-rsc-hawk2"/>で説明されているように、リソースの設定にはHawk2を使用することもできます。
  </para>

  <procedure xml:id="pro-ocfs2-stonith">
   <title>STONITHリソースの設定</title>
   <note>
    <title>必要なSTONITHデバイス</title>
    <para>
     フェンシングデバイスを設定する必要があります。STONITHなしでは、設定内に配置されたメカニズム(<literal>external/sbd</literal>など)は失敗します。
    </para>
   </note>
   <step>
    <para>
     シェルを起動し、<systemitem class="username">root</systemitem>または同等のものとしてログインします。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-sbd-create"/>で説明されるとおり、SBDパーティションを作成します。
    </para>
   </step>
   <step>
    <para>
     <command>crm configure</command>を実行します。
    </para>
   </step>
   <step>
    <para>
     フェンシングデバイスとして<literal>external/sbd</literal>を設定します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive sbd_stonith stonith:external/sbd \
  params pcmk_delay_max=30 meta target-role="Started"</command></screen>
   </step>
   <step>
    <para>
     <command>show</command>で変更内容をレビューします。
    </para>
   </step>
   <step>
    <para>
     すべて正しければ、<command>commit</command>で変更を送信し、<command>quit</command>でcrmライブ設定を終了します。
    </para>
   </step>
  </procedure>

  <para>
    DLMに対するリソースの設定の詳細については、<xref linkend="sec-ha-storage-generic-dlm-config"/>を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-create">
  <title>OCFS2ボリュームの作成</title>

  <para>
   <xref linkend="sec-ha-ocfs2-create-service"/>で説明されているように、DLMクラスタリソースを設定したら、システムがOCFS2を使用できるように設定し、OCFs2ボリュームを作成します。
  </para>

  <note>
   <title>アプリケーションファイルとデータファイル用のOCFS2ボリューム</title>
   <para>
    一般に、アプリケーションファイルとデータファイルは、異なるOCFS2ボリュームに保存することを推奨します。アプリケーションボリュームとデータボリュームのマウント要件が異なる場合は、必ず、異なるボリュームに保存します。
   </para>
  </note>

  <para>
   作業を始める前に、OCFS2ボリュームに使用するブロックデバイスを準備します。デバイスは空き領域のままにしてください。
  </para>

  <para>
   次に、<xref linkend="pro-ocfs2-volume"/>で説明されているように、<command>mkfs.ocfs2</command>で、OCFS2ボリュームを作成し、フォーマットします。そのコマンドの重要なパラメータを以下に示します。詳細情報とコマンド構文については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
  </para>

  <variablelist>
   <varlistentry>
    <term>ボリュームラベル (<option>-L</option>)</term>
    <listitem>
     <para>
      異なるノードへのマウント時に、正しく識別できるように、一意のわかりやすいボリューム名を指定します。ラベルを変更するには、<command>tunefs.ocfs2</command>ユーティリティを使用します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>クラスタサイズ (<option>-C</option>)</term>
    <listitem>
     <para>
      ファイルに割り当てられる、データ保管領域の最小単位です。使用できるオプションと推奨事項については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ノードスロット数(<option>-N</option>)</term>
    <listitem>
     <para>
      同時にボリュームをマウントできる最大ノード数を指定します。各ノードについて、OCFS2はジャーナルなどの個別のシステムファイルを作成します。ボリュームにアクセスするノードに、リトルエンディアン形式のノード(AMD64/Intel 64など)とビッグエンディアン形式のノード(S/390xなど)が混在しても構いません。
     </para>
     <para>
      ノード固有のファイルは、ローカルファイルと呼ばれます。ローカルファイルには、ノードスロット番号が付加されます。たとえば、<literal>journal:0000</literal>は、スロット番号<literal>0</literal>に割り当てられたノードに属します。
     </para>
     <para>
      各ボリュームを同時にマウントすると予期されるノード数に従って、各ボリュームの作成時に、そのボリュームの最大ノードスロット数を設定します。<command>tunefs.ocfs2</command>ユーティリティを使用して、必要に応じてノードスロットの数を増やします。この値を減らすことはできません。1つのノードスロットは約100 MiBのディスク容量を使用します。
     </para>
     <para>
      <option>-N</option>パラメータを指定しない場合、ノードスロット数はファイルシステムのサイズに基づいて決定されます。デフォルト値については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ブロックサイズ (<option>-b</option>)</term>
    <listitem>
     <para>
      ファイルシステムがアドレス可能な領域の最小単位を指定します。ブロックサイズは、ボリュームの作成時に指定します。使用できるオプションと推奨事項については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>特定機能のオン/オフ(<option>--fs-features</option>)</term>
    <listitem>
     <para>
      カンマで区切った機能フラグリストを指定できます。<systemitem>mkfs.ocfs2</systemitem>は、そのリストに従って、それらの機能セットを含むファイルシステムを作成しようとします。機能をオンにするには、その機能をリストに入れます。機能をオフにするには、その名前の前に<literal>no</literal>を付けます。
     </para>
     <para>
      使用できるすべてのフラグの概要については、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>事前定義された機能(<option>--fs-feature-level</option>)</term>
    <listitem>
     <para>
      事前定義されたファイルシステム機能セットから選択できます。使用できるオプションについては、<command>mkfs.ocfs2</command>のマニュアルページを参照してください。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   <command>mkfs.ocfs2</command>によってボリュームを作成およびフォーマットするときに機能を指定しない場合、デフォルトで<option>backup-super</option>、<option>sparse</option>、<option>inline-data</option>、<option>unwritten</option>、<option>metaecc</option>、<option>indexed-dirs</option>、および<option>xattr</option>の各機能が有効化されます。
  </para>

  <procedure xml:id="pro-ocfs2-volume">
   <title>OCFS2ボリュームの作成とフォーマット</title>
   <para>
    クラスタノードの<emphasis>1つ</emphasis>だけで、次の手順を実行します。
   </para>
   <step>
    <para>
     端末ウィンドウを開いて、<systemitem class="username">root</systemitem>としてログインします。
    </para>
   </step>
   <step>
    <para>
     クラスタがオンラインであることをコマンド<command>crm
     status</command>で確認します。
    </para>
   </step>
   <step>
    <para>
     <command>mkfs.ocfs2</command>ユーティリティを使用して、ボリュームを作成およびフォーマットします。このコマンドの構文については、<command>mkfs.ocfs2</command>マニュアルページを参照してください。
    </para>
    <para>
     たとえば、最大32台のクラスタノードをサポートする新しいOCFS2ファイルシステムを作成するには、次のコマンドを入力します。
    </para>
<screen><prompt role="root"># </prompt><command>mkfs.ocfs2 -N 32 /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable></command></screen>
    <para>
      常に固定デバイス名(例: <filename>/dev/disk/by-id/scsi-ST2000DM001-0123456_Wabcdefg</filename>)を使用します。
    </para>


   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-mount">
  <title>OCFS2ボリュームのマウント</title>

  <para>
   OCFS2ボリュームは、手動でマウントするか、クラスタマネージャでマウントできます(<xref linkend="pro-ocfs2-mount-cluster"/>参照)。
  </para>
  <para>
   複数のOCFS2ボリュームをマウントするには、<xref linkend="pro-ocfs2-mount-multiple"/>を参照してください。
  </para>

  <procedure xml:id="pro-ocfs2-mount-manual">
   <title>OCFS2ボリュームを手動でマウントする</title>
   <step>
    <para>
     端末ウィンドウを開いて、<systemitem class="username">root</systemitem>としてログインします。
    </para>
   </step>
   <step>
    <para>
     クラスタがオンラインであることをコマンド<command>crm
     status</command>で確認します。
    </para>
   </step>
   <step>
    <para>
     コマンドラインから、<command>mount</command>コマンドを使ってボリュームをマウントします。
    </para>
   </step>
  </procedure>
   <tip>
    <title>単一ノードへの既存のOCFS2ボリュームのマウント</title>
    <para>
     OCFS2ボリュームは、完全に機能するクラスタスタックがなくても、単一ノードにマウントできます。たとえば、バックアップからデータに素早くアクセスできます。これを行うには、<literal>-o nocluster</literal>オプションを指定して<command>mount</command>コマンドを使用します。
    </para>
    <warning role="compact">
     <para>
      このマウント方法では、クラスタ全体の保護は行われません。ファイルシステムの損傷を防ぐため、ファイルシステムが1つのノードにのみマウントされていることを確認する必要があります。
     </para>
    </warning>
   </tip>

  <procedure xml:id="pro-ocfs2-mount-cluster">
   <title>クラスタリソースマネージャでOCFS2ボリュームをマウントする</title>
   <para>
    High AvailabilityソフトウェアでOCFS2ボリュームをマウントするには、クラスタ内でOCFS2ファイルシステムのリソースを設定します。次の手順では、<command>crm</command>シェルを使用してクラスタリソースを設定します。<xref linkend="sec-ha-ocfs2-rsc-hawk2"/>で説明されているように、リソースの設定にはHawk2を使用することもできます。
   </para>
   <step>
    <para>
     <systemitem class="username">root</systemitem>または同等の権限でノードにログインします。
    </para>
   </step>
   <step>
    <para>
     <command>crm configure</command>を実行します。
    </para>
   </step>
   <step>
    <para>
     OCFS2ファイルシステムをクラスタ内のすべてのノードにマウントするように、Pacemakerを設定します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive ocfs2-1 ocf:heartbeat:Filesystem \
  params device="/dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>" directory="/mnt/shared" fstype="ocfs2" \
  op monitor interval="20" timeout="40" \
  op start timeout="60" op stop timeout="60" \
  meta target-role="Started"</command></screen>
   </step>
   <step>
    <para>
     <literal>ocfs2-1</literal>プリミティブを<xref linkend="pro-dlm-resources"/>で作成した<literal>g-storage</literal>グループに追加します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>modgroup g-storage add ocfs2-1</command></screen>
    <para>
     ベースグループの内部コロケーションおよび順序付けのため、<systemitem class="resource">ocfs2-1</systemitem>リソースは、すでに実行中の<literal>dlm</literal>リソースも持つノード上でのみ開始できます。
    </para>
    <important>
     <title>複数のOCFS2リソースにグループを使用しない</title>
     <para>
      グループに複数のOCFS2リソースを追加すると、OCFS2ボリューム間の依存関係が作成されます。たとえば、<command>crm configure group g-storage dlm ocfs2-1 ocfs2-2</command>でグループを作成した場合、<literal>ocfs2-1</literal>を停止すると、<literal>ocfs2-2</literal>も停止し、<literal>ocfs2-2</literal>を開始すると、<literal>ocfs2-1</literal>も開始されます。
     </para>
     <para>
      クラスタで複数のOCFS2リソースを使用するには、<xref linkend="pro-ocfs2-mount-multiple"/>で説明されているように、コロケーションと順序制約を使用します。
     </para>
    </important>
   </step>
   <step>
    <para>
     <command>show</command>で変更内容をレビューします。
    </para>
   </step>
   <step>
    <para>
     すべて正しければ、<command>commit</command>で変更を送信し、<command>quit</command>でcrmライブ設定を終了します。
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro-ocfs2-mount-multiple">
   <title>クラスタリソースマネージャで複数のOCFS2ボリュームをマウントする</title>
   <para>
    クラスタで複数のOCFS2ボリュームをマウントするには、各ボリュームにOCFS2ファイルシステムリソースを設定し、これらを<xref linkend="pro-dlm-multiple-resources"/>で作成した<literal>dlm</literal>リソースと同じ場所に配置します。
   </para>
   <important role="compact">
    <para>
     DLMのグループに複数のOCFS2リソースを追加「しない」でください。<emphasis></emphasis>これにより、OCFS2ボリューム間の依存関係が作成されます。たとえば、<literal>ocfs2-1</literal>と<literal>ocfs2-2</literal>が同じグループである場合、<literal>ocfs2-1</literal>を停止すると<literal>ocfs2-2</literal>も停止します。
    </para>
   </important>
   <step>
    <para>
     <systemitem class="username">root</systemitem>または同等の権限でノードにログインします。
    </para>
   </step>
   <step>
    <para>
     <command>crm configure</command>を実行します。
    </para>
   </step>
   <step>
    <para>
     最初のOCFS2ボリュームのプリミティブを作成します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive ocfs2-1 Filesystem \
  params directory="/srv/ocfs2-1" fstype=ocfs2 device="/dev/disk/by-id/<replaceable>DEVICE_ID1</replaceable>" \
  op monitor interval=20 timeout=40 \
  op start timeout=60 interval=0 \
  op stop timeout=60 interval=0</command></screen>
   </step>
   <step>
    <para>
     2つ目のOCFS2ボリュームのプリミティブを作成します。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive ocfs2-2 Filesystem \
  params directory="/srv/ocfs2-2" fstype=ocfs2 device="/dev/disk/by-id/<replaceable>DEVICE_ID2</replaceable>" \
  op monitor interval=20 timeout=40 \
  op start timeout=60 interval=0 \
  op stop timeout=60 interval=0</command></screen>
   </step>
   <step>
    <para>
     OCFS2リソースのクローンを作成して、すべてのノードで実行できるようにします。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>clone cl-ocfs2-1 ocfs2-1 meta interleave=true</command>
<prompt role="custom">crm(live)configure# </prompt><command>clone cl-ocfs2-2 ocfs2-2 meta interleave=true</command></screen>
   </step>
   <step>
    <para>
     両方のOCFS2リソースにコロケーション制約を追加して、DLMも実行しているノードでのみ実行できるようにします。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>colocation col-ocfs2-with-dlm inf: ( cl-ocfs2-1 cl-ocfs2-2 ) cl-dlm</command></screen>
   </step>
   <step>
    <para>
     両方のOCFS2リソースに順序制約を追加して、DLMがすでに実行されている後でのみ開始できるようにします。
    </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>order o-dlm-before-ocfs2 Mandatory: cl-dlm ( cl-ocfs2-1 cl-ocfs2-2 )</command></screen>
   </step>
   <step>
    <para>
     <command>show</command>で変更内容をレビューします。
    </para>
   </step>
   <step>
    <para>
     すべて正しければ、<command>commit</command>で変更を送信し、<command>quit</command>でcrmライブ設定を終了します。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-rsc-hawk2">
  <title>Hawk2でのOCFS2リソースの設定</title>

  <para>
   crmシェルを使用して、DLM、およびOCFS2のファイルシステムリソースを手動で設定する代わりに、Hawk2の<guimenu>セットアップウィザード</guimenu>のOCFS2テンプレートを使用することもできます。
  </para>

  <important>
   <title>手動設定とHawk2との相違点</title>
   <para>
    <guimenu>セットアップウィザード</guimenu>のOCFS2テンプレートには、STONITHリソースの設定が含まれません<emphasis></emphasis>。ウィザードを使用する場合でも、<xref linkend="pro-ocfs2-stonith"/>で説明されているように、共有ストレージ上でSBDパーティションを作成し、STONITHリソースを設定する必要があります。
   </para>
   <para>
    また、Hawk<guimenu>セットアップウィザード</guimenu>のOCFS2テンプレートを使用すると、<xref linkend="pro-dlm-resources"/>および<xref linkend="pro-ocfs2-mount-cluster"/>で説明されている手動設定とは若干異なるリソース設定になります。
   </para>
  </important>

  <procedure xml:id="pro-ha-ocfs2-rsc-hawk">
   <title>Hawk2の<guimenu>ウィザード</guimenu>でのOCFS2リソースの設定</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     左のナビゲーションバーで、<guimenu>ウィザード</guimenu>を選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>ファイルシステム</guimenu>カテゴリを展開し、<literal>OCFS2 File System</literal>を選択します。
    </para>
   </step>
   <step>
    <para>
     画面の指示に従います。オプションについての情報が必要な場合には、オプションをクリックすると、Hawk2は簡単なヘルプテキストを表示します。最後の設定手順が完了したら、<guimenu>Verify (検証)</guimenu>を選択して、入力した値を検証します。
    </para>
    <para>
     CIBに適用する設定スニペットやその他の必要な変更がウィザードに表示されます。
    </para>
    <figure>
     <title>OCFS2 CIBの変更のHawk2まとめ画面</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-wizard-ocfs2-verify.png" width="70%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-wizard-ocfs2-verify.png" width="70%"/>
      </imageobject>
      <textobject role="description">
        <phrase>OCFS2リソースのCIBに適用される変更を示すまとめ画面。</phrase>
      </textobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     適用予定の変更を確認します。すべてが希望どおりの場合は、変更を適用します。
    </para>
    <para>
     画面上のメッセージが、アクションに成功したかどうかを示します。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-quota">
  <title>OCFS2ファイルシステム上でクォータを使用する</title>



  <para>
   OCFS2ファイルシステム上でクォータを使用するには、適切なクォータ機能またはマウントオプションを使用して、ファイルシステムを作成し、マウントします。オプションは<literal>ursquota</literal> (個々のユーザのためのクォータ)または<literal>grpquota</literal> (グループのためのクォータ)です。これらの機能は後ほど、<command>tunefs.ocfs2</command>を使用して、マウントされていないファイルシステムで有効にすることもできます。
  </para>

  <para>
   ファイルシステムで適切なクォータ機能が有効にされている場合、ファイルシステムは、そのメタデータで、各ユーザ(または)グループが使用しているスペースの量とファイルの数を追跡します。OCFS2はクォータ情報をファイルシステムの内部メタデータとして扱うので、<command>quotacheck</command>(8)プログラムを実行する必要はありません。すべての機能はfsck.ocf2、およびファイルシステムドライバ自体に組み込まれています。
  </para>

  <para>
   各ユーザまたはグループに課せられている制限の強制を有効にするには、他のファイルシステムでの場合と同様に、<command>quotaon</command>(8)を実行します。
  </para>





  <para>
   パフォーマンス上の理由で、各クラスタノードはクォータの計算をローカルに行い、この情報を、10秒ごとに共通の中央ストレージに同期するようになっています。この間隔は<command>tunefs.ocfs2</command>で調整できます。オプションは<option>usrquota-sync-interval</option>および<option>grpquota-sync-interval</option>です。クォータ情報は必ずしも常に正確というわけではないので、複数のクラスタノードを並列に運用している場合、ユーザまたはグループがクォータ制限をいくらか超えることもあります。
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-ocfs2-more">
  <title>詳細の参照先</title>

  <para>
   OCFS2の詳細については、次のリンクを参照してください。
  </para>

  <variablelist>
   <varlistentry>
    <term><link xlink:href="https://ocfs2.wiki.kernel.org/"/>
    </term>
    <listitem>
     <para>
      OCFS2プロジェクトホームページ。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://oss.oracle.com/projects/ocfs2/"/>
    </term>
    <listitem>
     <para>
      Oracleサイトにある以前のOCFS2プロジェクトのホームページ
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://oss.oracle.com/projects/ocfs2/documentation"/>
    </term>
    <listitem>
     <para>
      プロジェクトの以前のドキュメントホームページ。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
