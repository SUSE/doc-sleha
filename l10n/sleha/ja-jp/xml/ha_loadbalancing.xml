<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_loadbalancing.xml" version="5.0" xml:id="cha-ha-lb">

 <title>負荷分散</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
 <abstract>
  <para>
  <emphasis></emphasis>「負荷分散」によって、外部のクライアントからは、サーバのクラスタが1つの大きな高速サーバであるかのようにみえます。この単一サーバのように見えるサーバは、 <emphasis>仮想サーバ</emphasis>と呼ばれます。このサーバは、着信要求をディスパッチする1つ以上のロードバランサと実際のサービスを実行しているいくつかの実際のサーバで構成されます。High Availability Extensionの負荷分散設定によって、高度にスケーラブルで可用性の高いネットワークサービス(Web、キャッシュ、メール、FTP、メディア、VoIPなど)を構築できます。
 </para>
 </abstract>
 </info>
    
 <sect1 xml:id="sec-ha-lb-overview">
  <title>概念の概要</title>
  <para>
   High Availability Extensionは、負荷分散の2つのテクノロジ(Linux仮想サーバ(LVS)およびHAProxy)をサポートしています。これらの主な相違点は、Linux仮想サーバがOSI第4層(トランスポート)でカーネルのネットワーク層を設定するのに対し、HAProxyは第7層(アプリケーション)のユーザスペースで実行されることにあります。このように、Linux仮想サーバは、より少ないリソースで、より高い負荷を処理します。それに対してHAProxyは、トラフィックを調査し、SSL停止を実行して、トラフィックのコンテンツに基づいたディパッチに関する決定を行います。
  </para>
  <para>
   一方、Linux仮想サーバには、IPVS (IP Virtual Server)およびKTCPVS (Kernel TCP Virtual Server)という2つの異なるソフトウェアが組み込まれています。IPVSは第4層の負荷分散を提供するのに対し、KTCPVSは第7層の負荷分散を提供します。
  </para>
  <para>
   この項では、高可用性と組み合わせた負荷分散について概説してから、Linux仮想サーバとHAProxyについて簡単に説明します。最後に、追加情報を紹介します。
  </para>
  <para>
   実際のサーバとロードバランサは、高速LANまたは地理的に分散されたWANのいずれでも、相互に接続できます。ロードバランサは、さまざまなサーバに要求をディスパッチします。ロードバランサによって、クラスタのパラレルサービスが1つのIPアドレス(仮想IPアドレスまたはVIP)上の仮想サービスであるかのようにみえます。要求のディスパッチでは、IP負荷分散技術か、アプリケーションレベル負荷分散技術を使用できます。クラスタ内のノードのトランスペアレントな追加または削除によって、システムのスケーラビリティが達成されます。
  </para>

  <para>
   ノードまたはサービスの障害検出と仮想サーバシステム全体の適切な再設定によって、常に高い可用性が実現されます。
  </para>

  <remark>Most of the following items are taken from FATE#316459. Not
  sure if this is really correct. Needs technical proofreading by an
  expert.</remark>

  <para>
   いくつかの負荷分散戦略があります。ここに、Linux仮想サーバに適した第4層の各戦略を示します。
  </para>

  <itemizedlist>
   <listitem>
    <formalpara>
     <title>ラウンドロビン</title>
     <para>
      最も簡単な戦略は、各接続を異なるアドレスに順番に指定することです。たとえば、DNSサーバは指定のホスト名に対するいくつかのエントリを持つことができます。DNSラウンドロビンでは、DNSサーバは循環しながらそれらのエントリすべてを順番に返します。このように、異なるクライアントは異なるアドレスを表示します。
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title><quote>最良の</quote>サーバの選択</title>
     <para>
      これにはいくつかのデメリットがありますが、<quote>応答する最初のサーバ</quote>または<quote>負荷の最も少ないサーバ</quote>アプローチで分散を実装できます。
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>サーバあたりの接続数の分散</title>
     <para>
      ユーザとサーバ間のロードバランサは、複数のサーバ間でユーザ数を分割できます。
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>位置情報</title>
     <para>
      近くのサーバにクライアントをダイレクトすることができます。
     </para>
    </formalpara>
   </listitem>
  </itemizedlist>

  <para>
   ここに、HAProxyに適した第7層の各戦略を示します。
  </para>

  <itemizedlist>
   <listitem>
    <formalpara>
     <title>URI</title>
     <para>
      HTTPコンテンツを調査し、この特定のURIに最適なサーバにディスパッチします。
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>URLパラメータ、RDPクッキー</title>
     <para>
      セッションパラメータ(ポストパラメータの場合もある)、またはRDP(リモートデスクトッププロトコル)セッションクッキーのHTTPコンテンツを調査し、このセッションを提供するサーバにディパッチします。
     </para>
    </formalpara>
   </listitem>
  </itemizedlist>

  <para>
   一部の重複はありますが、HAProxyはLVS/<command>ipvsadm</command>が不十分なシナリオで使用できます(およびその逆もあり)。
  </para>

  <itemizedlist>
   <listitem>
    <formalpara>
     <title>SSL停止</title>
     <para>
      フロントエンドロードバランサは、SSL層を処理できます。このため、クラウドノードは、SSLキーにアクセスする必要はなく、ロードバランサのSSLアクセラレータを利用できます。
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>アプリケーションレベル</title>
     <para>
      HAProxyはアプリケーションレベルで動作するため、コンテンツストリームによって負荷分散の決定に影響を与えることができます。これにより、クッキーや他のフィルタに基づいた永続化が許可されます。
     </para>
    </formalpara>
   </listitem>
  </itemizedlist>

  <para>
   一方、LVS/<command>ipvsadm</command>は、HAProxyで完全に置き換えることはできません。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     LVSは、ロードバランサがインバウンドストリーム内にのみ配置される<quote>ダイレクトルーティング</quote>をサポートし、アウトバウンドトラフィックは直接クライアントにルーティングされます。これにより、非対称環境でのスループットがかなり向上する可能性があります。
    </para>
   </listitem>
   <listitem>
    <para>
     LVSは、(<systemitem class="daemon">conntrackd</systemitem>を介した)ステートフルな接続テーブルレプリケーションをサポートしています。これにより、クライアントおよびサーバに透過なロードバランサのフェールオーバーが可能になります。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <xi:include href="ha_lb_lvs.xml"/>
 <xi:include href="ha_lb_haproxy.xml"/>

 <sect1 xml:id="sec-ha-lb-more">
  <title>詳細の参照先</title>

  <itemizedlist>
    <listitem>
      <para><link xlink:href="http://www.haproxy.org"/></para>
    </listitem>
    <listitem>
      <para><link xlink:href="http://www.linuxvirtualserver.org/"/>にあるプロジェクトのホームページ。
  </para>
    </listitem>
    <listitem>
      <para><systemitem class="daemon">ldirectord</systemitem>の詳細については、その総合的なマニュアルページを参照してください。</para>
    </listitem>
    <listitem>
      <para>LVS Knowledge Base: <link xlink:href="http://kb.linuxvirtualserver.org/wiki/Main_Page"/>。</para>
    </listitem>
  </itemizedlist>
 </sect1>
</chapter>
