<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_hawk2_cons_i.xml" version="5.0" xml:id="sec-conf-hawk2-cons">
 <title>制約の設定</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer/>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release/>
   <dm:repository/>
  </dm:docmanager>
 </info>

 <para>
  すべてのリソースを設定したら、クラスタがそれらを扱う方法を指定します。リソース制約を使えば、リソースがどのクラスタノードで実行されるか、リソースをどの順番でロードするか、そして特定のリソース型のどのリソースに依存するかを指定することができます。
 </para>

 <para>
  利用可能な制約のタイプの概要は、<xref linkend="sec-ha-config-basics-constraints-types"/>を参照してください。制約を定義する際には、スコアも指定する必要があります。スコアおよびクラスタでのそれらの意味の詳細については、<xref linkend="sec-ha-config-basics-constraints-scores"/>を参照してください。
 </para>

 <sect2 xml:id="sec-conf-hawk2-cons-loc">
  <title>場所制約の追加</title>
  <para>
   場所制約は、リソースを実行できるノード、実行に適したノード、または実行できないノードを決定します。たとえば、場所制約により、特定のデータベースに関連するすべてのリソースを同じノードに配置します。
  </para>
  <procedure xml:id="pro-hawk2-constraints-location">
   <title>場所制約の追加</title>
   <para>
    <remark>taroth 2015-12-02: todo for next release: explain advanced configuration (via
      rules)</remark>
   </para>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     左のナビゲーションバーから、<menuchoice>
     <guimenu>環境設定</guimenu>  <guimenu> Add Constraint (制約の追加)</guimenu>
     <guimenu> Location (場所)</guimenu> </menuchoice> の順に選択します。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>制約ID</guimenu>を入力します。
    </para>
   </step>
   <step xml:id="step-hawk2-loc-rsc">
    <para>
     <guimenu>Resources (リソース)</guimenu>のリストから、制約を定義するリソースを1つまたは複数選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>スコア</guimenu>にスコアを入力します。スコアはこのリソース制約に割り当てる値を示します。正の値は、次のステップで指定する<guimenu>ノード</guimenu>でリソースを実行できることを示します。負の値は、リソースをそのノードで実行すべきではないことを示します。スコアの高い制約は、それよりもスコアが低い制約より先に適用されます。
    </para>
    <para>
     使用頻度の高い次の値は、ドロップダウンボックスからも設定できます。
    </para>
    <itemizedlist>
     <listitem>
      <para>
       ノードで強制的にリソースを実行するには、矢印アイコンをクリックして<literal>常に</literal>を選択します。これにより、スコアは<literal>INFINITY</literal>に設定されます。
      </para>
     </listitem>
     <listitem>
      <para>
       ノードでリソースを実行しない場合、矢印アイコンをクリックして<literal>Never (実行しない)</literal>を選択します。これにより、スコアは<literal>-INFINITY</literal>に設定され、リソースはそのノードで実行してはならないことになります。
      </para>
     </listitem>
     <listitem>
      <para>
       スコアを<literal>0</literal>に設定するには、矢印アイコンをクリックして<literal>Advisory (推奨値)</literal>を選択します。これにより制約が無効になります。これは、リソース検出を設定してもリソースを制約したくない場合に便利です。
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     <guimenu>ノード</guimenu>を選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>作成</guimenu>をクリックして、設定を完了します。画面上部に、アクションが成功したかどうかを示すメッセージが表示されます。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk2 - 場所制約</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-loc-constraint.png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-loc-constraint.png" width="100%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect2>

 <sect2 xml:id="sec-conf-hawk2-cons-col">
  <title>コロケーション制約の追加</title>
  <para>
   コロケーション制約は、ノード上で一緒に実行可能な、または一緒に実行することが禁止されているリソースをクラスタに伝えます。コロケーション制約はリソース間の依存関係を定義するため、コロケーション制約を作成するには、少なくとも2つのリソースが必要です。
  </para>
  <procedure xml:id="pro-hawk2-constraints-colocation">
   <title>コロケーション制約の追加</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     左のナビゲーションバーから、<menuchoice> <guimenu>環境設定</guimenu>
     <guimenu> Add Constraint (制約の追加)</guimenu> <guimenu>コロケーション</guimenu> </menuchoice> の順に選択します。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>制約ID</guimenu>を入力します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>スコア</guimenu>にスコアを入力します。スコアは複数のリソースの場所の関係を決定します。正の値は、リソースを同じノードで実行しなければならないことを示します。負の値は、リソースを同じノードで実行するべきではないことを示します。スコアと他の要因との組み合わせによって、ノードの配置先が決定します。
    </para>
    <para>
     使用頻度の高い次の値は、ドロップダウンボックスからも設定できます。
    </para>
    <itemizedlist>
     <listitem>
      <para>
       同じノードで強制的にリソースを実行するには、矢印アイコンをクリックして<literal>常に</literal>を選択します。これにより、スコアは<literal>INFINITY</literal>に設定されます。
      </para>
     </listitem>
     <listitem>
      <para>
       リソースを同じノードで実行しない場合、矢印アイコンをクリックして<literal>Never (実行しない)</literal>を選択します。これにより、スコアは<literal>-INFINITY</literal>に設定され、リソースは同じノードで実行してはならないことになります。
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     制約のリソースを定義するには、次の手順に従います。
    </para>
    <substeps performance="required">
     <step xml:id="step-hawk2-col-rsc">
      <para>
       <guimenu>リソース</guimenu>カテゴリのドロップダウンボックスから、リソース(またはテンプレート)を選択します。
      </para>
      <para>
       リソースが追加され、下に新しい空のドロップダウンボックスが表示されます。
      </para>
     </step>
     <step>
      <para>
       この手順を繰り返してリソースを追加します。
      </para>
      <para>
       最上位のリソースは次のリソースなど順に依存するため、クラスタはまず最後のリソースを置く場所を決め、次にその決定に基づいて依存するものを配置していきます。制約が満たされないと、クラスタは依存するリソースが実行しないようにすることがあります。
      </para>
     </step>
     <step>
      <para>
       コロケーション制約内のリソースの順序を入れ替えるには、リソースの横にある上矢印アイコンをクリックして、その上のエントリと入れ替えます。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     必要に応じて、各リソースの他のパラメータ(<literal>Started (開始)</literal>、<literal>Stopped (停止)</literal>、<literal>Promote (昇格)</literal>、<literal>Demote (降格)</literal>など)を指定します。リソースの横にある空のドロップダウンボックスをクリックして、目的のエントリを選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>作成</guimenu>をクリックして、設定を完了します。画面上部に、アクションが成功したかどうかを示すメッセージが表示されます。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk2 - コロケーション制約</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-col-constraint.png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-col-constraint.png" width="100%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect2>

 <sect2 xml:id="sec-conf-hawk2-cons-order">
  <title>順序制約の追加</title>
  <para>
   順序制約は、リソースを開始および停止する順序を定義します。順序制約はリソース間の依存関係を定義するため、順序制約を作成するには、少なくとも2つのリソースを作成する必要があります。
  </para>
  <procedure xml:id="pro-hawk2-constraints-order">
   <title>順序制約の追加</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     左のナビゲーションバーから、<menuchoice> <guimenu>環境設定</guimenu>
     <guimenu> Add Constraint (制約の追加)</guimenu> <guimenu>順序</guimenu> </menuchoice> の順に選択します。
    </para>
   </step>
   <step>
    <para>
     固有の<guimenu>制約ID</guimenu>を入力します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>スコア</guimenu>にスコアを入力します。スコアがゼロより大きい場合、順序制約は必須になりますが、そうでない場合はオプションです。
    </para>
    <para>
     使用頻度の高い次の値は、ドロップダウンボックスからも設定できます。
    </para>

    <itemizedlist>
     <listitem>
      <para>
       順序制約を必須にする場合、矢印アイコンをクリックして<literal>Mandatory (必須)</literal>を選択します。
      </para>
     </listitem>
     <listitem>
      <para>
       順序制約を提案のみにする場合、矢印アイコンをクリックして<literal>Optional (オプション)</literal>を選択します。
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>Serialize (順番に処理)</literal>: リソースに対して2つの停止/開始アクションが同時に実行されないようにするには、矢印アイコンをクリックして<literal>Serialize (順番に処理)</literal>を選択します。これにより、1つのリソースの開始が完了しないと他のリソースを開始できなくなります。通常は、起動時にホストに高い負荷をかけるリソースに使用します。
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     順序の制約の場合、オプション<guimenu>シンメトリック</guimenu>は常に有効にしていてください。これは、リソースを停止するときには逆順で行うという指定です。
    </para>
   </step>
   <step>
    <para>
     制約のリソースを定義するには、次の手順に従います。
    </para>
    <substeps performance="required">
     <step xml:id="step-hawk2-order-rsc">
      <para>
       <guimenu>リソース</guimenu>カテゴリのドロップダウンボックスから、リソース(またはテンプレート)を選択します。
      </para>
      <para>
       リソースが追加され、下に新しい空のドロップダウンボックスが表示されます。
      </para>
     </step>
     <step>
      <para>
       この手順を繰り返してリソースを追加します。
      </para>
      <para>
       一番上のリソースが最初に開始され、次に2番目に開始されます。通常、リソースは逆の順序で停止されます。
      </para>
     </step>
     <step>
      <para>
       順序制約内のリソースの順序を入れ替えるには、リソースの横にある上矢印アイコンをクリックして、その上のエントリと入れ替えます。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     必要に応じて、各リソースの他のパラメータ(<literal>Started (開始)</literal>、<literal>Stopped (停止)</literal>、<literal>Promote (昇格)</literal>、<literal>Demote (降格)</literal>など)を指定します。リソースの横にある空のドロップダウンボックスをクリックして、目的のエントリを選択します。
    </para>
   </step>
   <step>
    <para>
     変更を確認して、設定を完了します。画面上部に、アクションが成功したかどうかを示すメッセージが表示されます。
    </para>
   </step>
  </procedure>
  <figure pgwide="0">
   <title>Hawk2 - 順序制約</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-order-constraint.png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-order-constraint.png" width="100%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect2>

 <sect2 xml:id="sec-conf-hawk2-cons-set">
  <title>制約のためにリソースセットを使用する</title>
  <para>
   制約を定義するための別のフォーマットとして、<xref linkend="sec-ha-config-basics-constraints-rscset" xrefstyle="select:title"/>を使用することができます。これらは、<xref linkend="sec-ha-config-basics-resources-advanced-groups" xrefstyle="select:title"/>と同じ意味論に従います。
  </para>
  <procedure xml:id="pro-hawk2-constraints-sets">
   <title>制約のためにリソースセットを使用する</title>
   <step>
    <para>
     場所制約内でリソースセットを使用するには:
    </para>
    <substeps performance="required">
     <step>
      <para>
       <xref linkend="pro-hawk2-constraints-location"/>の説明に従って操作を進めます。ただし、<xref linkend="step-hawk2-loc-rsc" xrefstyle="select:label"/>は除きます。1つのリソースを選択する代わりに、<keycap function="control"/>または<keycap function="shift"/>を押しながらマウスをクリックして、複数のリソースを選択します。これにより、場所制約内でリソースセットが作成されます。
      </para>
     </step>
     <step>
      <para>
       場所制約からリソースを削除するには、<keycap function="control"/>を押しながらリソースを再度クリックして、選択解除します。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     コロケーションまたは順序の制約内でリソースセットを使用するには:
    </para>
    <substeps performance="required">
     <step>
      <para>
       <xref linkend="pro-hawk2-constraints-colocation"/>または<xref linkend="pro-hawk2-constraints-order"/>の説明に従います。ただし、制約に対してリソースを定義する手順(<xref linkend="step-hawk2-col-rsc" xrefstyle="select:label"/>または<xref linkend="step-hawk2-order-rsc"/>)は除きます。
      </para>
     </step>
     <step>
      <para>
       複数のリソースを追加します。
      </para>
     </step>
     <step>
      <para>
       リソースセットを作成するため、リソースの横にあるチェーンアイコンをクリックして、そのリソースを上のリソースにリンクします。リソースセットは、セットに属しているリソースの周囲のフレームによって示されます。
      </para>
     </step>
     <step>
      <para>
       リソースセット内の複数のリソースを結合したり、複数のリソースセットを作成したりできます。
      </para>
      <figure>
       <title>Hawk2 - コロケーション制約の2つのリソースセット</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk2-constraint-set.png" width="100%"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk2-constraint-set.png" width="100%"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       上のリソースからリソースをリンク解除するには、そのリソースの横にあるハサミアイコンをクリックします。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     変更を確認して、制約の設定を完了します。
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-conf-hawk2-cons-more">
  <title>詳細の参照先</title>
  <para>
   制約の設定の詳細や、順序およびコロケーションの基本的な概念についての詳細なバックグラウンド情報は、<link xlink:href="http://www.clusterlabs.org/pacemaker/doc/"/>で提供されているドキュメントを参照してください。
  </para>
  <itemizedlist>
   <listitem>
    <para>
      『<citetitle>Pacemaker Explained</citetitle>』の「<citetitle>Resource Constraints</citetitle>」の章
    </para>
   </listitem>
   <listitem>
    <para>
     『<citetitle>Colocation Explained</citetitle>』
    </para>
   </listitem>
   <listitem>
    <para>
     『<citetitle>オーダーの概要</citetitle>』
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="sec-conf-hawk2-failover">
  <title>リソースフェールオーバーノードの指定</title>
  <para>
   リソースに障害が発生すると、自動的に再起動されます。現在のノードで再起動できない場合、または現在のノードで<replaceable>N</replaceable>回失敗した場合は、別のノードへのフェールオーバーが試行されます。新しいノードへのマイグレートを行う基準(<literal>migration-threshold</literal>)となるリソースの失敗をいくつか定義できます。クラスタ内に3つ以上ノードがある場合、特定のリソースのフェールオーバー先のノードはHigh Availabilityソフトウェアにより選択されます。
  </para>
  <para>
   リソースがフェールオーバーする特定のノードを前もって指定するには、次の手順に従います。
  </para>
  <procedure xml:id="pro-hawk2-failover">
   <title>フェールオーバーノードの指定</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     <xref linkend="pro-hawk2-constraints-location"/>に記されている手順に従って、そのリソースの場所の制約を設定します。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-conf-hawk2-rsc-modify" xrefstyle="select:label title nopage"/>、<xref linkend="step-hawk2-rsc-modify-params" xrefstyle="select:label"/>に説明されている手順に従ってリソースに<literal>migration-threshold</literal>メタ属性を追加し、migration-thresholdの値を入力します。INFINITYではない正の値を指定する必要があります。
    </para>
   </step>
   <step>
    <para>
     リソースの失敗回数を自動的に失効させる場合は、<xref linkend="pro-conf-hawk2-primitive-add" xrefstyle="select:label title nopage"/>、<xref linkend="step-hawk2-rsc-modify-params" xrefstyle="select:label"/>に説明されている手順に従って<literal>failure-timeout</literal>メタ属性をそのリソースに追加し、<literal>failure-timeout</literal>の<guimenu>値</guimenu>を入力します。
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-failover-node.png" width="100%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-failover-node.png" width="100%"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para>
     リソースの初期設定として、追加のフェールオーバーノードを指定する場合は、追加の場所の制約を作成します。
    </para>
   </step>
  </procedure>
  <para>
   マイグレーションしきい値と失敗カウントに関連したプロセスフローは、<xref linkend="ex-ha-config-basics-failover"/>に示されています。
  </para>
  <para>
   リソースの失敗回数は、自動的に期限切れにする代わりに、いつでも、手動でクリーンアップすることもできます。詳細については、<xref linkend="sec-conf-hawk2-manage-cleanup"/>を参照してください。
  </para>
 </sect2>

 <sect2 xml:id="sec-config-hawk2-failback">
  <title>リソースフェールバックノードの指定(リソースの固着性)</title>
  <para>
   ノードがオンライン状態に戻り、クラスタ内にある場合は、リソースが元のノードにフェールバックすることがあります。このことを防ぐ、またはリソースのフェールバック先として別のノードを指定するには、リソースの固着性の値を変更します。リソースの固着性は、リソースを作成するとき、または作成した後のどちらでも指定できます。
  </para>
  <para>
   さまざまなリソース固着性値の意味については、<xref linkend="sec-ha-config-basics-failback"/>を参照してください。
  </para>
  <procedure xml:id="pro-hawk2-stickiness">
   <title>リソースの固着性の指定</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     <xref linkend="pro-conf-hawk2-rsc-modify" xrefstyle="select:label title nopage"/>、<xref linkend="step-hawk2-rsc-modify-params" xrefstyle="select:label"/>に従って、<literal>resource-stickiness</literal>メタ属性をリソースに追加します。
    </para>
   </step>
   <step>
    <para>
     <literal>resource-stickiness</literal>として、<literal>-INFINITY</literal>と<literal>INFINITY</literal>の間の値を指定します。
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-rsc-stickiness.png" width="100%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-rsc-stickiness.png" width="100%"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-config-hawk2-utilization">
  <title>負荷インパクトに基づくリソース配置の設定</title>
  <para>
   すべてのリソースが同等ではありません。Xenゲストなどの一部のリソースでは、そのホストであるノードがリソースの容量要件を満たす必要があります。配置したリソースの要件の合計が提供容量よりも大きくなった場合には、リソースのパフォーマンスが低下するか、または失敗します。
  </para>
  <para>
   これを考慮に入れて、High Availability Extensionでは、次のパラメータを指定できます。
  </para>
  <orderedlist spacing="normal">
   <listitem>
    <para>
     一定のノードが<emphasis>提供する</emphasis>容量
    </para>
   </listitem>
   <listitem>
    <para>
     一定のリソースが<emphasis>要求する</emphasis>容量
    </para>
   </listitem>
   <listitem>
    <para>
     リソースの配置に関する全体的なストラテジ
    </para>
   </listitem>
  </orderedlist>
  <para>
   詳細と設定例については、<xref linkend="sec-ha-config-basics-utilization"/>を参照してください。
  </para>
  <para>
   使用属性は、リソースの要件と、ノードが提供する容量の両方を設定するために使用されます。リソースが要求する容量を設定するには、その前にノードの容量を設定する必要があります。
  </para>
  <procedure xml:id="pro-hawk2-utilization-node">
   <title>ノードが提供する容量の設定</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     左のナビゲーションバーから、<menuchoice><guimenu>監視機能</guimenu>
     <guimenu>状態</guimenu></menuchoice> の順に選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>ノード</guimenu>タブで、容量を設定するノードを選択します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>操作</guimenu>列で、下矢印アイコンをクリックして<guimenu>編集</guimenu>を選択します。
    </para>
    <para>
     <guimenu>ノードの編集</guimenu>画面が開きます。
    </para>
   </step>
   <step>
    <para>
     <guimenu>使用率</guimenu>の下で、使用属性の名前を空のドロップダウンボックスに入力します。
    </para>
    <para>
     名前は任意です(<literal>RAM_in_GB</literal>など)。
    </para>
   </step>
   <step>
    <para>
     属性を追加するには、<guimenu>追加</guimenu>アイコンをクリックします。
    </para>
   </step>
   <step>
    <para>
     属性の隣の空のテキストボックスに、属性値を入力します。値は整数にする必要があります。
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-utilization-node.png" width="100%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-utilization-node.png" width="100%"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para>
     必要なだけ使用属性を追加し、これらの属性すべての値を追加します。
    </para>
   </step>
   <step>
    <para>
     変更内容を確認します。画面上部に、アクションが成功したかどうかを示すメッセージが表示されます。
    </para>
   </step>
  </procedure>
  <procedure xml:id="pro-hawk2-utilization-rsc">
   <title>リソースが要求する容量の設定</title>
   <para>
    プリミティブリソースを作成するときや、既存のプリミティブリソースを編集するときに、特定のリソースがノードに要求する容量を設定します。
   </para>
   <para>
    リソースに使用属性を追加する前に、<xref linkend="pro-hawk2-utilization-node" xrefstyle="select:label"/>で説明するように、クラスタノードの使用属性を設定しておく必要があります。
   </para>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     既存のリソースに使用属性を追加する場合: <xref linkend="sec-conf-hawk2-manage-edit"/>に示すように、<menuchoice>
     <guimenu>Manage (管理)</guimenu><guimenu>状態</guimenu> </menuchoice>の順に移動して、［リソース設定］ダイアログを開きます。
    </para>
    <para>
     新しいリソースを作成する場合: <xref linkend="sec-conf-hawk2-rsc-primitive"/>に示すように、<menuchoice>
     <guimenu>Configuration (設定)</guimenu><guimenu>Add Resource (リソースの追加)</guimenu>
     </menuchoice>の順に移動して進みます。
    </para>
   </step>
   <step>
    <para>
     ［リソース設定］ダイアログで、<guimenu>使用率</guimenu>カテゴリに移動します。
    </para>
   </step>
   <step>
    <para>
     空のドロップダウンボックスから、<xref linkend="pro-hawk2-utilization-node" xrefstyle="select:label"/>でノードに対して設定した使用属性のいずれかを選択します。
    </para>
   </step>
   <step>
    <para>
     属性の隣の空のテキストボックスに、属性値を入力します。値は整数にする必要があります。
    </para>
   </step>
   <step>
    <para>
     必要なだけ使用属性を追加し、これらの属性すべての値を追加します。
    </para>
   </step>
   <step>
    <para>
     変更内容を確認します。画面上部に、アクションが成功したかどうかを示すメッセージが表示されます。
    </para>
   </step>
  </procedure>
  <para>
   ノードが提供する容量とリソースが要求する容量を設定してから、配置ストラテジをグローバルクラスタオプションに設定します。そうしないと、容量設定は有効になりません。負荷のスケジュールに使用できるストラテジがいくつかあります。たとえば、負荷をできるだけ少ない数のノードに集中したり、使用可能なすべてのノードに均等に分散できます。詳細については、<xref linkend="sec-ha-config-basics-utilization"/>を参照してください。
  </para>
  <procedure xml:id="pro-ha-config-hawk2-placement">
   <title>配置ストラテジの設定</title>
   <step>
    <para>
     Hawk2にログインします。
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     左のナビゲーションバーから、<menuchoice>
     <guimenu>環境設定</guimenu><guimenu>クラスタ設定</guimenu>
     </menuchoice>を選択し、各画面を開きます。グローバルクラスタオプション、およびリソースと操作のデフォルトが表示されます。
    </para>
   </step>
   <step>
    <para>
     画面上部にある空のドロップダウンボックスから、<literal>placement-strategy</literal>を選択します。
    </para>
    <para>
     デフォルトでは、その値は<guimenu>デフォルト</guimenu>に設定され、使用属性と値が考慮されていないことを意味します。
    </para>
   </step>
   <step>
    <para>
     要件に応じて、<guimenu>配置ストラテジ</guimenu>を適切な値に設定します。
    </para>
   </step>
   <step>
    <para>
     変更内容を確認します。
    </para>
   </step>
  </procedure>
 </sect2>
</sect1>
