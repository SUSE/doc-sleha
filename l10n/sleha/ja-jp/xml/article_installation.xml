<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
  type="text/xml"
  title="Profiling step"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:dm="urn:x-suse:ns:docmanager" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="article_installation.xml" version="5.0" xml:lang="ja" xml:id="article-installation">
 <title>インストールおよびセットアップクイックスタート</title>
 <info>
  <productnumber><phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase></productnumber>
  <productname><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase></productname>
  <date><?dbtimestamp ?>
</date>
  <xi:include href="ha_authors.xml"/>
  <abstract>
   <para>
     このマニュアルでは、crmシェルで提供されているブートストラップスクリプトを使用して、非常に基本的な2ノードクラスタをセットアップする手順を説明します。仮想IPアドレスをクラスタリソースとして設定する手順や、共有ストレージ上でSBDをノードフェンシングメカニズムとして使用する手順も記載されています。
   </para>
  </abstract>
  <dm:docmanager>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

  <sect1 xml:id="sec-ha-inst-quick-usage-scenario">
   <title>使用シナリオ</title>
   <para>
    このマニュアルに記載されている手順に従うと、次のプロパティを持つ2ノードクラスタの最小セットアップになります。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      ネットワーク経由で相互に接続された2つのノード: <systemitem class="server">alice</systemitem> (IP: <systemitem class="ipaddress">192.168.1.1</systemitem>)および<systemitem class="server">bob</systemitem> (IP: <systemitem class="ipaddress">192.168.1.2</systemitem>)。
     </para>
    </listitem>
    <listitem>
     <para>
      実行している物理ノードがどれであれ、クライアントからの該当サービスへの接続を可能にする浮動仮想IPアドレス(<systemitem class="ipaddress">192.168.2.1</systemitem>)。
     </para>
    </listitem>
    <listitem>
     <para>SBDフェンシングメカニズムとして使用される共有ストレージデバイス。これにより、スプリットブレインシナリオを回避します。
     </para>
    </listitem>
    <listitem>
     <para>
      アクティブなホストが停止した場合における、一方のノードから他方のノードへのリソースのフェールオーバー(<emphasis></emphasis>「アクティブ/パッシブ」セットアップ)。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    ブートストラップスクリプトを使用してクラスタを設定したら、グラフィカルインタフェースであるHawk2を使用してクラスタを監視します。これは、<phrase role="roductnamereg"><phrase os="sles">SUSE® Linux Enterprise High Availability Extension</phrase></phrase>に搭載されているクラスタ管理ツールの1つです。リソースのフェールオーバーが機能するかどうかの基本的なテストとして、一方のノードをスタンバイモードにし、仮想IPアドレスが2つ目のノードに移行されるかどうかを確認します。
   </para>
   <para>
    この2ノードクラスタは、テスト目的で使用することも、後で拡張可能な最小クラスタ設定として使用することもできます。運用環境でクラスタを使用する前に、ご自分の要件に従ってクラスタを変更してください。
   </para>
  </sect1>

  <sect1 xml:id="sec-ha-inst-quick-req">
   <title>システム要件</title>
   <para>
    この項では、<xref linkend="sec-ha-inst-quick-usage-scenario" xrefstyle="select:label"/>で説明されているシナリオの重要なシステム要件について説明します。運用環境で使用するためにクラスタを調整する方法については、<xref linkend="cha-ha-requirements"/>の一覧を参照してください。
   </para>

  <sect2 xml:id="vl-ha-inst-quick-req-hw">
   <title>ハードウェア要件</title>
   <variablelist>
    <varlistentry>
     <term>サーバ</term>
     <listitem>
      <para>
       <xref linkend="il-ha-inst-quick-req-sw"/>で指定されているソフトウェアがインストールされた2台のサーバ。
      </para> <para>
      サーバはベアメタルでも仮想マシンでも構いません。各サーバが同一のハードウェア設定(メモリ、ディスクスペースなど)になっている必要はありませんが、アーキテクチャは同じである必要があります。クロスプラットフォームのクラスタはサポートされていません。
     </para>
      
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>通信チャネル</term>
     <listitem>  <para>
       クラスタノードあたり、少なくとも2つのTCP/IP通信メディア。ネットワーク機器は、クラスタ通信に使用する通信手段(マルチキャストまたはユニキャスト)をサポートする必要があります。通信メディアは100Mbit/s以上のデータレートをサポートする必要があります。サポートされるクラスタセットアップでは、2つ以上の冗長通信パスが必要です。これは次のように実行できます。</para>
       <itemizedlist>
        <listitem>
         <para>
          ネットワークデバイスボンディング(推奨)。
         </para>
        </listitem>
        <listitem>
         <para>
          Corosync内の2つ目の通信チャネル。
         </para>
        </listitem>
       </itemizedlist> </listitem>
    </varlistentry>
    <varlistentry>
     <term>ノードフェンシング/STONITH</term>
     <listitem>  <para>
      <quote>スプリットブレイン</quote>シナリオを回避するため、クラスタにはノードフェンシングメカニズムが必要です。スプリットブレインシナリオでは、クラスタノードは、お互いを認識していない2つ以上のグループに分割されます(ハードウェアまたはソフトウェアの障害か、ネットワーク接続の切断による)。フェンシングメカニズムにより、問題のあるノードを分離します(通常はノードをリセットするか、ノードの電源をオフにすることによって分離します)。これをSTONITH (<quote>Shoot the other node in the head</quote>)と呼びます。ノードフェンシングメカニズムは、物理デバイス(電源スイッチ)でも、SBD (ディスクによるSTONITH)のようなメカニズムとウォッチドッグを組み合わせたものでも構いません。SBDを使用するには共有ストレージが必要です。
     </para> </listitem>
    </varlistentry>
   </variablelist>
 </sect2>
  <sect2 xml:id="il-ha-inst-quick-req-sw">
   <title>ソフトウェアの必要条件</title>
   <para>
   クラスタの一部になるすべてのノードには、少なくとも次のモジュールと拡張機能が含まれている必要があります。
  </para>

<itemizedlist>
   <listitem>
    <para>Basesystem Module <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase></para>
   </listitem>
   <listitem>
    <para>Server Applications Module <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase></para>
   </listitem>
   <listitem>
    <para><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase></para>
   </listitem>
  </itemizedlist>

  </sect2>
  <sect2 xml:id="vl-ha-inst-quick-req-other">
   <title>その他の要件と推奨事項</title>
   <variablelist>
    <varlistentry>
     <term>時刻同期</term>  <listitem>
   <para>
     クラスタノードはクラスタ外のNTPサーバに同期する必要があります。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> 15以降、Chronyは、NTPでデフォルトで実装されるようになりました。詳細については、<link xlink:href="https://documentation.suse.com/sles-15/html/SLES-all/cha-ntp.html">SUSE Linux Enterprise Server <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase>の<citetitle>『管理ガイド』</citetitle></link>を参照してください。
    </para>
    <para>
     ノードが同期されていない場合、クラスタが正常に動作しないことがあります。また、同期が行われていないと、ログファイルとクラスタレポートの分析が非常に困難になります。ブートストラップスクリプトを使用するときにNTPがまだ設定されていない場合、警告が表示されます。
    </para>
  </listitem> </varlistentry>
    <varlistentry>
     <term>ホスト名およびIPアドレス</term>
     <listitem>
      <itemizedlist>
       <listitem>
        <para> 静的IPアドレスを使用します。 </para>
       </listitem>
       <listitem>  <para>
     <filename>/etc/hosts</filename>ファイルにあるすべてのクラスタノードを、完全修飾ホスト名およびショートホスト名で一覧表示します。クラスタのメンバーが名前で互いを見つけられることが重要です。名前を使用できない場合、内部クラスタ通信は失敗します。
   </para> </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SSH</term>
     <listitem>  <para>
    すべてのクラスタノードはSSHによって互いにアクセスできる必要があります。<command>crm report</command> (トラブルシューティング用)などのツールおよびHawk2の<guimenu>履歴エクスプローラ</guimenu>は、ノード間でパスワード不要のSSHアクセスを必要とします。それがない場合、現在のノードからしかデータを収集できません。
  </para> <para> クラスタのセットアップにブートストラップスクリプトを使用した場合、SSHキーは自動的に作成されてコピーされます。 </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
  </sect1>

 <sect1 xml:id="sec-ha-inst-quick-bootstrap">
  <title>ブートストラップスクリプトの概要</title>
  <para>
   次のコマンドは、最低限の時間と手動介入しか必要のないブートストラップスクリプトを実行します。
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <command>crm cluster init</command>を使用して、クラスタ通信に必要な基本パラメータを定義します。これによって1ノードクラスタの実行が可能になります。
    </para>
   </listitem>
   <listitem>
    <para>
     <command>crm cluster join</command>を使用して、クラスタにノードを追加します。
    </para>
   </listitem>
   <listitem>
    <para>
     <command>crm cluster remove</command>を使用して、クラスタからノードを削除します。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   すべてのブートストラップスクリプトは<filename>/var/log/crmsh/crmsh.log</filename>にログを記録します。ブートストラッププロセスの詳細については、このファイルを確認してください。ブートストラッププロセス中に設定されたオプションは、YaSTクラスタモジュールで後で変更できます。詳細については<xref linkend="cha-ha-ycluster"/>を参照してください。
  </para>
  <para>
   ブートストラップスクリプト<command>crm cluster init</command>が確認および設定するコンポーネントは、次のとおりです。
  </para>

  <variablelist>
   <varlistentry>
    <term>NTP</term>
    <listitem>
     <para>
      NTPがブート時に開始するよう設定されていない場合、メッセージが表示されます。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> 15以降、Chronyは、NTPでデフォルトで実装されるようになりました。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SSH</term>
    <listitem>
     <para>クラスタノード間でパスワード不要のログインを行うためのSSHキーを作成します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Csync2</term>
    <listitem>
     <para>
      クラスタ内のすべてのノードで設定ファイルを複製するようにCsync2を設定します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Corosync</term>
    <listitem>
     <para>クラスタ通信システムを設定します。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SBD/ウォッチドッグ</term>
    <listitem>
     <para>ウォッチドッグが存在するかどうかをチェックし、SBDをノードフェンシングメカニズムとして設定するかどうか確認メッセージを表示します。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>仮想浮動IP</term>
    <listitem>
     <para>Hawk2でのクラスタ管理用の仮想IPアドレスを設定するかどうか確認メッセージを表示します。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ファイアウォール</term>
    <listitem>
     <para>クラスタ通信に必要なポートをファイアウォールで開きます。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>クラスタ名</term>
    <listitem>
     <para>クラスタの名前を定義します。デフォルトでは<systemitem>hacluster</systemitem>です。これはオプションで、主にGeoクラスタで役立ちます。通常、クラスタ名は場所を反映し、Geoクラスタ内のサイトを識別しやすくします。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>QDevice/QNetd</term>
    <listitem>
     <para>
      このセットアップについてはここでは説明しません。QNetdサーバを使用するには、<xref linkend="cha-ha-qdevice"/>の説明に従って、ブートストラップスクリプトを使用して設定します。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

  <sect1 xml:id="sec-ha-inst-quick-installation">
    <title><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase>のインストール</title>
    <para>
      High Availability Extensionでクラスタの設定と管理を行うためのパッケージは、<literal>High Availability</literal>インストールパターン(コマンドラインでは<literal>sles_ha</literal>で指定)に含まれています。このパターンは、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase>がSUSE® Linux Enterprise Serverの拡張としてインストールされている場合にのみ使用できます。
    </para>
    <para>
      拡張をインストールする方法の詳細については、<link xlink:href="https://documentation.suse.com/sles/html/SLES-all/cha-add-ons.html">SUSE Linux Enterprise Server <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase>の<citetitle>『導入ガイド』</citetitle></link>を参照してください。
    </para>

    <procedure xml:id="pro-ha-inst-quick-pattern">
      <title><literal>High Availability</literal>パターンのインストール</title>
       <para>
        このパターンがまだインストールされていない場合は、次の手順に従います。
       </para>
      <step>
       <para>
        次のように、Zypperを使用してコマンドラインでインストールします。</para>
<screen><prompt role="root">root # </prompt><command>zypper</command> install -t pattern ha_sles</screen>
      </step>
      <step>
       <para>
          クラスタの一部になる<emphasis>すべての</emphasis>マシンにHigh Availabilityパターンをインストールします。
       </para>
       <note>
        <title>すべてのパーティへのソフトウェアパッケージのインストール</title>
        <para>
         SUSE Linux Enterprise Server <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase>および<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase>
         <phrase role="productnumber"><phrase os="sles"> 15 SP4</phrase></phrase>を自動インストールする場合は、AutoYaSTを使用して既存のノードのクローンを作成します。AutoYaSTを使用して既存のノードをクローンします。詳細については、<xref linkend="sec-ha-installation-autoyast"/>を参照してください。
        </para>
       </note>
      </step>
      <step>
       <para>
         SUSEカスタマセンターにマシンを登録します。詳細については、<link xlink:href="https://documentation.suse.com/sles/html/SLES-all/cha-upgrade-offline.html#sec-update-registersystem">SUSE Linux Enterprise Server <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase>の<citetitle>『アップグレードガイド』</citetitle></link>を参照してください。
       </para>
      </step>
    </procedure>
  </sect1>

 <sect1 xml:id="sec-ha-inst-quick-sbd">
  <title>フェンシングメカニズムとしてのSBDの使用</title>
  

   <para>
    SAN (ストレージエリアネットワーク)などの共有ストレージが存在する場合、それらのストレージを使用してスプリットブレインシナリオを回避できます。そのためには、SBDをノードのフェンシングメカニズムとして設定します。SBDは、ウォッチドッグサポートと<literal>external/sbd</literal> STONITHリソースエージェントを使用します。
   </para>

  <sect2 xml:id="sec-ha-inst-quick-sbd-req">
   <title>SBDの要件</title>
   <para>
    <command>crm cluster init</command>で最初のノードをセットアップする際に、SBDを使用するかどうかを決定できます。使用する場合、共有ストレージデバイスのパスを入力する必要があります。デフォルトで、<command>crm cluster init</command>は、SBDに使用するデバイス上に自動的に小容量のパーティションを作成します。
   </para>
   <para>SBDを使用するには、次の要件を満たしている必要があります。</para>

   <itemizedlist>
    <listitem>
     <para>共有ストレージデバイスのパスが永続的で、クラスタ内のすべてのノードで一致している必要があります。<filename>/dev/disk/by-id/dm-uuid-part1-mpath-abcedf12345</filename>などの固定デバイス名を使用してください。
     </para>
    </listitem>
    <listitem>
     <para> SBDデバイスでホストベースのRAIDやLVM2を使用したり、SBDデバイスをDRBD*インスタンス上に存在させることは「できません」。<emphasis></emphasis>
     </para>
    </listitem>
   </itemizedlist>

  <para>
   共有ストレージの設定方法の詳細については、<link xlink:href="https://documentation.suse.com/sles/html/SLES-all/book-storage.html">SUSE Linux Enterprise Server <phrase role="productnumber"><phrase os="sles">15 SP4</phrase></phrase>の<citetitle>『Storage Administration Guide』</citetitle></link>を参照してください。
  </para>
  
  </sect2>

  <sect2 xml:id="sec-ha-inst-quick-sbd-setup">
   <title>SBDのsoftdogウォッチドッグの有効化</title>
   
   <para>
    SUSE Linux Enterprise Serverでは、カーネル内のウォッチドッグサポートはデフォルトで有効化されています。これは、ハードウェア固有のウォッチドッグドライバを提供する、さまざまなカーネルモジュールを標準装備しています。High Availability Extensionはウォッチドッグに<quote>フィード</quote>するソフトウェアコンポーネントとしてSBDデーモンを使用します。
   </para>
   <para>
    次の手順では、<systemitem>softdog</systemitem>ウォッチドッグを使用します。
   </para>

   
   <important>
    <title>softdogの制限</title>
    <para>
     softdogドライバはCPUが最低1つは動作中であることを前提とします。すべてのCPUが固まっている場合、システムを再起動させるsoftdogドライバのコードは実行されません。これに対して、ハードウェアウォッチドッグはすべてのCPUが固まっていても動作し続けます。
    </para>
    <para>運用環境でクラスタを使用する前に、<systemitem>softdog</systemitem>モジュールを、ご使用のハードウェアに最適なハードウェアモジュールに置き換えることを強くお勧めします。
    </para>
    <para>ただし、ハードウェアに適合するウォッチドッグがない場合、カーネルウォッチドッグモジュールとして<systemitem class="resource">softdog</systemitem>を使用することができます。</para>
   </important>

   <procedure xml:id="pro-ha-inst-quick-sbd-setup">
    <step>
     <para>
      <xref linkend="sec-ha-inst-quick-sbd-req"/>の説明に従って、永続的な共有ストレージを作成します。
     </para>
    </step>
    <step>
     <para>
      softdogウォッチドッグを有効にします。
     </para>
     
     <screen><prompt role="root">root # </prompt><command>echo</command> softdog &gt; /etc/modules-load.d/watchdog.conf
<prompt role="root">root # </prompt><command>systemctl</command> restart systemd-modules-load</screen>
    </step>
    <step>
      
     <para>softdogモジュールが正しくロードされているかどうかをテストします。
     </para>
     <screen><prompt role="root">root # </prompt><command>lsmod</command> | grep dog
softdog                16384  1</screen>
    </step>
  </procedure>

   <remark>toms 2018-04-05: we need to add a bit more info here how you do
    the tests and what to do when it fails.
    However, this needs some further info from our developers. Some info can
    be found in ha_storage_protection.xml.
    Usually it boils down to "sbd -d DEV list" and "sbd -d DEV message bob test"
   </remark>
   <para>
    スプリットシナリオを避けるために、SBDフェンシングメカニズムが正常に機能しているかどうかをテストすることを強くお勧めします。このテストを実行するには、Corosyncクラスタ通信をブロックします。
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-ha-inst-quick-setup-1st-node">
  <title>最初のノードの設定</title>
   <para>
   <command>crm cluster init</command>スクリプトで最初のノードを設定します。ここでは最小限の時間と手動介入しか必要ありません。
  </para>

  <procedure xml:id="pro-ha-inst-quick-setup-crm-cluster-init">
   <title><command>crm cluster init</command>を使用して最初のノード(<systemitem class="server">alice</systemitem>)を設定する</title>
   <step>
    <para>
     クラスタノードとして使用する物理または仮想マシンに<systemitem class="username">root</systemitem>としてログインします。
    </para>
   </step>
   <step>
    <para>
     実行によって、ブートストラップスクリプトを開始します。
    </para>
    <screen><prompt role="root">root # </prompt><command>crm cluster init</command> --name <replaceable>CLUSTERNAME</replaceable></screen>
    <para><replaceable>CLUSTERNAME</replaceable>プレースホルダを、クラスタの地理的な場所のような、意味のある名前で置き換えます(たとえば、<literal>amsterdam</literal>)。これによってサイトを識別しやすくなるため、後でGeoクラスタを作成する場合に特に役立ちます。
    </para>
    <para>
     クラスタ通信にユニキャスト(デフォルト)の代わりにマルチキャストが必要な場合は、オプション<option>--multicast</option>(または<option>-U</option>)を使用します。
    </para>
    <para>
     このスクリプトは、NTP設定とハードウェアウォッチドッグサービスを確認します。また、SSHアクセスとCsync2の同期に使用される公開および秘密SSHキーが生成され、それぞれのサービスが起動されます。
    </para>
    
   </step>
   <step>
    <para>
     クラスタ通信層(Corosync)を設定します。
    </para>
    <substeps>
     <step>
      <para>
       バインドするネットワークアドレスを入力します。デフォルトでは、スクリプトは<systemitem>eth0</systemitem>のネットワークアドレスを提案します。または、たとえば<literal>bond0</literal>のアドレスなど、別のネットワークアドレスを入力します。
      </para>
     </step>
     <step>
      <para>
       提案されたポート(<literal>5405</literal>)を受け入れるか、別のポートを入力します。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
    SBDをノードフェンシングメカニズムとして設定します。</para>
    <substeps>
     <step>
      <para>&lt;<literal>y</literal>&gt;キーを押して、SBDを使用することを確認します。</para>
     </step>
     <step>
      <para>SBDに使用するブロックデバイスのパーティションの永続的なパスを入力します。<xref linkend="sec-ha-inst-quick-sbd"/>を参照してください。パスはクラスタ内のすべてのノード全体で一致している必要があります。</para>
     </step>
    </substeps>
   </step>
   <step xml:id="st-crm-cluster-init-ip">
    
    <para>Hawk2でクラスタを管理するための仮想IPアドレスを設定します(この仮想IPリソースは、後でフェールオーバーが正常に実行されるかどうかをテストするために使用します)。</para>
    <substeps>
     <step>
      <para>&lt;<literal>y</literal>&gt;キーを押して、仮想IPアドレスを設定することを確認します。</para></step>
     <step>
      <para>Hawk2の管理IPとして使用する、未使用のIPアドレス(<literal>192.168.2.1</literal>)を入力します。
      </para>
      <para>Hawk2で個々のクラスタノードにログインする代わりに、その仮想IPアドレスに接続できるようになります。</para>
     </step>
    </substeps>
   </step>
  </procedure>
  <para>
   最後に、スクリプトはPacemakerサービスを開始し、クラスタをオンラインにして、Hawk2を有効にします。Hawk2に使用するURLが画面に表示されます。
  </para>

  <para>
   1ノードクラスタが実行するようになります。状態を表示するには、次の手順に従います。
  </para>
  <procedure xml:id="pro-ha-inst-quick-hawk2-login">
   <title>Hawk2 Webインタフェースへのログイン</title>
   <step>
    <para> 任意のコンピュータで、Webブラウザを起動し、JavaScriptとクッキーが有効なことを確認します。 </para>
   </step>
   <step>
    <para> URLとして、Hawk Webサービスを実行するクラスタノードのIPアドレスまたはホスト名を入力します。または、<xref linkend="pro-ha-inst-quick-setup-crm-cluster-init"/>の<xref linkend="st-crm-cluster-init-ip"/>で設定した仮想IPアドレスのアドレスを入力します。 </para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    <note>
     <title>証明書の警告</title>
     <para> 初めてURLにアクセスしようとするときに証明書の警告が表示される場合は、自己署名証明書が使用されています。自己署名証明書は、デフォルトでは信頼されません。 </para>
     <para> 証明書を検証するための詳細情報については、クラスタのオペレータに問い合わせてください。 </para>
     <para> 続行するには、ブラウザに例外を追加して警告をバイパスします。 </para>
     
    </note>
   </step>
   <step>
    <para> Hawk2のログイン画面で、ブートストラップ手順で作成されたユーザの<guimenu>ユーザ名</guimenu>と<guimenu>パスワード</guimenu>を入力します(ユーザ<systemitem class="username">hacluster</systemitem>、パスワード<literal>linux</literal>)。</para>
    <important>
     <title>セキュリティ保護されたパスワード</title>
     <para>デフォルトのパスワードはできるだけ早くセキュリティ保護されたパスワードに変更します。
     </para>
     <screen><prompt role="root">root # </prompt><command>passwd</command> hacluster</screen>
    </important>
   </step>
   <step>
    <para>
     <guimenu>ログイン</guimenu>をクリックします。ログイン後、Hawk2 Webインタフェースに［ステータス］画面がデフォルトで表示され、クラスタの現在の状態の概要が表示されます。
    </para>
    <figure xml:id="fig-ha-inst-quick-one-node-status">
     <title>Hawk2の1ノードクラスタの状態</title>
     <mediaobject>
      <imageobject>
       <imagedata width="80%" fileref="installquick-one-nodecluster.png"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-ha-inst-quick-setup-2nd-node">
  <title>2つ目のノードの追加</title>
  <para>
    1ノードクラスタが正常に稼働している場合、<xref linkend="pro-ha-inst-quick-setup-crm-cluster-join" xrefstyle="select:label nopage"/>に従って、<command>crm cluster join</command>ブートストラップスクリプトを使用して2つ目のクラスタノードを追加します。スクリプトは既存のクラスタノードへのアクセスのみが必要で、ご使用のマシンで自動的に基本セットアップを完了します。詳細については、<command>crm cluster join</command>のマニュアルページを参照してください。
  </para>
  <para>
   ブートストラップスクリプトは、SBDやCorosyncなど、2ノードクラスタに固有な設定を変更します。ブートストラップスクリプトは、SBDやCorosyncなど、2ノードクラスタに固有な設定を変更するために使用します。
  </para>
  <procedure xml:id="pro-ha-inst-quick-setup-crm-cluster-join">
   <title><command>crm cluster join</command>を使用して2つ目のノード(<systemitem class="server">bob</systemitem>)を追加する</title>
   <step>
    <para>
     クラスタを参加させることになる物理または仮想マシンに<systemitem class="username">root</systemitem>としてログインします。
    </para>
   </step>
   <step>
    <para>
     実行によって、ブートストラップスクリプトを開始します。
    </para>
<screen><prompt role="root">root # </prompt><command>crm cluster join</command></screen>
    <para>
     NTPがブート時に開始するよう設定されていない場合、メッセージが表示されます。このスクリプトは、ハードウェアウォッチドッグデバイスも確認します(SBDを設定する場合は重要です)。デバイスがないときは警告が表示されます。
    </para>
   </step>
   <step>
    <para>
     それでも継続を選択する場合、既存のノードのIPアドレスが求められます。最初のノードのIPアドレスを入力します(<systemitem class="server">alice</systemitem>、<systemitem class="ipaddress">192.168.1.1</systemitem>)。
    </para>
   </step>
   <step>
    <para>
     両方のマシン間にパスワードなしのSSHアクセスを設定していない場合、既存のノードの<systemitem class="username">root</systemitem>パスワードが求められます。
    </para>
    <para>
     指定されたノードにログインした後、スクリプトはCorosync設定をコピーし、SSH、Csync2を設定して、新しいクラスタノードとしてご使用のマシンをオンラインにします。それとは別に、Hawk2に必要なサービスを開始します。 
    </para>
   </step>
  </procedure>
  <para>
   Hawk2でクラスタの状態を確認します。<menuchoice>
    <guimenu>ステータス</guimenu>
    <guimenu> ノード</guimenu>
   </menuchoice> に、2つのノードが緑色の状態で表示されます(<xref linkend="fig-ha-inst-quick-two-node-cluster"/>を参照してください)。
  </para>

  <figure xml:id="fig-ha-inst-quick-two-node-cluster">
   <title>2ノードクラスタの状態</title>
   <mediaobject>
    <imageobject>
     <imagedata width="80%" fileref="installquick-two-nodecluster-status.png"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>

  <sect1 xml:id="sec-ha-inst-quick-test">
   <title>クラスタのテスト</title>
   <para>
    <xref linkend="sec-ha-inst-quick-test-resource-failover"/>は、現在リソースを実行しているノードを<literal>standby</literal>に設定した場合に、クラスタによって仮想IPアドレスが他方のノードに移動されるかどうかを確認する簡単なテストです。
   </para>
   <para>ただし、現実的なテストでは、スプリットブレイン状況を回避するフェンシングメカニズムのテストなど、特定のユースケースとシナリオが含まれます。フェンシングメカニズムを正しく設定していない場合、クラスタは正常に動作しません。</para>
   <para>運用環境でクラスタを使用する前に、ユースケースに応じて、または<command>ha-cluster-preflight-check</command>スクリプトを使用して、クラスタを十分にテストしてください。
    
   </para>
   <sect2 xml:id="sec-ha-inst-quick-test-resource-failover">
    <title>リソースフェールオーバーのテスト</title>
    <para>
     簡単なテストとして、次の手順でリソースフェールオーバーを確認します。
    </para>
   <remark>toms 2016-07-27: Fate#321073
    Tool for Standardize Testing of Basic Cluster Functionality</remark>
   <procedure xml:id="pro-ha-inst-quick-test">
    <title>リソースフェールオーバーのテスト</title>
    <step>
     <para>
      ターミナルを開き、使用している仮想IPアドレス<systemitem>192.168.2.1</systemitem>に対してpingを実行します。
     </para>
     <screen><prompt role="root">root # </prompt><command>ping</command> 192.168.2.1</screen>
    </step>
    <step>
     <para>
      <xref linkend="pro-ha-inst-quick-hawk2-login"/>の説明に従って、クラスタにログインします。
     </para>
    </step>
    <step>
     <para>
      Hawk2の<menuchoice>
       <guimenu>ステータス</guimenu>
       <guimenu> リソース</guimenu>
      </menuchoice> で、仮想IPアドレス(リソース<systemitem>admin_addr</systemitem>)がどのノードで実行されているかを確認します。ここでは、リソースが<systemitem class="server">alice</systemitem>で実行されていることを想定しています。
      </para>
    </step>
    <step>
     <para>
      <systemitem class="server">alice</systemitem>を<guimenu>スタンバイ</guimenu>モードにします(<xref linkend="fig-ha-inst-quick-standby"/>を参照してください)。
     </para>
     <figure xml:id="fig-ha-inst-quick-standby">
      <title>スタンバイモードのノード<systemitem class="server">alice</systemitem></title>
      <mediaobject>
       <imageobject>
        <imagedata width="60%" fileref="installquick-standby-node.png"/>
       </imageobject>
      </mediaobject>
     </figure>
     
    </step>
    <step>
     <para>
      <menuchoice>
       <guimenu>ステータス</guimenu>
       <guimenu>リソース</guimenu>
      </menuchoice> の順にクリックします。リソース<systemitem>admin_addr</systemitem>は<systemitem class="server">bob</systemitem>にマイグレートされました。
     </para>
    </step>
   </procedure>
   <para>
    マイグレーション中は、仮想IPアドレスに対して連続してpingが実行されます。これは、クラスタセットアップと浮動IPが正常に機能していることを示します。<command>を押して</command>ping<keycombo>
       <keycap function="control"/><keycap>C</keycap>
      </keycombo>コマンドをキャンセルします。
   </para>
   </sect2>

   <sect2 xml:id="sec-ha-inst-quick-test-with-cluster-script">
    <title>ha-cluster-preflight-checkコマンドを使用したテスト</title>
    <para>
     コマンド<command>ha-cluster-preflight-check</command>は、クラスタの標準化されたテストを実行します。クラスタ障害をトリガーし、設定を検証して問題を検出します。クラスタを運用環境で使用する前に、このコマンドを使用して、すべてが予期するように動作しているか確認することをお勧めします。
    </para>
    <para>
     このコマンドは以下のチェックをサポートします。
    </para>
    <itemizedlist>
     <listitem>
      <formalpara>
       <title>環境チェック: <option>-e</option>/<option>--env-check</option>。</title>
       <para>
        このテストは次をチェックします。
       </para>
      </formalpara>
      <itemizedlist>
       <listitem>
        <para> ホスト名は解決できますか? </para>
       </listitem>
       <listitem>
        <para>
         タイムサービスは有効になっていて、開始されていますか?
        </para>
       </listitem>
       <listitem>
        <para>
         現在のノードにはウォッチドッグが設定されていますか?
        </para>
       </listitem>
       <listitem>
        <para>
         <command>firewalld</command>サービスが開始されていて、クラスタ関連のポートが開いていますか?
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
     <listitem>
      <formalpara>
       <title>クラスタの状態チェック: <option>-c</option>/<option>--cluster-check</option>。</title>
       <para> クラスタのさまざまな状態とサービスをチェックします。このテストは次をチェックします。</para>
      </formalpara>
      <itemizedlist>
       <listitem>
        <para>
         クラスタサービス(Pacemaker/Corosync)が有効になっていて、実行されていますか?
        </para>
       </listitem>
       <listitem>
        <para>
         STONITHが有効になっていますか? STONITH関連のリソースが設定されていて、開始されているかどうかもチェックします。SBDを設定している場合、SBDサービスは開始されていますか?
        </para>
       </listitem>
       <listitem>
        <para>
         クラスタにはクォーラムがありますか? 現在のDCノードと、オンライン、オフライン、およびアンクリーンなノードを表示します。
        </para>
       </listitem>
       <listitem>
        <para>
         開始した、停止した、あるいは障害が発生しているリソースがありますか?
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
     <listitem>
      <formalpara>
       <title>スプリットブレインチェック: <option>--split-brain-iptables</option>。</title>
       <para>
        Corosyncポートをブロックすることにより、スプリットブレインシナリオをシミュレートします。1つのノードが予期されるようにフェンシングできるかどうかをチェックします。
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title>SBD、Corosync、およびPacemakerのデーモンを強制終了する: <option>-kill-sbd</option>/<option>-kill-corosync</option>/<option>-kill-pacemakerd</option>。</title>
       <para>
        このようなテストを実行した後で、レポートを<filename>/var/lib/ha-cluster-preflight-check</filename>で見つけることができます。このレポートには、テストケースの説明、アクションのログ記録が含まれ、起こり得る結果が説明されています。
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title>フェンスノードチェック: <option>--fence-node</option>。</title>
       <para>コマンドラインから渡される特定のノードをフェンスします。</para>
      </formalpara>
     </listitem>
    </itemizedlist>
    <para>
     たとえば、環境をテストするには、次のコマンドを実行します。
    </para>
    <screen><prompt role="root">root # </prompt><command>crm_mon -1</command>
Stack: corosync
Current DC: alice (version ...) - partition with quorum
Last updated: Fri Mar 03 14:40:21 2020
Last change: Fri Mar 03 14:35:07 2020 by root via cibadmin on alice

2 nodes configured
1 resource configured

Online: [ alice bob ]
Active resources:

 stonith-sbd    (stonith:external/sbd): Started alice

<prompt role="root">root # </prompt><command>ha-cluster-preflight-check</command> -e
[2020/03/20 14:40:45]INFO: Checking hostname resolvable [Pass]
[2020/03/20 14:40:45]INFO: Checking time service [Fail]
 INFO: chronyd.service is available
 WARNING: chronyd.service is disabled
 WARNING: chronyd.service is not active
[2020/03/20 14:40:45]INFO: Checking watchdog [Pass]
[2020/03/20 14:40:45]INFO: Checking firewall [Fail]
 INFO: firewalld.service is available
 WARNING: firewalld.service is not active</screen>
    <para>
     <filename>/var/log/ha-cluster-preflight-check.log</filename>で結果を検査することができます。
    </para>
   </sect2>
  </sect1>

  <sect1 xml:id="sec-ha-inst-quick-moreinfo">
   <title>詳細の参照先</title>
    <para>
     本製品の他のマニュアルは、<link xlink:href="https://documentation.suse.com/sle-ha/"/>で入手できます。設定および管理タスクの詳細については、包括的な<link xlink:href="https://documentation.suse.com/sle-ha/html/SLE-HA-all/book-sleha-guide.html"><citetitle>『管理ガイド』</citetitle></link>を参照してください。
    </para>
   </sect1>
 <xi:include href="common_copyright_quick.xml"/>
 <xi:include href="common_legal.xml"/>
</article>
