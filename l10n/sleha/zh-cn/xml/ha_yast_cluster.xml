<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_yast_cluster.xml" version="5.0" xml:id="cha-ha-ycluster">
<?dbfo-need height="20em"?>

 <title>使用 YaST 群集模块</title>
 <info>
  <abstract>
   <para>使用 YaST 群集模块，您可以手动从头设置群集，或修改现有群集的选项。
   </para>
  </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-ha-installation-terms">
  <title>术语定义</title>

  <para>
   下面定义了 YaST 群集模块和本章中使用的多个关键术语。
  </para>

  <variablelist>
   <varlistentry>
    <term>绑定网络地址 (<systemitem>bindnetaddr</systemitem>)
    </term>
    <listitem>
     <para>
      Corosync 管理器应绑定的网络地址。为方便在群集间共享配置文件，Corosync 使用网络接口网络掩码来仅屏蔽用于路由网络的地址位。例如，如果本地接口是 <literal>192.168.5.92</literal> 并且网络掩码是 <literal>255.255.255.0</literal>，则 <systemitem>bindnetaddr</systemitem> 将设置为 <literal>192.168.5.0</literal>。例如，如果本地接口是 <literal>192.168.5.92</literal> 并且网络掩码是 <literal>255.255.255.192</literal>，则 <systemitem>bindnetaddr</systemitem> 将设置为 <literal>192.168.5.64</literal>。
     </para>
     <para> 如果在 <filename>/etc/corosync/corosync.conf</filename> 中明确配置了包含 <systemitem>ringX_addr</systemitem> 的 <systemitem>nodelist</systemitem>，则不一定需要 <systemitem>bindnetaddr</systemitem>。</para>
     <note>
      <title>适用于所有节点的网络地址</title>
      <para>
       由于所有节点上都会使用相同的 Corosync 配置，请务必使用 <systemitem>bindnetaddr</systemitem> 之类的网络地址，不要使用特定网络接口地址。
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><systemitem class="resource">conntrack</systemitem> 工具</term>
    <listitem>
     <para>
      可与内核中连接跟踪系统交互，以便对 iptables 启用<emphasis>有状态</emphasis>数据包检测。SUSE Linux Enterprise High Availability 使用它们在群集节点间同步连接状态。有关详细信息，请参见 <link xlink:href="https://conntrack-tools.netfilter.org/"></link>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Csync2</term>
    <listitem>
     <para>
      可用于在群集中的所有节点间（甚至在 Geo 群集间）复制配置文件的同步工具。Csync2 可处理排入同步组的任意数量的主机。每个同步组都有自己的成员主机列表及其包含/排除模式，包含/排除模式定义了在同步组中应同步哪些文件。同步组、属于每个组的主机名以及每个组的包含/排除规则均在 Csync2 配置文件 <filename>/etc/csync2/csync2.cfg</filename> 中指定。
     </para>
     <para>
      对于身份验证，Csync2 使用 IP 地址和同步组中的预共享密钥。需要为每个同步组生成一个密钥文件，并将其复制到所有组成员。
     </para>
     <para>
      有关 Csync2 的详细信息，请参见 <link xlink:href="https://oss.linbit.com/csync2/paper.pdf"></link>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>现有群集</term>
    <listitem>
     <para>
        <quote>现有群集</quote>一词指的是至少包含一个节点的任何群集。现有群集具有定义通讯通道的基本 Corosync 配置，但它们不一定已有资源配置。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
     <term>启发</term>
     <listitem>
       <para>
        QDevice 支持一组命令（即<quote>启发</quote>）。这些命令在发生以下情况时在本地执行：当群集服务启动、群集成员资格发生变化、成功连接到 QNetd 服务器时，或（可选）定期执行。
     </para>
     <para>
        仅当所有命令都成功执行时，才会视为已通过启发，否则视为启发失败。启发的结果会发送到 QNetd 服务器，用于计算哪个部分应具有法定票数。
       </para>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term>多播</term>
    <listitem>
     <para>
        一种用于网络内一对多通讯的技术，可用于群集通讯。Corosync 支持多播和单播。
     </para>
     <note>
      <title>交换机和多播</title>
      <para>
       要使用多播进行群集通讯，请确保交换机支持多播。
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-ha-mcastaddr">
    <term>多播地址 (<systemitem>mcastaddr</systemitem>)
   </term>
    <listitem>
     <para>
        Corosync 管理器使用 IP 地址进行多播。IP 地址可以为 IPv4 或 IPv6。如果使用 IPv6 网络，则必须指定节点 ID。可以使用专用网内的任何多播地址。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>多播端口 (<systemitem>mcastport</systemitem>)</term>
    <listitem>
     <para>
        用于群集通讯的端口。Corosync 使用两个端口：用于接收多播的指定 <literal>mcastport</literal> 和用于发送多播的 <literal>mcastport -1</literal>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
     <term>QDevice</term>
     <listitem>
       <para>
        每个群集节点上与 Corosync 一起运行的 systemd 服务（守护程序）。这是 QNetd 服务器的客户端。其主要用途是让群集能够承受大于标准仲裁规则所允许的节点故障数量。
     </para>
     <para>
        QDevice 可以与不同的仲裁方配合工作，但目前仅支持与 QNetd 配合工作。
       </para>
     </listitem>
   </varlistentry>
   <varlistentry>
     <term>QNetd</term>
     <listitem>
       <para>
        它是一项 systemd 服务（即 <quote>QNetd 服务器</quote>守护程序），并非群集的一部分。该 systemd 服务用于向 QDevice 守护程序提供投票。
     </para>
     <para>
        要提高安全性，可以将 QNetd 与 TLS 搭配使用来检查客户端证书。
       </para>
     </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-ha-rrp">
    <term>Redundant Ring Protocol (RRP)</term>
    <listitem>
     <para>
       该协议支持使用多个冗余局域网来从部分或整体网络故障中恢复。这样，只要一个网络运行正常，群集通讯就仍可继续。Corosync 支持 Totem Redundant Ring Protocol。所有参与节点上都强制实施逻辑令牌传递环以确保可靠且有序地传递消息。只有拥有令牌的节点才允许广播消息。
     </para>
     <para>
      在 Corosync 中定义了冗余通讯通道后，使用 RRP 告知群集如何使用这些接口。RRP 有三种模式 (<literal>rrp_mode</literal>)：
     </para>
     <itemizedlist>
      <listitem>
       <para>
        如果设置为 <literal>active</literal>，则 Corosync 将主动使用这两个接口。但是，此模式已弃用。
       </para>
      </listitem>
      <listitem>
       <para>
        如果设置为 <literal>passive</literal>，Corosync 将选择性地通过可用网络发送消息。
       </para>
      </listitem>
      <listitem>
       <para>
        如果设置为 <literal>none</literal>，将会禁用 RRP。
       </para>
      </listitem>
     </itemizedlist>
     
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>单播</term>
    <listitem>
     <para>
        一种将消息发送到单个网络目标的技术。Corosync 支持多播和单播。在 Corosync 中，单播作为 UDP 单播 (UDPU) 实施。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-ha-setup-yast-overview">
   <title>启动 YaST <guimenu>群集</guimenu>模块</title>
   <para>
    启动 YaST 并选择<menuchoice><guimenu>高可用性</guimenu> <guimenu>群集</guimenu></menuchoice>，或者在命令行中启动该模块：
   </para>
  <screen><prompt role="root"># </prompt><command>yast2 cluster</command></screen>
  <para>
    如果是首次启动群集模块，它会显示为向导，引导您完成进行基本设置所需的所有步骤。否则，请选择左侧面板上的相应类别来访问每个步骤的配置选项。
  </para>
  <para>
   下面的列表显示了 YaST 群集模块中可用屏幕的概述。它还指出了屏幕是否包含成功设置群集<emphasis>所需</emphasis>的参数，或其参数是否<emphasis>可选</emphasis>。如果您正在按照首次设置向导进行操作，则屏幕将按照下面所列的顺序显示。
  </para>
  <variablelist>
   <varlistentry>
    <term>通讯通道（必需）</term>
    <listitem>
     <para> 允许您定义用于在群集节点之间进行通讯的一个或两个通讯通道。对于传输协议，请使用多播 (UDP) 或单播 (UDPU)。有关详细信息，请参见 <xref linkend="sec-ha-installation-setup-channels"/>。</para>
     <important>
      <title>冗余通讯路径</title>
      <para>对于支持的群集设置，要求有两个或更多冗余通讯路径。首选方式是使用网络设备绑定。如果不可行，则必须在 Corosync 中定义另一个通讯通道。</para>
     </important>
    </listitem>
   </varlistentry>
   <varlistentry>
     <term>Corosync QDevice（可选，但建议为节点数为偶数的群集配置）</term>
     <listitem>
       <para>
        用于将 QDevice 配置为 QNetd 服务器的客户端，以参与仲裁决定。建议为节点数为偶数的群集（特别是双节点群集）配置。有关详细信息，请参见 <xref linkend="sec-ha-installation-setup-qdevice"/>。
       </para>
     </listitem>
   </varlistentry>
   <varlistentry>
      <term>安全性（可选但建议使用）</term>
      <listitem>
       <para>允许您定义群集的身份验证设置。HMAC/SHA1 身份验证需要使用共享机密来保护和验证讯息。有关详细信息，请参见 <xref linkend="sec-ha-installation-setup-security"/>。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
       <term>配置 Csync2（可选但建议使用）</term>
       <listitem>
     <para>
      Csync2 将帮助您跟踪配置更改，并在群集节点之间保持文件同步。如果您是第一次使用 YaST 设置群集，我们强烈建议您配置 Csync2。如果不使用 Csync2，则必须手动将第一个节点上的所有配置文件都复制到群集中的其余节点上。有关详细信息，请参见 <xref linkend="sec-ha-installation-setup-csync2"/>。
     </para>
       </listitem>
      </varlistentry>
      <varlistentry>
        <term>配置 conntrackd（可选）</term>
        <listitem>
         <para>
          可让您配置用户空间 <systemitem class="daemon">conntrackd</systemitem>。使用 conntrack 工具为 iptables 进行<emphasis>有状态</emphasis>数据包检测。有关详细信息，请参见 <xref linkend="sec-ha-installation-setup-conntrackd"/>。
         </para>
        </listitem>
      </varlistentry>
   <varlistentry>
    <term>服务（必需）</term>
    <listitem>
     <para>
      允许您配置服务以使群集节点上线。定义是否在引导时启动群集服务，以及是否在防火墙中打开节点之间通讯所需的端口。有关详细信息，请参见 <xref linkend="sec-ha-installation-setup-services"/>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
   <note>
    <title>YaST <guimenu>群集</guimenu>模块中的设置</title>
     <para>YaST 群集模块中的特定设置仅适用于当前节点。其他设置可以通过 Csync2 自动传送到所有节点。可在以下各部分中找到有关此配置的详细信息。
    </para>
   </note>
  </sect1>

  <sect1 xml:id="sec-ha-installation-setup-channels">
   <title>定义通讯通道</title>
   <para>
    为实现群集节点间的成功通讯，请定义至少一个通讯通道。YaST <guimenu>通讯通道</guimenu>屏幕中定义的所有设置都会写入 <filename>/etc/corosync/corosync.conf</filename> 中。<filename>/usr/share/doc/packages/corosync/</filename> 中提供了一些多播和单播设置的示例文件。
   </para>
   <para>如果您使用的是 IPv4 地址，则节点 ID 可以选填。如果使用的是 IPv6 地址，则必须填写节点 ID。YaST 群集模块提供了一个自动为每个群集节点生成唯一 ID 的选项，用户无需手动为每个节点指定 ID。</para>
    <para>
      对于传输协议，请按以下过程所述使用多播 (UDP) 或单播 (UDPU)。
    </para>
    <itemizedlist>
      <listitem>
        <para>
          要配置多播，请执行<xref linkend="pro-ha-installation-setup-channel1-udp"/>。
        </para>
      </listitem>
      <listitem>
        <para>
          要配置单播，请执行<xref linkend="pro-ha-installation-setup-channel1-udpu"/>。
        </para>
      </listitem>
      <listitem>
        <para>
          如果还需要定义第二个冗余通道，请执行上述过程之一配置第一个通道，然后继续执行<xref linkend="pro-ha-installation-setup-channel2"/>。
        </para>
      </listitem>
    </itemizedlist>
   <note>
    <title>公有云：使用单播</title>
    <para>
     要在公有云平台上部署 SUSE Linux Enterprise High Availability，请使用单播作为传输协议。云平台本身在一般情况下并不支持多播。
    </para>
   </note>

   <procedure xml:id="pro-ha-installation-setup-channel1-udp">
    <title>定义第一个通讯通道（多播）</title>
    <para>
     使用多播时，将为所有群集节点使用相同的 <systemitem>mcastaddr</systemitem>、<systemitem>bindnetaddr</systemitem> 和 <systemitem>mcastport</systemitem>。通过使用相同的多播地址，群集中的所有节点可了解彼此的存在。对于不同的群集，请使用不同的多播地址。
    
    </para>
    <step>
     <para>
       如果您是在修改现有群集，请切换到<guimenu>通讯通道</guimenu>类别。
      </para>
      <para>
        如果您正在按照初始设置向导进行操作，则无需手动切换类别。
      </para>
    </step>
    <step>
     <para>
      将<guimenu>传输</guimenu>协议设为 <literal>Multicast</literal>。
     </para>
    </step>
    <step>
     <para>
      定义<guimenu>绑定网络地址</guimenu>。将此值设置为要用于群集多播的子网。
     </para>
    </step>
    <step>
     <para>
      定义<guimenu>多播地址</guimenu>。
     </para>
    </step>
    <step>
     <para>
      定义<guimenu>端口</guimenu>。
     </para>
    </step>
    <step>
     <para>
      要为每个群集节点自动生成唯一的 ID，请将<guimenu>自动生成节点 ID</guimenu> 保留为启用状态。
     </para>
    </step>
    <step>
     <para>
      定义<guimenu>群集名称</guimenu>。
     </para>
    </step>
    <step>
     <para>
      输入<guimenu>预期投票数</guimenu>。此值非常重要，Corosync 将使用它来为分区的群集计算<xref linkend="gloss-quorum"/>。默认情况下，每个节点有 <literal>1</literal> 张投票。<guimenu>预期投票数</guimenu>必须与群集中的节点数一致。
     </para>
    </step>
    <step>
     <para>
      如果需要在 Corosync 中定义冗余通讯通道，请继续执行<xref linkend="pro-ha-installation-setup-channel2"/>。
     </para>
     <para>
       否则，请单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。
     </para>
    </step>
   </procedure>

   <figure>
    <title>YaST <guimenu>群集</guimenu> - 多播配置</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cluster_comm_mcast.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cluster_comm_mcast.png" width="75%"/>
     </imageobject>
     <textobject role="description">
      <phrase>“通讯通道”屏幕显示了用于配置一个或多个 Corosync 通讯通道的设置。在此例中，选择了多播。已经添加了绑定一个网络地址和多播地址，但不需要为群集中的各节点指定成员地址。</phrase>
    </textobject>
    </mediaobject>
   </figure>

   <procedure xml:id="pro-ha-installation-setup-channel1-udpu">
    <title>定义第一个通讯通道（单播）</title>
    <step>
     <para>
       如果您是在修改现有群集，请切换到<guimenu>通讯通道</guimenu>类别。
     </para>
     <para>
      如果您正在按照初始设置向导进行操作，则无需手动切换类别。
     </para>
    </step>
      <step>
       <para>
        将<guimenu>传输</guimenu>协议设为 <literal>Unicast</literal>。
       </para>
      </step>
      <step>
       <para>
        定义<guimenu>端口</guimenu>。
       </para>
      </step>
      <step>
       <para>
        对于单播通讯，Corosync 需要知道群集中所有节点的 IP 地址。对于每个节点，选择<guimenu>添加</guimenu>并输入以下详细信息：
       </para>
       <itemizedlist>
        <listitem>
         <para>
          <guimenu>IP 地址</guimenu>
         </para>
        </listitem>
        <listitem>
         <para>
          <guimenu>冗余 IP 地址</guimenu>（仅当在 Corosync 中使用了第二个通讯通道时才需要指定）
         </para>
        </listitem>
        <listitem>
         <para>
          <guimenu>节点 ID</guimenu>（仅当禁用了<guimenu>自动生成节点 ID</guimenu> 选项时才需要指定）
         </para>
        </listitem>
       </itemizedlist>
       <para>
        要修改或去除群集成员的任何地址，请使用<guimenu>编辑</guimenu>或<guimenu>删除</guimenu>按钮。
       </para>
      </step>
    <step>
     <para>
      要为每个群集节点自动生成唯一的 ID，请将<guimenu>自动生成节点 ID</guimenu> 保留为启用状态。
     </para>
    </step>
    <step>
     <para>
      定义<guimenu>群集名称</guimenu>。
     </para>
    </step>
    <step>
     <para>
      输入<guimenu>预期投票数</guimenu>。此值非常重要，Corosync 将使用它来为分区的群集计算<xref linkend="gloss-quorum"/>。默认情况下，每个节点有 <literal>1</literal> 张投票。<guimenu>预期投票数</guimenu>必须与群集中的节点数一致。
     </para>
    </step>
    <step>
     <para>
      如果需要在 Corosync 中定义冗余通讯通道，请继续执行<xref linkend="pro-ha-installation-setup-channel2"/>。
     </para>
     <para>
       否则，请单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。
     </para>
    </step>
   </procedure>
   <figure>
    <title>YaST <guimenu>群集</guimenu> - 单播配置</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cluster_comm_ucast.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cluster_comm_ucast.png" width="75%"/>
     </imageobject>
     <textobject role="description">
      <phrase>“通讯通道”屏幕显示了用于配置一个或多个 Corosync 通讯通道的设置。在此例中，选择了单播。不需要指定绑定网络地址和多播地址，但必须为群集中的每个节点添加成员地址。</phrase>
    </textobject>
    </mediaobject>
   </figure>

  <procedure xml:id="pro-ha-installation-setup-channel2">
   <title>定义冗余通讯通道</title>
   <para>
    如果由于任何原因不能使用网络设备绑定，第二个最佳选择就是在 Corosync 中定义冗余通讯通道（次环）。这样就可使用两个物理上分隔的网络进行通讯。如果一个网络发生故障，群集节点仍可通过另一个网络进行通讯。
   </para>
   <para>Corosync 中的另一个通讯通道会形成另一个令牌传递环。您配置的第一个通道是主环，环编号为 <literal>0</literal>。第二个环（冗余通道）的环编号为 <literal>1</literal>。
   </para>
   <important>
    <title>冗余环和 <filename>/etc/hosts</filename></title>
    <para> 如果 Corosync 中配置了多个环，则每个节点都可具有多个 IP 地址。这需要在所有节点的 <filename>/etc/hosts</filename> 文件中反映出来。</para>
   </important>
   <step>
    <para>
    按照<xref linkend="pro-ha-installation-setup-channel1-udp"/>或<xref linkend="pro-ha-installation-setup-channel1-udpu"/>所述配置第一个通道。
     </para>
   </step>
   <step>
    <para> 激活<guimenu>冗余通道</guimenu>。冗余通道必须使用与所定义的第一个通讯通道相同的协议。
    </para>
   </step>
   <step>
    <para> 如果使用多播，请输入以下参数：要使用的<guimenu>绑定网络地址</guimenu>，冗余通道的<guimenu>多播地址</guimenu>和<guimenu>端口</guimenu>。</para>
    <para> 如果使用单播，请定义以下参数：要使用的<guimenu>绑定网络地址</guimenu>及<guimenu>端口</guimenu>。在<guimenu>成员地址</guimenu>下，<guimenu>编辑</guimenu>每个条目，为将加入群集的每个节点添加<guimenu>冗余 IP</guimenu>。</para>
   </step>
   <step>
    <para>要告知 Corosync 如何以及何时使用其他通道，请选择要使用的 <guimenu>rrp_mode</guimenu>：</para>
    <itemizedlist>
     <listitem>
      <para> 如果只定义了一个通讯通道，<guimenu>rrp_mode</guimenu> 将自动禁用（值设为 <literal>none</literal>）。</para>
     </listitem>
     <listitem>
      <para> 如果设置为 <literal>active</literal>，则 Corosync 将主动使用这两个接口。但是，此模式已弃用。</para>
     </listitem>
     <listitem>
      <para> 如果设置为 <literal>passive</literal>，Corosync 将选择性地通过可用网络发送消息。</para>
     </listitem>
    </itemizedlist>
    <para>使用 RRP 时，SUSE Linux Enterprise High Availability 会监控当前环的状态，并在发生故障后自动重新启用冗余环。</para>
    <para>或者，使用 <command>corosync-cfgtool</command> 手动检查环状态。使用 <option>-h</option> 查看可用选项。</para>
   </step>
   <step>
    <para> 单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。</para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-ha-installation-setup-qdevice">
   <title>配置参与仲裁决定的仲裁方</title>
   <para>
     QDevice 和 QNetd 会参与仲裁决定。在仲裁方 <systemitem class="daemon">corosync-qnetd</systemitem> 的协助下，<systemitem class="daemon">corosync-qdevice</systemitem> 会提供一个可配置的投票数，以使群集可以承受大于标准仲裁规则所允许的节点故障数量。我们建议您对节点数为偶数的群集（特别是双节点群集）部署 <systemitem class="daemon">corosync-qnetd</systemitem> 和 <systemitem class="daemon">corosync-qdevice</systemitem>。有关详细信息，请访问 <xref linkend="cha-ha-qdevice"/>。
   </para>
   <itemizedlist>
     <title>要求</title>
     <listitem>
       <para>
         在配置 QDevice 之前，必须先设置 QNetd 服务器。请参见<xref linkend="sec-ha-qdevice-setup-qnetd"/>。
       </para>
     </listitem>
   </itemizedlist>
   <procedure xml:id="pro-ha-installation-setup-qdevice">
     <title>配置 QDevice 和 QNetd</title>
     <step>
       <para>
        如果您是在修改现有群集，请切换到<guimenu>通讯通道</guimenu>类别。
      </para>
      <para>
        如果您正在按照初始设置向导进行操作，则无需手动切换类别。
      </para>
     </step>
     <step>
       <para>
         选中<guimenu>启用 Corosync QDevice</guimenu>。
       </para>
     </step>
     <step>
       <para>
         在<guimenu>QNetd 服务器主机</guimenu>字段中，输入 QNetd 服务器的 IP 地址或主机名。
       </para>
     </step>
     <step>
       <para>
         选择 <guimenu>TLS</guimenu> 模式：
       </para>
       <itemizedlist>
         <listitem>
           <para>
             如果不需要使用 TLS 且不应尝试，请采用<guimenu>关闭</guimenu>模式。
           </para>
         </listitem>
         <listitem>
           <para>
             如果希望使用 TLS 进行连接，但当 TLS 不可用时则不使用 TLS 来连接，请采用<guimenu>开启</guimenu>模式。
           </para>
         </listitem>
         <listitem>
           <para>
             采用<guimenu>必需</guimenu>模式会强制使用 TLS。如果 TLS 不可用，QDevice 将会退出并返回错误消息。
           </para>
         </listitem>
       </itemizedlist>
     </step>
     <step>
       <para>
         接受<guimenu>算法</guimenu>和<guimenu>决胜值</guimenu>的默认值。如果需要更改这些值，可在完成群集设置后使用 <command>crm cluster init qdevice</command> 命令进行更改。
       </para>
     </step>
     <step>
       <para>
         选择<guimenu>启发模式</guimenu>：
       </para>
       <itemizedlist>
         <listitem>
           <para>
             使用<guimenu>关闭</guimenu>可禁用启发命令。
           </para>
         </listitem>
         <listitem>
           <para>
             使用<guimenu>开启</guimenu>可按<guimenu>启发间隔</guimenu>定期运行启发命令。
           </para>
         </listitem>
         <listitem>
           <para>
             使用<guimenu>同步</guimenu>则仅会在启动时、群集成员发生变化以及连接 QNetd 时运行启发命令。
           </para>
         </listitem>
       </itemizedlist>
     </step>
     <step>
       <para>
         如果将<guimenu>启发模式</guimenu>设置为<guimenu>开启</guimenu>或<guimenu>同步</guimenu>，请将启发命令添加到<guimenu>启发可执行程序</guimenu>列表中：
       </para>
       <substeps>
         <step>
           <para>
             选择<guimenu>添加</guimenu>。将打开一个新窗口。
           </para>
         </step>
         <step>
           <para>
             输入命令的<guimenu>执行名称</guimenu>。
           </para>
         </step>
         <step>
           <para>
             在<guimenu>执行脚本</guimenu>字段中输入命令。这可以是一条命令，也可以是脚本的路径，可以用 Shell、Python 或 Ruby 等任何语言编写。
           </para>
         </step>
         <step>
           <para>
             单击<guimenu>确定</guimenu>关闭窗口。
           </para>
         </step>
       </substeps>
     </step>
     <step>
       <para>
         单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。
       </para>
     </step>
   </procedure>
   <figure xml:id="fig-ha-installation-setup-qdevice">
     <title>YaST <guimenu>群集</guimenu> - Corosync QDevice</title>
     <mediaobject>
       <imageobject role="fo">
         <imagedata fileref="yast_cluster_qdevice.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
         <imagedata fileref="yast_cluster_qdevice.png" width="75%"/>
       </imageobject>
       <textobject role="description">
         <phrase>“Corosync QDevice”屏幕显示用于配置 QDevice 的设置。<guimenu>启用 Corosync QDevice</guimenu> 复选框已选中，光标位于 <guimenu>QNetd 服务器主机</guimenu>字段中。</phrase>
       </textobject>
     </mediaobject>
   </figure>
 </sect1>

  <sect1 xml:id="sec-ha-installation-setup-security">
   <title>定义身份验证设置</title>
   <para>
    要定义群集的身份验证设置，您可以使用 HMAC/SHA1 身份验证。此方式需要使用共享机密来保护和验证讯息。指定的身份验证密钥（口令）将用于群集中的所有节点。
   </para>
  <procedure xml:id="pro-ha-installation-setup-security">
   <title>启用安全身份验证</title>
   <step>
     <para>
      如果您是在修改现有群集，请切换到<guimenu>安全</guimenu>类别。
     </para>
     <para>
      如果您正在按照初始设置向导进行操作，则无需手动切换类别。
     </para>
   </step>
   <step>
    <para> 选中<guimenu>启用安全身份验证</guimenu>。</para>
   </step>
   <step>
    <para> 对于新创建的群集，请选择<guimenu>生成身份验证密钥文件</guimenu>。系统会创建身份验证密钥并将其写入 <filename>/etc/corosync/authkey</filename>。</para>
    <para> 如果希望当前计算机加入现有群集，则不用生成新的密钥文件。而是将 <filename>/etc/corosync/authkey</filename> 从一个节点复制到当前计算机（手动或使用 Csync2）。</para>
   </step>
   <step>
    <para> 单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。YaST 会将此配置写入 <filename>/etc/corosync/corosync.conf</filename>。</para>
   </step>
  </procedure>

   <figure>
    <title>YaST <guimenu>群集</guimenu> - 安全</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cluster_security.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cluster_security.png" width="75%"/>
     </imageobject>
     <textobject role="description">
      <phrase>“安全”屏幕显示用于配置 Corosync 身份验证的设置。“启用安全身份验证”复选框已选中，您可以选择“加密哈希”和“加密密码”类型。还可以选择“生成身份验证密钥文件”选项。</phrase>
    </textobject>
    </mediaobject>
   </figure>
  </sect1>

  <sect1 xml:id="sec-ha-installation-setup-csync2">
   <title>配置 Csync2 以同步文件</title>
   <para>
    您可以使用 <command>csync2</command> 工具在群集中的所有节点间进行复制，而无需手动将配置文件复制到所有节点。Csync2 将帮助您跟踪配置更改，并在群集节点之间保持文件同步。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      可以定义对操作至关重要的文件列表。
     </para>
    </listitem>
    <listitem>
     <para>
      可以显示这些文件的更改（对于其他群集节点）。
     </para>
    </listitem>
    <listitem>
     <para>
      可以使用单个命令同步配置的文件。
     </para>
    </listitem>
    <listitem>
     <para>
      使用 <filename>~/.bash_logout</filename> 中的一个简单外壳脚本，您可以在从系统注销之前收到更改未同步的提醒。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    有关 Csync2 的详细信息，请参见 <link xlink:href="https://oss.linbit.com/csync2/"></link> 和 <link xlink:href="https://oss.linbit.com/csync2/paper.pdf"></link>。
   </para>
   <important>
    <title>发生任何更改后推送同步</title>
    <para>
      Csync2 仅推送更改。它<emphasis>不会</emphasis>在计算机之间连续同步文件。每当您更新需要同步的文件时，都需要将更改推送到其他计算机。稍后使用 YaST 完成群集配置后，将介绍如何使用 <command>csync2</command> 推送更改。
    </para>
   </important>
   <procedure xml:id="pro-ha-installation-setup-csync2-yast">
    <title>使用 YaST 配置 Csync2</title>
    <step>
     <para>
      如果您是在修改现有群集，请切换到<guimenu>配置 Csync2</guimenu> 类别。
     </para>
     <para>
      如果您正在按照初始设置向导进行操作，则无需手动切换类别。
     </para>
    </step>
    <step>
     <para> 要指定同步组，请在<guimenu>同步主机</guimenu>组中选择<guimenu>添加</guimenu>，然后输入群集中所有节点的本地主机名。对于每个节点，必须使用 <command>hostname</command> 命令返回的确切字符串。</para>
     <tip>
      <title>主机名解析</title>
      <para> 如果您的网络中无法正常进行主机名解析，您也可以为每个群集节点指定主机名与 IP 地址的组合。要执行此操作，请使用字符串 <replaceable>HOSTNAME@IP</replaceable>，例如 <literal>alice@192.168.2.100</literal>。这样 Csync2 便会在连接时使用该 IP 地址。</para>
     </tip>
    </step>
    <step xml:id="step-csync2-generate-key">
     <para>单击<guimenu>生成预共享密钥</guimenu>以创建同步组的密钥文件。密钥文件会写入 <filename>/etc/csync2/key_hagroup</filename>。</para>
    </step>
    <step>
     <para> 要在<guimenu>同步文件</guimenu>列表中填充通常需要在所有节点间同步的文件，请选择<guimenu>添加建议的文件</guimenu>。</para>
    </step>
    <step>
     <para> 要在需同步的文件列表中<guimenu>编辑</guimenu>、<guimenu>添加</guimenu>或<guimenu>去除</guimenu>文件，请使用相应按钮。必须输入每个文件的绝对路径。</para>
    </step>
    <step>
     <para> 选择<guimenu>开启 Csync2</guimenu> 激活 Csync2。这样 Csync2 会在系统引导时自动启动。</para>
    </step>
    <step>
     <para>单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。YaST 会将 Csync2 配置写入 <filename>/etc/csync2/csync2.cfg</filename>。</para>
    </step>
   </procedure>
   <figure>
    <title>YaST <guimenu>群集</guimenu> - Csync2</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cluster_sync.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cluster_sync.png" width="75%"/>
     </imageobject>
     <textobject role="description">
      <phrase>“配置 Csync2”屏幕显示用于配置节点间文件传输的设置。左侧是“同步主机”列表，您需要在此处添加所有群集节点。右侧是“同步文件”列表，其中会自动填充配置文件。另外还有用于选择<literal>Generate Pre-Shared-Keys</literal>和<literal>Turn Csync2 ON</literal>的选项。</phrase>
    </textobject>
    </mediaobject>
   </figure>
  </sect1>

  <sect1 xml:id="sec-ha-installation-setup-conntrackd">
   <title>同步群集节点间的连接状态</title>
   <para>
    要对 iptables 启用<emphasis>有状态</emphasis>数据包检测，请配置并使用 conntrack 工具。这需要以下基本步骤：
   </para>

   <procedure xml:id="pro-ha-installation-setup-conntrackd">
    <title>使用 YaST 配置 <systemitem class="resource">conntrackd</systemitem></title>
    <para>
     使用 YaST 群集模块配置用户空间 <systemitem class="daemon">conntrackd</systemitem>（请参见<xref linkend="fig-ha-installation-setup-conntrackd"/>）。这需要未用于其他通讯通道的专用网络接口。守护程序可随后通过资源代理启动。
    </para>
    <step>
     <para>
      如果您是在修改现有群集，请切换到<guimenu>配置 conntrackd</guimenu> 类别。
     </para>
     <para>
      如果您正在按照初始设置向导进行操作，则无需手动切换类别。
     </para>
    </step>
    <step>
     <para>
      选择<guimenu>专用接口</guimenu>来同步连接状态。会自动检测所选接口的 IPv4 地址并显示在 YaST 中。该地址必须已经配置并且必须支持多播。
      
     </para>
    </step>
    <step>
     <para>
      定义要用于同步连接状态的<guimenu>多播地址</guimenu>。
     </para>
    </step>
    <step>
     <para>
      在<guimenu>组编号</guimenu>中，定义要将连接状态同步到的目标组的数字 ID。
     </para>
    </step>
    <step>
     <para>
      选择<guimenu>生成 /etc/conntrackd/conntrackd.conf</guimenu> 创建 <systemitem class="daemon">conntrackd</systemitem> 的配置文件。
     </para>
    </step>
    <step>
     <para>
      如果修改了现有群集的任何选项，请确认更改并关闭群集模块。
     </para>
    </step>
    <step>
     <para>
      单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。
     </para>
    </step>
   </procedure>
      <para>
    配置 conntrack 工具后，可对 Linux 虚拟服务器使用这些工具（请参见<xref linkend="cha-ha-lb" xrefstyle="select:title"/>）。
   </para>
   <figure xml:id="fig-ha-installation-setup-conntrackd">
    <title>YaST <guimenu>群集</guimenu> - <systemitem class="resource">conntrackd</systemitem></title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cluster_conntrackd.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cluster_conntrackd.png" width="75%"/>
     </imageobject>
     <textobject role="description">
      <phrase>“配置 conntrackd”屏幕显示用于配置 conntrack 工具的设置。您可以选择专用接口，输入多播地址和组编号，以及生成 <filename>/etc/conntrackd/conntrackd.conf</filename> 文件。</phrase>
    </textobject>
    </mediaobject>
   </figure>
  </sect1>

  <sect1 xml:id="sec-ha-installation-setup-services">
   <title>配置服务</title>
   <para>
    在 YaST 群集模块中，定义是否要在某个节点引导时启动其上的特定服务。也可使用模块手动启动和停止服务。为使群集节点上线并启动群集资源管理器，Pacemaker 必须作为服务运行。
   </para>
   <para>
    本节中的配置仅适用于当前计算机，而不是所有群集节点。
   </para>
   <procedure xml:id="pro-ha-installation-setup-services">
    <title>启用群集服务</title>
    <step>
     <para>
      如果您是在修改现有群集，请切换到<guimenu>服务</guimenu>类别。您可以使用本节中的选项来启动和停止该节点上的群集服务。
     </para>
     <para>
      如果您正在按照初始设置向导进行操作，则无需手动切换类别。稍后您将启动群集服务，因此可以直接跳到<xref linkend="yast-cluster-service-firewall"/>。
     </para>
    </step>
    <step>
     <para>
      要在此群集节点每次引导时启动群集服务，请选择<guimenu>启用群集</guimenu>。如果选择<guimenu>禁用群集</guimenu>，那么每次此节点引导时，您都必须手动启动群集服务。
     </para>
    </step>
    <step>
     <para>
      要立即启动或停止群集服务，请选择<guimenu>立即启动</guimenu>或<guimenu>立即停止</guimenu>。
     </para>
    </step>
    <step>
      <para>
        要立即启动或停止 QDevice，请选择<guimenu>立即启动</guimenu>或<guimenu>立即停止</guimenu>。
      </para>
    </step>
    <step xml:id="yast-cluster-service-firewall">
     <para>
      要在防火墙中打开群集通讯所需的端口，请选中<guimenu>打开防火墙中的端口</guimenu>。
     </para>
    </step>
    <step>
     <para>
      单击<guimenu>下一步</guimenu>（如果使用设置向导）或<guimenu>完成</guimenu>（如果在修改现有群集）确认更改。
     </para>
     <para>
      如果您正在按照初始设置向导进行操作，这会完成初始配置并退出 YaST。继续执行<xref linkend="sec-ha-setup-yast-csync2-sync"/>。
   </para>
    </step>
   </procedure>
   <figure>
    <title>YaST <guimenu>群集</guimenu> - 服务</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cluster_services.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cluster_services.png" width="75%"/>
     </imageobject>
     <textobject role="description">
      <phrase>“服务”屏幕用于启动或停止服务。您可以允许或禁止群集在节点引导时启动、启动或停止 Pacemaker 和 Corosync，以及启动或停止 QDevice。您还可以打开所需的防火墙端口。</phrase>
    </textobject>
    </mediaobject>
   </figure>
  </sect1>

  <sect1 xml:id="sec-ha-setup-yast-csync2-sync">
   <title>将配置传输到所有节点</title>
   <para>
    通过 YaST 完成群集配置后，使用 <command>csync2</command> 将配置文件复制到群集的其余节点。要接收文件，节点必须包含在您在<xref linkend="pro-ha-installation-setup-csync2-yast"/>中配置的<guimenu>同步主机</guimenu>组中。
   </para>
   <para> 首次运行 Csync2 前，需要执行以下准备工作：</para>
   <procedure>
    <title>使用 Csync2 准备初始同步</title>
    <step>
      <para>
        确保在节点之间配置了无口令 SSH。群集通讯需要使用此访问方式。
      </para>
    </step>
    <step>
     <para>
      手动将文件 <filename>/etc/csync2/csync2.cfg</filename> 复制到群集中的<emphasis>所有</emphasis>节点。
     </para>
    </step>
    <step>
     <para> 手动将文件 <filename>/etc/csync2/key_hagroup</filename> 复制到群集中的<emphasis>所有</emphasis>节点。它是 Csync2 在进行身份验证时需要使用的文件。但请<emphasis>不要</emphasis>在其他节点上重新生成该文件，因为在所有节点上，该文件必须是相同的。</para>
    </step>
    <step>
     <para>在所有节点上执行以下命令立即启用并启动该服务：</para>
     <screen><prompt role="root"># </prompt><command>systemctl enable --now csync2.socket</command></screen>
    </step>
   </procedure>

   <para>
    执行以下过程将配置文件传输到所有群集节点：
   </para>
   <procedure xml:id="pro-ha-installation-setup-csync2-start">
    <title>使用 Csync2 同步更改</title>
    <step>
     <para>要一次性同步所有文件，请在要<emphasis>从中</emphasis>复制配置的计算机上运行以下命令：</para>
     <screen><prompt role="root"># </prompt><command>csync2 -xv</command></screen>
     <para> 这会将文件推送到其他节点，从而一次同步所有文件。如果成功同步了所有文件，Csync2 完成时不会显示任何错误。</para>
     <para> 如果在其他节点（不只是当前节点）上对要同步的一个或多个文件进行了修改，Csync2 会显示类似以下消息的输出来报告存在冲突：</para>
     <screen>While syncing file /etc/corosync/corosync.conf:
ERROR from peer hex-14: File is also marked dirty here!
Finished with 1 errors.</screen>
    </step>
    <step>
     <para> 如果确信当前节点上的文件版本是<quote>最佳</quote>版本，可以通过强制使用此文件并重新同步来解决冲突：</para>
     <screen><prompt role="root"># </prompt><command>csync2 -f /etc/corosync/corosync.conf</command>
<prompt role="root"># </prompt><command>csync2 -xv</command></screen>
    </step>
   </procedure>
   <para> 有关 Csync2 选项的更多信息，请运行</para>
   <screen><prompt role="root"># </prompt><command>csync2 --help</command></screen>
   <important>
    <title>发生任何更改后推送同步</title>
    <para> Csync2 仅推送更改。它<emphasis>不会</emphasis>在计算机之间连续同步文件。</para>
    <para> 每次更新应同步的文件时，都需要在您进行了更改的计算机上运行 <command>csync2 -xv</command>，来将更改推送到其他计算机。如果在文件未更改的任何其他计算机上运行此命令，系统不会执行任何操作。</para>
   </important>
  </sect1>

  <sect1 xml:id="sec-ha-installation-start">
   <title>使群集上线</title>
   <para>
    完成初始群集配置后，启动所有群集节点上的群集服务，以使堆栈上线：
   </para>
   <procedure xml:id="pro-ha-installation-start-cluster">
    <title>启动群集服务并检查状态</title>
    <step>
     <para>
      登录到现有节点。
     </para>
    </step>
    <step>
     <para>
      启动所有群集节点上的群集服务：
     </para>
<screen><prompt role="root"># </prompt><command>crm cluster start --all</command></screen>
     <para>
       此命令要求节点之间使用无口令 SSH 访问方式。您还可以使用 <command>crm cluster start</command> 启动单个节点。
     </para>
    </step>
    <step>
     <para>
      使用 <command>crm status</command> 命令检查群集状态。如果所有节点都已上线，则输出应类似于如下内容：
     </para>
<screen><prompt role="root"># </prompt><command>crm status</command>
Cluster Summary:
  * Stack: corosync
  * Current DC: alice (version ...) - partition with quorum
  * Last updated: ...
  * Last change:  ... by hacluster via crmd on bob
  * 2 nodes configured
  * 1 resource instance configured

Node List:
  * Online: [ alice bob ]
...</screen>
     <para>
      此输出表示群集资源管理器已启动，可以管理资源了。
     </para>
    </step>
   </procedure>
   <para>
     要获得支持，SUSE Linux Enterprise High Availability 群集<emphasis>必须</emphasis>启用 STONITH（节点屏蔽）。节点屏蔽机制可以是物理设备（电源开关），也可以是 SBD 结合看门狗构成的一种机制。在继续使用群集之前，请按照<xref linkend="cha-ha-fencing"/>或<xref linkend="cha-ha-storage-protect"/>中的说明配置一个或多个 STONITH 设备。
   </para>
  </sect1>
</chapter>
