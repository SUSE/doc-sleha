<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_drbd.xml" version="5.0" xml:id="cha-ha-drbd">
 <title>DRBD</title>
 <info>
      <abstract>
        <para>
    通过<emphasis>分布式复制块设备</emphasis> (DRBD*)，您可以为位于 IP 网络上两个不同站点中的两个块设备创建镜像。和 Corosync 一起使用时，DRBD 支持分布式高可用性 Linux 群集。本章说明如何安装和设置 DRBD。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-ha-drbd-overview">
  <title>概念概述</title>

  <para>
   DRBD 以确保数据的两个副本保持相同的方式将主设备上的数据复制到次设备上。将其视为联网的 RAID 1。它实时对数据进行镜像，以便连续复制。应用程序不需要知道实际上它们的数据存储在不同的磁盘上。

  </para>

  <para>
   DRBD 是 Linux 内核模块，位于下端的 I/O 调度程序与上端的文件系统之间，请参见<xref linkend="fig-ha-drbd-concept"/>。要与 DRBD 通讯，用户需使用高级别命令 <command>drbdadm</command>。为了提供最大的灵活性，DRBD 附带了低级别工具 <command>drbdsetup</command>。
  </para>

  <figure xml:id="fig-ha-drbd-concept">
   <title>DRBD 在 Linux 中的位置</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ha_drbd.svg" width="80%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ha_drbd.png" width="80%"/>
    </imageobject>
    <textobject role="description">
      <phrase>该图显示了 DRBD 在 Linux 系统中的位置 - 位于文件系统和 I/O 调度程序之间。</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <important>
   <title>未加密数据</title>
   <para>
    镜像之间的数据流量是不加密的。为实现安全数据交换，您应为连接部署虚拟专用网 (VPN) 解决方案。
   </para>
  </important>


  <para>
   DRBD 允许使用 Linux 支持的任何块设备，通常包括：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     硬盘分区或完整硬盘
    </para>
   </listitem>
   <listitem>
    <para>
     软件 RAID
    </para>
   </listitem>
   <listitem>
    <para>
     逻辑卷管理器 (LVM)
    </para>
   </listitem>
   <listitem>
    <para>
     企业卷管理系统 (EVMS)
    </para>
   </listitem>
  </itemizedlist>

  <para>
   默认情况下，DRBD 使用 <literal>7788</literal> 及更高的 TCP 端口在 DRBD 节点之间通讯。请确保您的防火墙不会阻止所用端口上的通讯。
  </para>

  <para>
   在 DRBD 设备上创建文件系统之前，必须先设置 DRBD 设备。与用户数据相关的所有操作都只应通过 <filename>/dev/drbd<replaceable>N</replaceable></filename> 设备执行，不能在原始设备上执行，因为 DRBD 会将原始设备最后的部分用于存储元数据。使用原始设备会导致数据不一致。
  </para>

  <para>
   借助 udev 集成，您还可以获取 <filename>/dev/drbd/by-res/<replaceable>RESOURCES</replaceable></filename> 格式的符号链接，这种链接更易于使用，而且还能避免在记错设备次要编号时出现问题。
  </para>

  <para>
   例如，如果原始设备大小为 1024 MB，则 DRBD 设备仅有 1023 MB 可用于数据存储，而大约保留 70 KB 的隐藏容量用于存储元数据。通过原始磁盘访问剩余 KB 的任何尝试都会失败，因为这些 KB 不可用于存储用户数据。
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-drbd-install">
  <title>安装 DRBD 服务</title>
  <para>
   按<xref linkend="part-install"/>中所述在联网群集中的两台 SUSE Linux Enterprise Server 计算机上安装 High Availability 软件集。安装该软件集的同时也会安装 DRBD 程序文件。
  </para>

  <para>
   如果您不需要完整的群集堆栈，只想使用 DRBD，请安装软件包 <package>drbd</package>、<package>drbd-kmp-<replaceable>FLAVOR</replaceable></package>、<package>drbd-utils</package> 和 <package>yast2-drbd</package>。
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-drbd-configure">
  <title>设置 DRBD 服务</title>
  <note>
   <title>需要进行调整</title>
   <para>
    以下过程使用服务器名称 alice 和 bob，以及 DRBD 资源名称 <literal>r0</literal>。它将 alice 设置为主节点，并使用 <filename>/dev/disk/by-id/example-disk1</filename> 存储数据。确保修改这些说明，以使用您自己的节点和文件名。
   </para>
   <para>
    以下过程假定群集节点使用 TCP 端口 <literal>7788</literal>。确保此端口在防火墙中处于打开状态。
  </para>
  </note>

  <para>
   要设置 DRBD，请执行以下过程：
  </para>

  <orderedlist>
    <listitem>
      <para>
        <xref linkend="sec-ha-drbd-prepare"/>
      </para>
    </listitem>
    <listitem>
      <para>
         请使用以下其中一种方法配置 DRBD 设备：
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="sec-ha-drbd-configure-manually"/>
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="sec-ha-drbd-configure-yast"/>
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <xref linkend="sec-ha-drbd-configure-init"/>
      </para>
    </listitem>
    <listitem>
      <para>
        <xref linkend="sec-ha-drbd-configure-cluster-resource"/>
      </para>
    </listitem>
  </orderedlist>

  <sect2 xml:id="sec-ha-drbd-prepare">
    <title>准备系统以使用 DRBD</title>
    <para>
      在开始配置 DRBD 之前，您可能需要执行以下部分或全部步骤：
    </para>
    <procedure xml:id="pro-drbd-prepare">
      <title>准备系统以使用 DRBD</title>
        <step>
          <para>确保 Linux 节点中的块设备已就绪且已分区（如果需要）。</para>
        </step>
        <step>
          <para>
            如果磁盘包含您已不再需要的文件系统，请使用以下命令销毁文件系统结构：
          </para>
          <screen><prompt role="root"># </prompt><command>dd if=/dev/zero of=<replaceable>YOUR_DEVICE</replaceable> count=16 bs=1M</command></screen>
          <para>如果有多个文件系统需要销毁，请在您希望包含到 DRBD 设置中的所有设备上重复此步骤。</para>
        </step>
          <step>
            <para>如果群集已在使用 DRBD，请将群集置于维护模式：</para>
            <screen><prompt role="root"># </prompt><command>crm maintenance on</command></screen>
            <para> 如果群集已在使用 DRBD，而您跳过了此步骤，实时配置中的语法错误会导致服务停止。或者，也可以使用 <command>drbdadm -c <replaceable>FILE</replaceable></command> 来测试配置文件。</para>
          </step>
    </procedure>
  </sect2>

  <sect2 xml:id="sec-ha-drbd-configure-manually">
    <title>手动配置 DRBD</title>
    <note>
     <title><quote>自动提升</quote>功能的受限支持</title>
     <para>
      当资源的其中一个设备被挂载或打开以写入数据时，DRBD9 的<quote>自动提升</quote>功能可以自动将该资源提升为主要角色。
     </para>
     <para>
      目前，自动提升功能仅具有受限支持。使用 DRBD 9 时，SUSE 支持的用例与使用 DRBD 8 时相同。除此以外的用例（例如所包含节点超过两个的设置）不受支持。
     </para>
    </note>
    <para>
     要手动设置 DRBD，请按如下操作：
    </para>

  <procedure xml:id="pro-drbd-configure">
   <title>手动配置 DRBD</title>
    <para>从 DRBD 版本 8.3 开始，以前的配置文件将拆分成几个不同的文件（位于 <filename>/etc/drbd.d/</filename> 目录中）。</para>
   <step>
      <para>
       打开 <filename>/etc/drbd.d/global_common.conf</filename> 文件。它已包含预定义的全局值。转到 <literal>startup</literal> 部分并插入以下几行内容：
      </para>
<screen>startup {
    # wfc-timeout degr-wfc-timeout outdated-wfc-timeout
    # wait-after-sb;
    wfc-timeout 100;
    degr-wfc-timeout 120;
}</screen>
      <para>
       这些选项用于在系统引导时减少超时情况，有关更多信息，请参见 <link xlink:href="https://docs.linbit.com/docs/users-guide-9.0/#ch-configure"></link>。
      </para>
     </step>
     <step>
      <para>
       创建文件 <filename>/etc/drbd.d/r0.res</filename>。根据具体情况更改相应的行并保存文件：
      </para>
<screen>resource r0 { <co xml:id="co-drbd-config-r0"/>
  device /dev/drbd0; <co xml:id="co-drbd-config-device"/>
  disk /dev/disk/by-id/example-disk1; <co xml:id="co-drbd-config-disk"/>
  meta-disk internal; <co xml:id="co-drbd-config-meta-disk"/>
  on alice { <co xml:id="co-drbd-config-resname"/>
    address  192.168.1.10:7788; <co xml:id="co-drbd-config-address"/>
    node-id 0; <co xml:id="co-drbd-config-node-id"/>
  }
  on bob { <xref linkend="co-drbd-config-resname" xrefstyle="selec:nopage"/>
    address 192.168.1.11:7788; <xref linkend="co-drbd-config-address" xrefstyle="selec:nopage"/>
    node-id 1; <xref linkend="co-drbd-config-node-id"/>
  }
  disk {
    resync-rate 10M; <co xml:id="co-drbd-config-syncer-rate"/>
  }
  connection-mesh { <co xml:id="co-drbd-config-connection-mesh"/>
    hosts alice bob;
  }
  net {
    protocol C; <co xml:id="co-drbd-config-protocol"/>
    fencing resource-and-stonith; <co xml:id="co-drbd-config-fencing-policy"/>
   }
  handlers { <co xml:id="co-drbd-config-fencing-handlers"/>
    fence-peer "/usr/lib/drbd/crm-fence-peer.9.sh";
    after-resync-target "/usr/lib/drbd/crm-unfence-peer.9.sh";
   }
}</screen>
      <calloutlist>
       <callout arearefs="co-drbd-config-r0">
        <para>
         描述关联服务的 DRBD 资源名称。例如，<systemitem>nfs</systemitem>、<systemitem>http</systemitem>、<systemitem>mysql_0</systemitem>、<systemitem>postgres_wal</systemitem> 等。该示例中使用了较笼统的名称 <literal>r0</literal>。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-device">
        <para>
         DRBD 的设备名及其次要编号。
        </para>
        <para>
         在以上示例中，为 DRBD 使用了次要编号 0。udev 集成脚本会提供符号链接 <filename>/dev/drbd/by-res/nfs/0</filename>。也可以在配置中忽略设备节点名称，改为使用以下行：
        </para>
        <para>
         <literal>drbd0 minor 0</literal>（<literal>/dev/</literal> 是可选的）或 <literal>/dev/drbd0</literal>
        </para>
       </callout>
       <callout arearefs="co-drbd-config-disk">
        <para>
         在节点间复制的原始设备。请注意，在本例中，两个节点上的设备<emphasis>相同</emphasis>。如果需要不同的设备，请将 <literal>disk</literal> 参数移到 <literal>on</literal> 主机中。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-meta-disk">
        <para>
         Meta-disk 参数通常包含值 <literal>internal</literal>，但您也可以明确指定某个设备来保存元数据。有关详细信息，请参见 <link xlink:href="https://docs.linbit.com/docs/users-guide-9.0/#s-metadata"></link>。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-resname">
        <para>
         <literal>on</literal> 部分指定了此配置语句要应用到的主机。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-address">
        <para>
         各个节点的 IP 地址和端口号。每个资源都需要单独的端口，通常从 <literal>7788</literal> 开始。DRBD 资源的两个端口必须相同。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-node-id">
         <para>
        配置两个以上的节点时，需要节点 ID。该 ID 是用于区分不同节点的唯一非负整数。
      </para>
       </callout>
       <callout arearefs="co-drbd-config-syncer-rate">
        <para>
         同步率。将其设置为磁盘和网络带宽中较小者的三分之一。它仅限制重新同步，而不限制复制。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-connection-mesh">
        <para>
       定义网格的所有节点。<option>hosts</option> 参数包含共享相同 DRBD 设置的所有主机名。
    </para>
       </callout>
       <callout arearefs="co-drbd-config-protocol">
        <para>此连接使用的协议。协议 <literal>C</literal> 是默认选项。它可提供更好的数据可用性，只有在写入内容进入所有本地和远程磁盘之后，该协议才将写入操作视为已完成。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-fencing-policy">
        <para>
         在 DRBD 级别指定屏蔽策略 <literal>resource-and-stonith</literal>。该策略会立即暂停正在进行的 I/O 操作，直到 STONITH 完成。
        </para>
       </callout>
       <callout arearefs="co-drbd-config-fencing-handlers">
        <para>
         为防止 Pacemaker 使用过时数据启动服务，请启用资源级屏蔽。如果 DRBD 复制链路断开，<command>crm-fence-peer.9.sh</command> 脚本会阻止将 DRBD 资源提升至其他节点，直至复制链路恢复连接且 DRBD 完成同步过程。
        </para>
       </callout>
      </calloutlist>
     </step>
     <step>
      <para>
      检查配置文件的语法。如果以下命令返回错误，请校验文件：
      </para>
      <screen><prompt role="root"># </prompt><command>drbdadm dump all</command></screen>
     </step>
     <step>
      <para>
        将 DRBD 配置文件复制到所有节点：
      </para>
      <screen><prompt role="root"># </prompt><command>csync2 -xv</command></screen>
      <para>
        默认情况下，DRBD 配置文件 <filename>/etc/drbd.conf</filename> 和目录 <filename>/etc/drbd.d/</filename> 已包含在 Csync2 同步的文件列表中。
      </para>
    </step>
  </procedure>
  </sect2>
  <sect2 xml:id="sec-ha-drbd-configure-yast">
    <title>使用 YaST 配置 DRBD</title>
    <para>可以使用 YaST 来启动 DRBD 的初始设置。创建 DRBD 设置后，可以手动调整生成的文件。
    </para>
    <para>
        但是，一旦更改了配置文件，请不要再使用 YaST DRBD 模块。DRBD 模块仅支持有限的一组基本配置。如果您再次使用该模块，它有可能不会显示您所做的更改。
    </para>
    <para>
      要使用 YaST 设置 DRBD，请执行以下操作：</para>
  <procedure xml:id="pro-drbd-configure-yast">
   <title>使用 YaST 配置 DRBD</title>
   <step>
    <para>
     启动 YaST，然后选择配置模块 <menuchoice><guimenu>High Availability</guimenu> <guimenu>DRBD</guimenu></menuchoice>。如果您已有 DRBD 配置，YaST 会向您发出警告。YaST 会更改您的配置，并将原来的 DRBD 配置文件另存为 <filename>*.YaSTsave</filename>。
    </para>
   </step>
   <step>
    <para>
     将<menuchoice><guimenu>启动配置</guimenu> <guimenu>引导</guimenu></menuchoice>中的引导标志保留原样（默认情况下为 <literal>off</literal>）；请不要更改此项设置，因为 Pacemaker 会管理此服务。
    </para>
   </step>
   <step>
     <para>如果正在运行防火墙，请启用<guimenu>打开防火墙中的端口</guimenu>。</para>
   </step>
   <step>
    <para>转到<guimenu>资源配置</guimenu>项。选择<guimenu>添加</guimenu>创建新资源（请参见<xref linkend="fig-ha-drbd-yast-resconfig"/>）。
    </para>
    <figure xml:id="fig-ha-drbd-yast-resconfig">
     <title>资源配置</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast_drbd-resconfig.png" width="90%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast_drbd-resconfig.png" width="90%"/>
      </imageobject>
      <textobject role="description">
        <phrase>“资源基本配置”屏幕包含“资源名称”字段、一个节点列表和每个节点的详细信息。</phrase>
      </textobject>
     </mediaobject>
    </figure>
    <para>
      需要设置以下参数：
    </para>

    <variablelist>
      <varlistentry>
        <term><guimenu>资源名</guimenu></term>
        <listitem>
          <para>DRBD 资源的名称（必填）</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>名称</guimenu></term>
        <listitem>
          <para>相关节点的主机名</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>地址:端口</guimenu></term>
        <listitem>
          <para>
          相应节点的 IP 地址和端口号（默认为 <systemitem>7788</systemitem>）
         </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>设备</guimenu></term>
        <listitem>
          <para>
          用于访问复制数据的块设备路径。如果设备包含次要编号，则关联的块设备通常命名为 <filename>/dev/drbdX</filename>，其中 <replaceable>X</replaceable> 是设备次要编号。如果设备不包含次要编号，请务必在设备名称后面添加 <literal>minor 0</literal>。
         </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>磁盘</guimenu></term>
        <listitem>
          <para>
          在两个节点之间复制的原始设备。如果您使用 LVM，请插入 LVM 设备名称。
         </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>元磁盘</guimenu></term>
        <listitem>
          <para>
          <guimenu>元磁盘</guimenu>可设置为 <literal>internal</literal> 值，或指定一个带索引的显式设备，用于存储 DRBD 所需的元数据。
         </para>
         <para>
          一个实际设备也可用于多个 DRBD 资源。例如，如果第一个资源的<guimenu>元磁盘</guimenu>为 <filename>/dev/disk/by-id/example-disk6[0]</filename>，您可以将 <filename>/dev/disk/by-id/example-disk6[1]</filename> 用于第二个资源。不过，此磁盘上必须为每个资源至少预留 128 MB 空间。固定的元数据大小会限制可复制的最大数据大小。
         </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>
     您可以在 <filename>/usr/share/doc/packages/drbd/drbd.conf</filename> 文件的示例中和 <command>drbd.conf(5)</command> 的手册页中查看所有这些选项的说明。
    </para>
   </step>
   <step>
    <para>单击<guimenu>保存</guimenu>。</para>
   </step>
   <step>
    <para>单击<guimenu>添加</guimenu>输入第二个 DRBD 资源，然后单击<guimenu>保存</guimenu>完成。
    </para>
   </step>
   <step>
     <para>单击<guimenu>确定</guimenu>和<guimenu>完成</guimenu>关闭资源配置界面。
     </para>
   </step>
   <step>
     <para>如果您将 LVM 与 DRBD 结合使用，则需要在 LVM 配置文件中更改特定选项（请参见 <guimenu>LVM 配置</guimenu>项）。YaST DRBD 模块可自动完成此项更改。
     </para>
     <para>
       LVM 过滤器中将会拒绝 DRBD 资源的 localhost 磁盘名称和默认过滤器。只能在 <filename>/dev/drbd</filename> 中扫描是否存在 LVM 设备。</para>
     <para>
       例如，如果将 <filename>/dev/disk/by-id/example-disk1</filename> 用作 DRBD 磁盘，系统会插入设备名称作为 LVM 过滤器中的第一项。要手动更改过滤器，请单击<guimenu>自动修改 LVM 设备过滤器</guimenu>复选框。
     </para>
   </step>
   <step>
     <para>单击<guimenu>完成</guimenu>保存更改。</para>
   </step>
   <step>
      <para>
        将 DRBD 配置文件复制到所有节点：
      </para>
      <screen><prompt role="root"># </prompt><command>csync2 -xv</command></screen>
      <para>
        默认情况下，DRBD 配置文件 <filename>/etc/drbd.conf</filename> 和目录 <filename>/etc/drbd.d/</filename> 已包含在 Csync2 同步的文件列表中。
      </para>
    </step>
  </procedure>
  </sect2>
  <sect2 xml:id="sec-ha-drbd-configure-init">
    <title>初始化和格式化 DRBD 资源</title>
    <para>准备好系统并配置好 DRBD 后，请执行磁盘的首次初始化：
    </para>
    <procedure>
        <step>
          <para>
           在 alice 和 bob 这<emphasis>两个</emphasis>节点上，初始化元数据存储设备：
          </para>
          <screen><prompt role="root"># </prompt><command>drbdadm create-md r0</command>
<prompt role="root"># </prompt><command>drbdadm up r0</command></screen>
        </step>
        <step>
         <para>
          要想缩短 DRBD 资源的初始重新同步时间，请检查以下项：
         </para>
         <itemizedlist>
          <listitem>
           <para>
            如果所有节点上的 DRBD 设备都具有相同数据（例如，通过使用<command>dd</command>中所述的 <xref linkend="sec-ha-drbd-configure"/> 命令销毁文件系统结构），则请在这两个节点上使用以下命令跳过初始重新同步步骤：
           </para>
           <screen><prompt role="root"># </prompt><command>drbdadm new-current-uuid --clear-bitmap r0/0</command></screen>
           <para>状态应该为 <literal>Secondary/Secondary UpToDate/UpToDate</literal></para>
          </listitem>
          <listitem>
           <para>
            否则，请继续下一步。
           </para>
          </listitem>
         </itemizedlist>
        </step>
        <step>
         <para>
          在主节点 alice 上，启动重新同步过程：
         </para>
         <screen><prompt role="root"># </prompt><command>drbdadm primary --force r0</command></screen>
        </step>
        <step>
         <para> 使用以下命令检查状态：</para>
         <screen><prompt role="root"># </prompt><command>drbdadm status r0</command>
r0 role:Primary
  disk:UpToDate
  bob role:Secondary
  peer-disk:UpToDate</screen>
        </step>
        <step>
          <para> 在 DRBD 设备上创建文件系统，例如：</para>
          <screen><prompt role="root"># </prompt><command>mkfs.ext3 /dev/drbd0</command></screen>
        </step>
        <step>
          <para> 装入文件系统并使用它：</para>
          <screen><prompt role="root"># </prompt><command>mount /dev/drbd0 /mnt/</command></screen>
        </step>
    </procedure>
  </sect2>
  <sect2 xml:id="sec-ha-drbd-configure-cluster-resource">
   <title>为 DRBD 创建群集资源</title>
   <para>
    初始化 DRBD 设备后，创建一个群集资源用于管理 DRBD 设备，并创建一个可提升克隆资源，使此资源可在两个节点上运行：
   </para>
   <procedure xml:id="pro-ha-drbd-configure-cluster-resource">
    <title>为 DRBD 创建群集资源</title>
    <step>
     <para>
      启动 <command>crm</command> 交互外壳：
     </para>
<screen><prompt role="root"># </prompt><command>crm configure</command></screen>
    </step>
    <step>
     <para>
      为 DRBD 资源 <literal>r0</literal> 创建原始资源：
     </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive drbd-r0 ocf:linbit:drbd \
  params drbd_resource="r0" \
  op monitor interval=15 role=Promoted \
  op monitor interval=30 role=Unpromoted</command></screen>
    </step>
    <step>
     <para>
      为 <literal>drbd-r0</literal> 原始资源创建一个可提升克隆资源：
     </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>clone cl-drbd-r0 drbd-r0 \
  meta promotable="true" promoted-max="1" promoted-node-max="1" \
  clone-max="2" clone-node-max="1" notify="true" interleave=true</command></screen>
    </step>
    <step>
     <para>
      提交此配置：
     </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>commit</command></screen>
    </step>
    <step>
      <para>
        退出交互式外壳：
      </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>quit</command></screen>
    </step>
   </procedure>
   <para>
     如果在配置 DRBD 之前将群集置于维护模式，现在可通过 <command>crm maintenance off</command> 使其恢复正常运行状态。
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-ha-drbd-resource-stacking">
  <title>创建堆叠式 DRBD 设备</title>
  <para>
   堆叠式 DRBD 设备包含两个其他设备，其中至少有一个设备也是 DRBD 资源。也就是说，DRBD 在一个现有 DRBD 资源的基础上又添加了一个节点（请参见<xref linkend="fig-ha-drbd-resource-stacking"/>）。此类复制设置可用于备份和灾难恢复用途。
  </para>
 
  <figure xml:id="fig-ha-drbd-resource-stacking">
   <title>资源堆叠</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata width="80%" fileref="ha_stacked_drbd.png"/>
    </imageobject>
    <imageobject role="html">
     <imagedata width="50%" fileref="ha_stacked_drbd.png"/>
    </imageobject>
    <textobject role="description">
      <phrase>该图显示了一个顶层 DRBD 设备，其连线通向两个子 DRBD 设备。其中一个子设备在主设备和辅助设备上运行，另一个子设备在备用设备上运行。</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   三向复制运用了异步（DRBD 协议 A）和同步复制（DRBD 协议 C）。异步部分用于堆叠的资源，同步部分用于备用资源。
  </para>

  <para>
   您的生产环境使用堆叠设备。例如，如果您有一个 DRBD 设备 <filename>/dev/drbd0</filename> 和一个堆叠在其上的设备 <filename>/dev/drbd10</filename>，将会在 <filename>/dev/drbd10</filename> 上创建文件系统。有关详细信息，请参见 <xref linkend="exa-ha-drbd-stacked-drbd"/>。
  </para>

  <example xml:id="exa-ha-drbd-stacked-drbd">
   <title>三节点堆叠式 DRBD 资源的配置</title>
   <screen># /etc/drbd.d/r0.res
resource r0 {
  protocol C;
  device    /dev/drbd0;
  disk      /dev/disk/by-id/example-disk1;
  meta-disk internal;

  on amsterdam-alice {
    address    192.168.1.1:7900;
  }

  on amsterdam-bob {
    address    192.168.1.2:7900;
  }
}

resource r0-U {
  protocol A;
  device     /dev/drbd10;

  stacked-on-top-of r0 {
    address    192.168.2.1:7910;
  }

  on berlin-charlie {
    disk       /dev/disk/by-id/example-disk10;
    address    192.168.2.2:7910; # Public IP of the backup node
    meta-disk  internal;
  }
}</screen>
  </example>
 </sect1>

 <sect1 xml:id="sec-ha-drbd-test">
  <title>测试 DRBD 服务</title>

  <para>
   如果安装和配置过程和预期一样，则您就准备好运行 DRBD 功能的基本测试了。此测试还有助于了解该软件的工作原理。
  </para>

  <procedure xml:id="pro-drbd-test">
   <step>
    <para>
     在 alice 上测试 DRBD 服务。
    </para>
    <substeps>
     <step>
      <para>
       打开终端控制台，然后以 <systemitem>root</systemitem> 用户身份登录。
      </para>
     </step>
     <step>
      <para>
       在 alice 上创建一个挂载点，如 <filename>/srv/r0</filename>：
      </para>
<screen><prompt role="root"># </prompt><command>mkdir -p /srv/r0</command></screen>
     </step>
     <step>
      <para>
       挂载 <command>drbd</command> 设备：
      </para>
<screen><prompt role="root"># </prompt><command>mount -o rw /dev/drbd0 /srv/r0</command></screen>
     </step>
     <step>
      <para>
       从主节点创建文件：
      </para>
<screen><prompt role="root"># </prompt><command>touch /srv/r0/from_alice</command></screen>
     </step>
     <step>
      <para>
       卸载 alice 上的磁盘：
      </para>
<screen><prompt role="root"># </prompt><command>umount /srv/r0</command></screen>
     </step>
     <step>
      <para>
       通过在 alice 上键入以下命令，降级 alice 上的 DRBD 服务：
      </para>
<screen><prompt role="root"># </prompt><command>drbdadm secondary r0</command></screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     在 bob 上测试 DRBD 服务。
    </para>
    <substeps>
     <step>
      <para>
       在 bob 上打开终端控制台，然后以 <systemitem>root</systemitem> 身份登录。
      </para>
     </step>
     <step>
      <para>
       在 bob 上，将 DRBD 服务提升为主服务：
      </para>
<screen><prompt role="root"># </prompt><command>drbdadm primary r0</command></screen>
     </step>
     <step>
      <para>
       在 bob 上，检查 bob 是否为主节点：
      </para>
<screen><prompt role="root"># </prompt><command>drbdadm status r0</command></screen>
     </step>
     <step>
      <para> 在 bob 上创建一个挂载点，如 <filename>/srv/r0</filename>：</para>
<screen><prompt role="root"># </prompt><command>mkdir /srv/r0</command></screen>
     </step>
     <step>
      <para>
       在 bob 上，挂载 DRBD 设备：
      </para>
<screen><prompt role="root"># </prompt><command>mount -o rw /dev/drbd0 /srv/r0</command></screen>
     </step>
     <step>
      <para>
       校验在 alice 上创建的文件是否存在：
      </para>
<screen><prompt role="root"># </prompt><command>ls /srv/r0/from_alice</command></screen>
      <para> 此时应该会列出 <filename>/srv/r0/from_alice</filename> 文件。</para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     如果该服务在两个节点上都运行正常，则 DRBD 安装即已完成。
    </para>
   </step>
   <step>
    <para>
     再次将 alice 设置为主节点。
    </para>
    <substeps performance="required">
     <step>
      <para>
       通过在 bob 上键入以下命令，卸下 bob 上的磁盘：
      </para>
<screen><prompt role="root"># </prompt><command>umount /srv/r0</command></screen>
     </step>
     <step>
      <para>
       通过在 bob 上键入以下命令，降级 bob 上的 DRBD 服务：
      </para>
<screen><prompt role="root"># </prompt><command>drbdadm secondary r0</command></screen>
     </step>
     <step>
      <para>
       在 alice 上，将 DRBD 服务提升为主服务：
      </para>
<screen><prompt role="root"># </prompt><command>drbdadm primary r0</command></screen>
     </step>
     <step>
      <para>
       在 alice 上，检查 alice 是否为主节点：
      </para>
<screen><prompt role="root"># </prompt><command>drbdadm status r0</command></screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     要使服务在服务器出问题时自动启动并进行故障转移，可以使用 Pacemaker/Corosync 将 DRBD 设置为高可用性服务。有关针对 SUSE Linux Enterprise 15 S7 进行安装和配置的信息，请参见<xref linkend="part-config"/>。
    </para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-ha-drbd-monitor">
  <title>监控 DRBD 设备</title>
  <para>DRBD 随附了可提供实时监控的实用程序 <command>drbdmon</command>。该实用程序会显示所有已配置的资源及其问题。
  </para>
  <figure>
   <title><command>drbdmon</command> 显示了一个正常的连接</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="drbd-drbdmon-ok.png" width="70%"/>
    </imageobject>
    <textobject role="description">
      <phrase>此 <command>drbdmon</command> 截图显示了 DRBD 资源和节点。每一项都是绿色的，说明没有任何问题。</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>如果出现了问题，<command>drbdadm</command> 会显示错误消息：
  </para>
  <figure>
   <title><command>drbdmon</command> 显示了一个错误的连接</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="drbd-drbdmon-bad.png" width="70%"/>
    </imageobject>
    <textobject role="description">
      <phrase>此 <command>drbdmon</command> 截图显示了 DRBD 资源和节点。节点 bob 为红色，处于连接中状态。该资源显示为已降级，说明出现了问题。</phrase>
    </textobject>
   </mediaobject>
  </figure>
 </sect1>

 <sect1 xml:id="sec-ha-drbd-tuning">
  <title>调整 DRBD</title>

  <para>
   可使用几种方式调整 DRBD：
  </para>

  <orderedlist>
   <listitem>
    <para>
     对元数据使用外部磁盘。这可能会有所帮助，不过会降低维护便捷性。
    </para>
   </listitem>
   <listitem>
    <para>
     通过 <command>sysctl</command> 更改接收和发送缓冲区设置，以微调网络连接。
    </para>
   </listitem>
   <listitem>
    <para>
     在 DRBD 配置中更改 <systemitem>max-epoch-size</systemitem>、<systemitem>max-buffers</systemitem> 或更改两者。
    </para>
   </listitem>
   <listitem>
    <para>
     根据 IO 模式增大 <systemitem>al-extents</systemitem> 值。
    </para>
   </listitem>
   <listitem>
    <para>
     如果您有一个配备了 BBU（<emphasis>电池备份单元</emphasis>）的硬件 RAID 控制器，设置 <systemitem>no-disk-flushes</systemitem>、<systemitem>no-disk-barrier</systemitem> 和/或 <systemitem>no-md-flushes</systemitem> 可能会对您有所助益。
    </para>
   </listitem>
   <listitem>
    <para>
     根据工作负载启用读平衡。有关详细信息，请参见 <link xlink:href="https://www.linbit.com/en/read-balancing/"></link>。
    </para>
   </listitem>
  </orderedlist>
 </sect1>
 <sect1 xml:id="sec-ha-drbd-trouble">
  <title>DRBD 查错</title>

  <para>
   DRBD 设置涉及很多组件，因此导致问题发生的原因多种多样。以下几节介绍了数种常见场景和建议的解决方案。
  </para>

  <sect2 xml:id="sec-ha-drbd-trouble-config">
   <title>配置</title>
   <para>
    如果初始 DRBD 设置未按预期工作，则可能说明配置有问题。
   </para>
   <para>
    获取关于配置的信息：
   </para>
   <procedure>
    <step>
     <para>
      打开终端控制台，然后以 <systemitem class="username">root</systemitem> 用户身份登录。
     </para>
    </step>
    <step>
     <para>
      运行 <command>drbdadm</command>（带 <command>-d</command> 选项）测试配置文件。输入下面的命令：
     </para>
<screen><prompt role="root"># </prompt><command>drbdadm -d adjust r0</command></screen>
     <para>
      在 <command>adjust</command> 选项的干运行中，<command>drbdadm</command> 将 DRBD 资源的实际配置与您的 DRBD 配置文件进行比较，但它不会执行这些调用。检查输出以确保您了解任何错误的根源。
     </para>
    </step>
    <step>
     <para>
      如果 <filename>/etc/drbd.d/*</filename> 和 <filename>drbd.conf</filename> 文件中存在错误，请更正后再继续。
     </para>
    </step>
    <step>
     <para>
      如果分区和设置正确，请再次运行 <command>drbdadm</command>（不带 <command>-d</command> 选项）。
     </para>
<screen><prompt role="root"># </prompt><command>drbdadm adjust r0</command></screen>
     <para>
      这会将配置文件应用到 DRBD 资源。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-ha-drbd-hostnames">
   <title>主机名</title>
   <para>
    DRBD 的主机名区分大小写（<systemitem>Node0</systemitem> 和 <systemitem>node0</systemitem> 是不同的主机），这与内核中存储的主机名不同（请参见 <command>uname -n</command> 输出）。
   </para>
   <para>
    如果您有多个网络设备，并希望使用专用网络设备，主机名可能不会解析成所用的 IP 地址。在这种情况下，可使用参数 <literal>disable-ip-verification</literal>。
   </para>
  </sect2>

  <sect2 xml:id="sec-ha-drbd-port">
   <title>TCP 端口 7788</title>
   <para>
    如果系统无法连接到对等体，说明本地防火墙可能有问题。默认情况下，DRBD 使用 TCP 端口 <literal>7788</literal> 访问另一个节点。确保在两个节点上该端口均可访问。
   </para>
  </sect2>

  <sect2 xml:id="sec-ha-drbd-trouble-broken">
   <title>DRBD 设备在重引导后中断连接</title>
   <para>
    如果 DRBD 不知道哪个真实设备保存的是最新数据，就会变为节点分裂状态。在这种情况下，DRBD 子系统将分别成为次系统，并且互不相连。在这种情况下，可以在日志记录数据中找到以下消息：
   </para>
<screen>Split-Brain detected, dropping connection!</screen>
   <para>
    要解决此问题，请在要丢弃其数据的节点上输入以下命令：
   </para>
<screen><prompt role="root"># </prompt><command>drbdadm disconnect r0</command>
<prompt role="root"># </prompt><command>drbdadm secondary r0</command>
<prompt role="root"># </prompt><command>drbdadm connect --discard-my-data r0</command></screen>
   <para>
    在具有最新数据的节点上输入以下命令：
   </para>
<screen><prompt role="root"># </prompt><command>drbdadm disconnect r0</command>
<prompt role="root"># </prompt><command>drbdadm connect r0</command></screen>
   <para>
    通过使用对等体的数据重写一个节点的数据，以此确保两个节点上的视图保持一致，该问题可得到解决。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-ha-drbd-more">
  <title>更多信息</title>

  <para>
   以下开放源代码资源可用于 DRBD：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     项目主页 <link xlink:href="https://linbit.com/drbd/"></link>。
    </para>
   </listitem>
   <listitem>
    <para>
     请参见<xref linkend="article-nfs-storage"/>。
    </para>
   </listitem>
   <listitem>
    <para>
     该发行套件中提供以下 DRBD 手册页：<command>drbd(8)</command>、<command>drbdmeta(8)</command>、<command>drbdsetup(8)</command>、<command>drbdadm(8)</command>、<command>drbd.conf(5)</command>。
    </para>
   </listitem>
   <listitem>
    <para>
     您可在 <filename>/usr/share/doc/packages/drbd-utils/drbd.conf.example</filename> 中找到被注释的 DRBD 示例配置。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
