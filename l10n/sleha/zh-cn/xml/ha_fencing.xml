<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_fencing.xml" version="5.0" xml:id="cha-ha-fencing">

 <title>屏障和 STONITH</title>
 <info>
      <abstract>
        <para>
    屏蔽在 HA（高可用性）计算机群集中是一个非常重要的概念。群集有时会检测到某个节点行为异常，需要删除此节点。这称为<emphasis>屏蔽</emphasis>，通常通过 STONITH 资源来完成。屏蔽可以定义为一种使 HA 群集具有已知状态的方法。
   </para>
        <para>
    群集中的每个资源均带有状态。例如：<quote>资源 r1 已在 alice 上启动</quote>。在 HA 群集中，这种状态表明<quote>资源 r1 在除 alice 外的所有节点上都已停止</quote>，因为群集必须确保每个资源只能在一个节点上启动。每个节点都必须报告资源发生的每个更改。这样群集状态就是资源状态和节点状态的集合。
   </para>
        <para>
    当节点或资源的状态无法十分肯定地确立时，将进行屏蔽。即使在群集未感知到给定节点上发生的事件时，屏蔽也可确保此节点不会运行任何重要资源。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    

 <sect1 xml:id="sec-ha-fencing-classes">
  <title>屏蔽类别</title>

  <para>
   有两类屏蔽：资源级别屏蔽和节点级别屏蔽。后者是本章的主题。
  </para>

  <variablelist>
   <varlistentry>
    <term>资源级别屏蔽</term>
    <listitem>
     <para>资源级别屏蔽可确保对给定资源的排它访问。此情况的常见示例就是通过 SAN 光纤通道开关（用于锁定节点不让访问其磁盘）或 SCSI 保留之类的方法更改节点的区域。有关示例，请参见<xref linkend="sec-ha-storage-protect-rsc-fencing"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>节点级别屏蔽</term>
    <listitem>
     <para>
      节点级别屏蔽可彻底防止故障节点访问共享资源。这种屏蔽通常采用一种简单但却粗暴的方式来完成，即重置或关闭节点。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <table xml:id="tab-fencing-classes">
    <title>屏蔽类别</title>
    <tgroup cols="4">
      <thead>
        <row>
          <entry align="center">类别</entry>
          <entry align="center">方法</entry>
          <entry align="center">选项</entry>
          <entry align="center">示例</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry morerows="3">节点屏蔽<footnote><para>High Availability 群集中强制启用</para></footnote> （重引导或关机）</entry>
          <entry morerows="1">远程管理</entry>
          <entry>节点内</entry>
          <entry>ILO、DRAC、IPMI</entry>
        </row>
        <row>
          <entry>外部</entry>
          <entry>HMC、vCenter、EC2</entry>
        </row>
        <row>
          <entry morerows="1">SBD 和看门狗</entry>
          <entry>基于磁盘</entry>
          <entry morerows="1">HPWDT、iTCO_wdt、ipmi_wdt、softdog</entry>
        </row>
        <row>
          <entry>无磁盘</entry>
        </row>
        <row>
          <entry morerows="3">I/O 屏蔽（锁定或预留）</entry>
          <entry morerows="1">纯锁定</entry>
          <entry>群集内</entry>
          <entry>SFEX</entry>
        </row>
        <row>
          <entry>外部</entry>
          <entry>SCSI2 预留、SCSI3 预留</entry>
        </row>
        <row>
          <entry morerows="1">内置锁定</entry>
          <entry>基于群集</entry>
          <entry>群集 MD、具有 lvmlockd 和 DLM 的 LVM</entry>
        </row>
        <row>
          <entry>由群集处理</entry>
          <entry>MD-RAID</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
 </sect1>

 <sect1 xml:id="sec-ha-fencing-nodes">
  <title>节点级别屏蔽</title>

  <para>
   在 Pacemaker 群集中，节点级别屏蔽的实施方式是 STONITH（关闭其他节点）。SUSE Linux Enterprise High Availability 中包含 <command>stonith</command> 命令行工具，它是可远程将群集节点关机的可扩展接口。有关可用选项的概述，请运行 <command>stonith --help</command> 或参见 <command>stonith</command> 的手册页了解更多信息。
  </para>

  <sect2 xml:id="sec-ha-fencing-nodes-devices">
   <title>STONITH 设备</title>
   <para>
    要使用节点级屏蔽，首先需要有屏蔽设备。要获取 SUSE Linux Enterprise High Availability 所支持 STONITH 设备的列表，请在任何节点上运行以下命令之一：
   </para>
<screen><prompt role="root"># </prompt><command>stonith -L</command></screen>
   <para>
    或
   </para>
<screen><prompt role="root"># </prompt><command>crm ra list stonith</command></screen>
   <para>
    STONITH 设备可分为以下类别：
   </para>
   <variablelist>
    <varlistentry>
     <term>电源分配单元 (PDU)</term>
     <listitem>
      <para>
       在管理重要网络、服务器和数据中心设备的电源容量和功能方面，电源分配单元起着至关重要的作用。它可以提供对已连接设备的远程负载监控和独立电源出口控制，以实现远程电源循环。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>不间断电源 (UPS)</term>
     <listitem>
      <para>
       公共用电出现故障时，通过其他来源供电的稳定电源可为连接的设备提供应急电源。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>刀片电源控制设备</term>
     <listitem>
      <para>
       如果是在刀片组上运行群集，则刀片外壳中的电源控制设备就是提供屏蔽的唯一候选。此设备必须能够管理单刀片计算机。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>无人值守设备</term>
     <listitem>
      <para>
       无人值守设备（IBM RSA、HP iLO 和 Dell DRAC）正变得越来越普遍，在未来它们甚至可能成为现成可用计算机上的标准配置。然而，它们相比 UPS 设备有一点不足，因为它们与主机（群集节点）共享一个电源。如果节点持续断电，则认为控制该节点的设备失去作用。在这种情况下，CRM 将继续无限期地尝试屏蔽节点，而所有其他资源操作都将等待屏蔽/STONITH 操作完成。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>测试设备</term>
     <listitem>
      <para>
       测试设备仅用于测试目的。它们通常对硬件更加友好。将群集投放到生产环境之前，必须以真实的屏蔽设备进行替换。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    对 STONITH 设备的选择主要取决于您的预算和所用硬件的种类。
   </para>
  </sect2>

  <sect2 xml:id="sec-ha-fencing-nodes-implementation">
   <title>STONITH 实施</title>
   <para>
    SUSE® Linux Enterprise High Availability 的 STONITH 实现由两个组件组成：
   </para>
   <variablelist>
    <varlistentry>
     <term>pacemaker-fenced</term>
     <listitem>
      <para>
       <systemitem class="daemon">pacemaker-fenced</systemitem> 是可由本地进程或通过网络访问的守护程序。它接受与屏蔽操作（重置、关闭电源和打开电源）对应的命令。它还可以检查屏蔽设备的状态。
      </para>
      <para>
       <systemitem class="daemon">pacemaker-fenced</systemitem> 守护程序在 High Availability 群集中的每个节点上运行。在 DC 节点上运行的 <systemitem class="resource">pacemaker-fenced</systemitem> 实例从 <systemitem class="daemon">pacemaker-controld</systemitem> 接收屏蔽请求。由此实例及其他 <systemitem class="daemon">pacemaker-fenced</systemitem> 程序决定是否要执行所需的屏蔽操作。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>STONITH 插件</term>
     <listitem>
      <para>
       对于每个受支持的屏蔽设备，都有一个能够控制所述设备的 STONITH 插件。STONITH 插件是屏障设备的界面。<package>cluster-glue</package> 软件包中的 STONITH 插件位于每个节点上的 <filename>/usr/lib64/stonith/plugins</filename> 中。（如果您还安装了 <package>fence-agents</package> 软件包，该软件包中的插件将安装在 <filename>/usr/sbin/fence_*</filename> 中）。对于 <systemitem class="daemon">pacemaker-fenced</systemitem> 而言，所有 STONITH 插件看起来都是一样的，但实际上却各不相同，都体现了屏蔽设备的性质。
      </para>
      <para>
       某些插件支持多个设备。<literal>ipmilan</literal>（或 <literal>external/ipmi</literal>）就是个典型的示例，它实施 IPMI 协议并可控制支持此协议的任何设备。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-ha-fencing-config">
  <title>STONITH 资源和配置</title>

  <para>
   要设置屏蔽，需要配置一个或多个 STONITH 资源 - <systemitem class="daemon">pacemaker-fenced</systemitem> 守护程序不需要配置。所有配置都存储在 CIB 中。资源属于 <literal>stonith</literal>stonith 类的资源（请参见<xref linkend="sec-ha-config-basics-raclasses"/>）。STONITH 资源是 STONITH 插件在 CIB 中的代表。除了屏蔽操作，还可以启动、停止和监控 STONITH 资源，就像任何其他资源一样。启动或停止 STONITH 资源意味着加载或卸载节点上的 STONITH 设备驱动程序。启动和停止仅是管理操作，实际上不会对屏蔽设备自身执行任何操作。然而，监控操作实际上等同于登录到该设备（以验证设备能否在需要时正常运行）。STONITH 资源故障转移到另一个节点时，它通过加载相应的驱动程序允许当前节点与 STONITH 设备对话。
  </para>

  <para>
   STONITH 资源可像任何其他资源一样进行配置。有关如何使用首选群集管理工具执行此操作的细节：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Hawk2：<xref linkend="sec-conf-hawk2-rsc-stonith"/>
    </para>
   </listitem>
   <listitem>
    <para>
     crmsh：<xref linkend="sec-ha-manual-create-stonith"/>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   参数（属性）列表取决于相应的 STONITH 类型。要查看特定设备的参数列表，请使用 <command>stonith</command> 命令：
  </para>

<screen><prompt role="root"># </prompt><command>stonith -t <replaceable>stonith-device-type</replaceable> -n</command></screen>

  <para>
   例如，要查看 <literal>ibmhmc</literal> 设备类型的参数，请输入以下命令：
  </para>

<screen><prompt role="root"># </prompt><command>stonith -t ibmhmc -n</command></screen>

  <para>
   要获取设备的简短帮助文本，请使用 <option>-h</option> 选项：
  </para>

<screen><prompt role="root"># </prompt><command>stonith -t <replaceable>stonith-device-type</replaceable> -h</command></screen>

  <sect2 xml:id="sec-ha-fencing-config-examples">
   <title>STONITH 资源配置示例</title>
   <para>
    下面是用 <command>crm</command> 命令行工具的语法编写的示例配置。要应用这些配置，请将示例添加到文本文件（例如 <filename>sample.txt</filename>）中并运行以下命令：
   </para>
<screen><prompt role="root"># </prompt><command>crm &lt; sample.txt</command></screen>
   <para>
    有关使用 <command>crm</command> 命令行工具配置资源的更多信息，请参见<xref linkend="cha-ha-manual-config"/>。
   </para>
   <example>
    <title>IBM RSA 无人值守设备的配置</title>
    <para>
     可以如下配置 IBM RSA 无人值守设备：
    </para>
<screen><prompt role="root"># </prompt><command>crm configure</command>
<prompt role="custom">crm(live)configure# </prompt><command>primitive st-ibmrsa-1 stonith:external/ibmrsa-telnet \
  params nodename=alice ip_address=192.168.0.101 \
  username=USERNAME password=PASSW0RD</command>
<prompt role="custom">crm(live)configure# </prompt><command>primitive st-ibmrsa-2 stonith:external/ibmrsa-telnet \
  params nodename=bob ip_address=192.168.0.102 \
  username=USERNAME password=PASSW0RD</command>
<prompt role="custom">crm(live)configure# </prompt><command>location l-st-alice st-ibmrsa-1 -inf: alice</command>
<prompt role="custom">crm(live)configure# </prompt><command>location l-st-bob st-ibmrsa-2 -inf: bob</command>
<prompt role="custom">crm(live)configure# </prompt><command>commit</command></screen>
    <para>
     此示例中使用了位置约束，这是因为 STONITH 操作失败的可能性始终存在。因此，在同时兼作执行程序的节点上操作 STONITH 并不可靠。如果重置节点，则它将无法发送有关屏蔽操作结果的通知。唯一的方法是假设操作会成功并提前发送通知。不过，如果操作失败，可能会出现问题。因此，按惯例 <systemitem class="daemon">pacemaker-fenced</systemitem> 会拒绝终止其主机。
    </para>
   </example>
   <example>
    <title>UPS 屏蔽设备的配置</title>
    <para>
     UPS 类型屏蔽设置的配置类似于上面的示例。此处不作详细介绍。所有 UPS 设备均使用相同的机制屏蔽。访问设备的方式有所不同。旧的 UPS 设备只有一个串行端口，通常使用特殊的串行电缆以 1200 波特的速率进行连接。许多新的 UPS 设备仍有一个串行端口，但它们一般还使用 USB 或以太网接口。可以使用的连接类型取决于插件支持的连接。
    </para>
    <para>
     例如，使用 <command>stonith
     -t <replaceable>stonith-device-type</replaceable> -n</command> 命令比较 <literal>apcmaster</literal> 与 <literal>apcsmart</literal> 设备：
    </para>
<screen><prompt role="root"># </prompt><command>stonith -t apcmaster -h</command></screen>
    <para>
     返回以下信息：
    </para>
<screen>STONITH Device: apcmaster - APC MasterSwitch (via telnet)
NOTE: The APC MasterSwitch accepts only one (telnet)
connection/session a time. When one session is active,
subsequent attempts to connect to the MasterSwitch will fail.
For more information see http://www.apc.com/
List of valid parameter names for apcmaster STONITH device:
        ipaddr
        login
        password
For Config info [-p] syntax, give each of the above parameters in order as
the -p value.
Arguments are separated by white space.
Config file [-F] syntax is the same as -p, except # at the start of a line
denotes a comment</screen>
    <para>
     使用
    </para>
<screen><prompt role="root"># </prompt><command>stonith -t apcsmart -h</command></screen>
    <para>
     得到以下输出：
    </para>
<screen>STONITH Device: apcsmart - APC Smart UPS
(via serial port - NOT USB!).
Works with higher-end APC UPSes, like
Back-UPS Pro, Smart-UPS, Matrix-UPS, etc.
(Smart-UPS may have to be &gt;= Smart-UPS 700?).
See http://www.networkupstools.org/protocols/apcsmart.html
for protocol compatibility details.
For more information see http://www.apc.com/
List of valid parameter names for apcsmart STONITH device:
ttydev
hostlist</screen>
    <para>
     第一个插件支持带有一个网络端口的 APC UPS 和 telnet 协议。第二个插件使用 APC SMART 协议（通过许多 APC UPS 产品系列都支持的串行线路）。
    </para>
   </example>
   <example xml:id="ex-ha-fencing-kdump">
    <title>Kdump 设备的配置</title>
    <para>Kdump 属于<xref linkend="sec-ha-fencing-special" xrefstyle="select:title"/>，实际上与屏蔽设备相反。该插件检查节点上是否正在进行内核转储。如果是，插件会返回 true 并在执行操作时将节点<emphasis>视为</emphasis>已被屏蔽，因为节点将在 Kdump 完成后重引导。否则，它将返回失败消息，并且系统会触发下一个屏蔽设备。
    </para>
    <para>
     Kdump 插件必须与另一个真实的 STONITH 设备（例如 <literal>external/ipmi</literal>）搭配使用。<emphasis>不能</emphasis>将 SBD 作为 STONITH 设备。为确保屏蔽机制正常工作，必须指定屏蔽设备的顺序，以便在触发真实 STONITH 设备之前完成 Kdump 检查，具体步骤如下。
   </para>
   <procedure>
    <step>
    <para>
     使用 <literal>stonith:fence_kdump</literal> 屏蔽代理。下面显示了一个配置示例。有关详细信息，请参见 <command>crm ra info stonith:fence_kdump</command>。
    </para>
<screen><prompt role="root"># </prompt><command>crm configure</command>
<prompt role="custom">crm(live)configure# </prompt><command>primitive st-kdump stonith:fence_kdump \
    params nodename="alice "\ </command><co xml:id="co-ha-fence-kdump-nodename"/>
    <command>pcmk_host_list="alice" \
    pcmk_host_check="static-list" \
    pcmk_reboot_action="off" \
    pcmk_monitor_action="metadata" \
    pcmk_reboot_retries="1" \
    timeout="60"</command><co xml:id="co-ha-fence-kdump-timeout"/>
<prompt role="custom">crm(live)configure# </prompt><command>commit</command></screen>
    <calloutlist>
     <callout arearefs="co-ha-fence-kdump-nodename">
      <para>
       要从 <literal>fence_kdump_send</literal> 中侦听消息的节点名称。可以根据需要为其他节点配置更多 STONITH 资源。
      </para>
     </callout>
     <callout arearefs="co-ha-fence-kdump-timeout">
       <para>
        指定等待 <literal>fence_kdump_send</literal> 返回消息的时长。如果收到消息，则表示正在进行 Kdump，屏蔽机制会将相应节点视为已屏蔽。如果未收到消息，<literal>fence_kdump</literal> 会超时，表示屏蔽操作失败。<literal>fencing_topology</literal> 中的下一个 STONITH 设备最终会屏蔽该节点。
       </para>
     </callout>
    </calloutlist>
   </step>
   <step>
    <para>
     在每个节点上，将 <literal>fence_kdump_send</literal> 配置为在 Kdump 进程完成后向所有节点发送消息。在 <filename>/etc/sysconfig/kdump</filename> 中，编辑 <literal>KDUMP_POSTSCRIPT</literal> 一行。例如：
    </para>
<screen>KDUMP_POSTSCRIPT="/usr/lib/fence_kdump_send -i 10 -p 7410 -c 1 <replaceable>NODELIST</replaceable>"</screen>
    <para>
     请将 <replaceable>NODELIST</replaceable> 替换为所有群集节点的主机名。
    </para>
   </step>
   <step>
    <para>
     运行 <command>systemctl restart kdump.service</command> 或 <command>mkdumprd</command>。以上每条命令都会检测到 <filename>/etc/sysconfig/kdump</filename> 已修改，并会重新生成 <filename>initrd</filename>，以在启用网络的情况下包含 <literal>fence_kdump_send</literal> 库。
    </para>
   </step>
   <step>
    <para>
     在防火墙中针对 <literal>fence_kdump</literal> 资源打开一个端口。默认端口为 <literal>7410</literal>.
    </para>
   </step>
   <step>
    <para>
     为了能够在触发真实的屏蔽机制（例如 <literal>external/ipmi</literal>）之前完成 Kdump 检查，请使用类似以下的配置：</para>
    <screen><prompt role="custom">crm(live)configure# </prompt><command>fencing_topology \
  alice: kdump-node1 ipmi-node1 \
  bob: kdump-node2 ipmi-node2</command>
<prompt role="custom">crm(live)configure# </prompt><command>commit</command></screen>
    <para>有关 <option>fencing_topology</option> 的更多细节，请使用以下命令：
    </para>
   <screen><prompt role="custom">crm(live)configure# </prompt><command>help fencing_topology</command></screen>
  </step>
 </procedure>
 </example>
   </sect2>
 </sect1>
 <sect1 xml:id="sec-ha-fencing-monitor">
  <title>监控屏蔽设备</title>

  <para>
   与任何其他资源一样，STONITH 类代理还支持使用监控操作检查状态。
  </para>

  <para>
   屏蔽设备是 HA 群集不可缺少的组成部分，但越少需要使用它们越好。电源管理设备常常会受广播流量过多的影响。某些设备无法处理每分钟多于十个左右连接的情况。如果两个客户端同时尝试进行连接，一些设备会分辨不清。大多数设备不能同时处理多个会话。
  </para>

  <para>
   需要执行屏蔽操作以及屏蔽设备发生故障的情况很少见。对于大多数设备而言，至少 1800 秒（30 分钟）的监控间隔应已足够。确切的值取决于设备和基础结构。STONITH SBD 资源完全不需要监控。请参见<xref linkend="sec-ha-fencing-special"/>和<xref linkend="cha-ha-storage-protect"/>。
  </para>

  <para>
   有关如何配置监控操作的详细信息，请参见针对命令行方法的<xref linkend="sec-ha-manual-config-monitor"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-fencing-special">
  <title>特殊的屏蔽设备</title>

  <para>
   除了处理真实 STONITH 设备的插件外，还有特殊用途的 STONITH 插件。
  </para>

  <warning>
   <title>仅用于测试</title>
   <para>
    下面提到的一些 STONITH 插件仅供演示和测试之用。不要在实际情境中使用以下任何设备，因为这可能导致数据损坏和无法预料的结果：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>external/ssh </literal>
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>ssh </literal>
     </para>
    </listitem>

   </itemizedlist>
  </warning>

  <variablelist>

   <varlistentry xml:id="vle-fence-kdump">
    <term><literal>fence_kdump</literal>
    </term>
    <listitem>
     <para>
      此插件检查节点上是否正在进行内核转储。如果是，它会返回 <literal>true</literal>，并在执行操作时将节点视为已被屏蔽。在转储过程中，此节点不能运行任何资源。这可避免屏蔽已关闭但正在进行转储的节点，从而节省屏蔽所需时间。此插件必须与另一个实际 STONITH 设备一同使用。
     </para>
     <para>
      有关配置细节，请参见<xref linkend="ex-ha-fencing-kdump"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>external/sbd</literal>
    </term>
    <listitem>
     <para>
      这是一个自屏蔽设备。它会对可以插入共享磁盘的所谓<quote>毒药</quote>作出反应。当中断共享存储区连接时，它将停止节点运行。要了解如何使用此 STONITH 代理实施基于存储的屏蔽，请参见<xref linkend="cha-ha-storage-protect" xrefstyle="select:label nopage"/>、<xref linkend="pro-ha-storage-protect-fencing"/>。
      
      
     </para>

     <important>
      <title><literal>external/sbd</literal> 和 DRBD</title>
      <para>
       <literal>external/sbd</literal> 屏蔽机制要求能直接从每个节点读取 SBD 分区。因此，SBD 分区中不得使用 DRBD* 设备。
      </para>
      <para>
       但是，如果 SBD 分区位于未镜像或未复制的共享磁盘上，则可以对 DRBD 群集使用该屏蔽机制。
      </para>
     </important>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>external/ssh</literal>
    </term>
    <listitem>
     <para>
      另一个基于软件的<quote>屏蔽</quote>机制。节点必须能够以 <systemitem class="username">root</systemitem> 身份相互登录，而且无需口令。它使用一个参数 <literal>hostlist</literal> 指定它将指向的目标节点。由于不能重置已确实失败的节点，它不得用于实际群集 - 仅供测试和演示之用。将其用于共享存储将导致数据损坏。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>meatware</literal>
    </term>
    <listitem>
     <para>
      <literal>meatware</literal> 需要用户操作才能运行。调用 <literal>meatware</literal> 时，它会记录一条 CRIT 严重性消息，显示在节点的控制台上。然后，操作员会确认节点已关闭，并发出 <command>meatclient(8)</command> 命令。此命令指示 <literal>meatware</literal> 通知群集将该节点视为已出现故障。有关更多信息，请参见<filename>/usr/share/doc/packages/cluster-glue/README.meatware</filename>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>suicide</literal>
    </term>
    <listitem>
     <para>
      这是一个仅有软件的设备，它可以使用 <command>reboot</command> 命令重引导它运行所处的节点。这需要节点的操作系统的操作，在某些情况下可能失败。因此，如果可能，请避免使用此设备。然而，在单节点群集上使用此设备是很安全的。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>无磁盘 SBD</term>
    <listitem>
     <para>如果您想要建立一个不含共享存储的屏蔽机制，则此配置十分有用。在此无磁盘模式下，SBD 会使用硬件看门狗来屏蔽节点，而不依赖于任何共享设备。不过，无磁盘 SBD 不能处理双节点群集的节点分裂情况。此选项仅可用于<emphasis>超过 2 个</emphasis>节点的群集，或与 QDevice 结合使用以帮助处理节点分裂情况。</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   <literal>suicide</literal> 是<quote>I do not shoot my host</quote>（我自己不关闭我的主机）规则的唯一例外情况。
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-fencing-recommend">
  <title>基本建议</title>

  <para>
   请查看以下建议列表以避免常见错误：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     不要并行配置多个电源开关。
    </para>
   </listitem>
   <listitem>
    <para>
     要测试 STONITH 设备及其配置，请从每个节点拔出一次插头，并校验该节点是否会被屏蔽。
    </para>
   </listitem>
   <listitem>
    <para>
     在负载状态下测试资源，并校验超时值是否合适。超时值设置得过短会触发（不必要的）屏蔽操作。有关细节，请参见 <xref linkend="sec-ha-config-basics-timeouts"/>。
    </para>
   </listitem>
   <listitem>
    <para>
     对您的设置使用合适的屏蔽设备。有关细节，另请参见<xref linkend="sec-ha-fencing-special"/>。
    </para>
   </listitem>
   <listitem>
    <para>
     配置一个或多个 STONITH 资源。默认情况下，全局群集选项 <literal>stonith-enabled</literal> 设置为 <literal>true</literal>。如果未定义 STONITH 资源，群集会拒绝启动任何资源。
    </para>
   </listitem>
   <listitem>
    <para>
     不要将全局群集选项 <systemitem>stonith-enabled</systemitem> 设置为 <literal>false</literal>，原因如下：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       未启用 STONITH 的群集不受支持。
      </para>
     </listitem>
     <listitem>
      <para>
       DLM/OCFS2 将会阻止一直等待不会发生的屏蔽操作。
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     不要将全局群集选项 <systemitem>startup-fencing</systemitem> 设置为 <literal>false</literal>。由于以下原因，该选项默认会设置为 <literal>true</literal>：如果节点在群集启动期间处于未知状态，系统会将其屏蔽一次以确定其状态。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-ha-fencing-more">
  <title>更多信息</title>

  <variablelist>
   <varlistentry>
    <term><filename>/usr/share/doc/packages/cluster-glue</filename>
    </term>
    <listitem>
     <para>
      在已安装系统中，此目录包含多个 STONITH 插件和设备的自述文件。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://www.clusterlabs.org/pacemaker/doc/"></link>
    </term>
    <listitem>
     <para>
       <citetitle>Pacemaker Explained</citetitle>：说明用于配置 Pacemaker 的概念。包含全面、详细的参考信息。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://techthoughts.typepad.com/managing_computers/2007/10/split-brain-quo.html"></link>
    </term>
    <listitem>
     <para>
      说明 HA 群集中节点分裂、仲裁和屏蔽概念的文章。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
