<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ha_storage_protection.xml" version="5.0" xml:id="cha-ha-storage-protect">
 <title>存储保护和 SBD</title>
 <info>
  <abstract>
   <para>
    SBD（STONITH 块设备）通过经由共享块储存（SAN、iSCSI、FCoE 等）交换消息来为基于 Pacemaker 的群集提供节点屏蔽机制。此方法可以将屏蔽机制隔离开来，使其不受固件版本更改的影响或不依赖于特定固件控制器。SBD 需要在每个节点上安装一个看门狗，以确保能确实停止行为异常的节点。在某些情况下，还可以通过无磁盘模式运行 SBD，以便使用不含共享存储的 SBD。
   </para>
   <para>
    群集引导脚本提供了一种自动设置群集的方式，并可让您选择使用 SBD 作为屏蔽机制。有关详细信息，请参见<xref linkend="article-installation"/>。但是，手动设置 SBD 可为您提供个别设置的更多选项。
   </para>
   <para>
    本章介绍 SBD 背后的概念。它将指导您完成 SBD 所需组件的配置，防止您的群集在发生节点分裂情况下出现可能的数据损坏。
   </para>
   <para>
    除了节点级别屏蔽，您还可以使用额外的存储保护机制，例如 LVM 排它激活或 OCFS2 文件锁定支持（资源级别屏蔽）。它们可以保护您的系统，以防出现管理或应用程序故障。
   </para>
  </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-ha-storage-protect-overview">
      <title>概念概述</title>
      <para>SBD 是 <emphasis>Storage-Based Death</emphasis>（基于存储区的终止）或 <emphasis>STONITH Block Device</emphasis>（STONITH 块设备）的缩写。
      </para>
      <para>
        High Availability 群集堆栈的最高优先级是保护数据完整性。此项保护通过防止对数据存储进行未协调的并行访问来实现。群集堆栈会使用几种控制机制来实现此目标。
      </para>
      <para>
        但是，如果在群集中选出数个 DC，则可能导致网络分区或软件故障。这种节点分裂情况可能会导致数据损坏。
      </para>
      <para>
        可防止节点分裂情况的主要方法是通过 STONITH 实现节点屏蔽。如果使用 SBD 作为节点屏蔽机制，当发生节点分裂情况时，无需使用外部关机设备即可关闭节点。
      </para>

  <variablelist>
   <title>SBD 组件和机制</title>
   <varlistentry>
    <term>SBD 设备</term>
    <listitem>
     <para> 在所有节点都可访问共享存储设备的环境中，某个小逻辑单元（或逻辑单上的小分区）会格式化以用于 SBD。该 SBD 设备的大小取决于所用磁盘的块大小（例如，对于块大小为 512 字节的标准 SCSI 磁盘，该 SBD 设备大小为 1 MB；对于块大小为 4 KB 的 DASD 磁盘，则为 4 MB）。初始化过程会在设备上创建消息布局，配置最多 255 个节点的消息槽。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SBD 守护程序</term>
    <listitem>
     <para> 配置完相应的 SBD 守护程序后，在每个节点上使其上线，然后启动其余群集堆栈。它在所有其他群集组件都关闭之后才终止，从而确保了群集资源绝不会在没有 SBD 监督的情况下被激活。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>消息</term>
    <listitem>
     <para>
      此守护程序会自动将分区上的消息槽之一分配给其自身，并持续监控其中有无发送给它自己的消息。收到消息后，守护程序会立即执行请求，如启动关闭电源或重引导循环以进行屏蔽。
     </para>
     <para>
      另外，此守护程序会持续监控与存储设备的连接情况，如果无法连接分区，守护程序会自行终止。这就保证了它不会从屏蔽消息断开连接。如果群集数据驻留在不同分区中的同一个逻辑单元，一旦与存储设备的连接中断，工作负载便会终止，因此不会增加故障点。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>看门狗</term>
     <listitem>
      <para>
      只要使用 SBD，就必须确保看门狗正常工作。新式系统支持<emphasis>硬件看门狗</emphasis>，此功能需由软件组件来<quote>激发</quote>或<quote>供给数据</quote>。软件组件（在此例中为 SBD 守护程序）通过定期将服务脉冲写入看门狗来向看门狗<quote>供给</quote>数据。如果守护程序停止向看门狗反馈信号，硬件将强制系统重启动。这可防止出现 SBD 进程本身的故障，如失去响应或由于 I/O 错误而卡住。
     </para>
     </listitem>
   </varlistentry>
  </variablelist>
  <para>
   如果激活了 Pacemaker 集成，仅仅只是大多数设备丢失将不会触发自我屏蔽。例如，您的群集包含三个节点：A、B 和 C。由于网络分隔，A 只能看到自己，而 B 和 C 仍可相互通讯。在此案例中，有两个群集分区，一个因节点占多数（B 和 C）而具有仲裁，而另一个则不具有 (A)。如果在大多数屏蔽设备无法访问时发生此情况，则节点 A 会自我屏蔽，而节点 B 和 C 将会继续运行。
   </para>
  </sect1>

 <sect1 xml:id="sec-ha-storage-protect-steps">
 <title>手动设置 SBD 的概述</title>
 <para>
  手动设置基于存储的保护时必须执行以下步骤：必须以 <systemitem class="username">root</systemitem> 身份执行这些步骤。在开始执行之前，请查看<xref linkend="sec-ha-storage-protect-req" xrefstyle="sec.ha.storage.protect.req"/>。
  </para>
 <procedure>
   <step>
    <para>
     <xref linkend="sec-ha-storage-protect-watchdog" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>根据您的情况，可将 SBD 与一到三个设备搭配使用，或以无磁盘模式使用。有关概述，请参见<xref linkend="sec-ha-storage-protect-fencing-number"/>。有关详细的设置，请参见：</para>
    <itemizedlist>
     <listitem>
      <para>
       <xref linkend="sec-ha-storage-protect-fencing-setup" xrefstyle="select:title"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <xref linkend="sec-ha-storage-protect-diskless-sbd" xrefstyle="select:title"/>
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     <xref linkend="sec-ha-storage-protect-test" xrefstyle="select:title"/>
    </para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-req">
  <title>要求和限制</title>
   <itemizedlist>
   <listitem>
    <para>最多可将三个 SBD 设备用于基于存储的屏蔽。使用一到三个设备时，必须可从所有节点访问共享存储。</para>
   </listitem>
   <listitem>
    <para>群集中的所有节点上，共享存储设备的路径都必须永久且一致。使用稳定的设备名称，如 <filename>/dev/disk/by-id/dm-uuid-part1-mpath-abcedf12345</filename>。
     </para>
   </listitem>
   <listitem>
    <para>可通过光纤通道 (FC)、以太网光纤通道 (FCoE) 甚至 iSCSI 来连接共享存储。</para>
   </listitem>
   <listitem>
    <para> 共享存储段<emphasis>不得</emphasis>使用基于主机的 RAID、LVM 或 DRBD*。DRBD 可能已分割，这会导致 SBD 发生问题，因为 SBD 中不能存在两种状态。不能将群集多设备（群集 MD）用于 SBD。
    </para>
   </listitem>
   <listitem>
    <para> 但是，建议使用基于存储区的 RAID 和多路径，以提高可靠性。</para>
   </listitem>
   <listitem>
    <para>可以在不同群集之间共享某个 SBD 设备，只要共享该设备的节点数不超过 255 个。</para>
   </listitem>
   <listitem>
     <para>
       屏蔽不适用于非对称 SBD 设置。使用多个 SBD 设备时，所有节点都必须在所有 SBD 设备中有一个插槽。
     </para>
   </listitem>
   <listitem>
     <para>
       使用多个 SBD 设备时，所有设备都必须具有相同的配置，例如具有相同的超时值。
     </para>
   </listitem>
   <listitem>
    <para>对于具有两个以上节点的群集，还可以在<emphasis>无磁盘</emphasis>模式下使用 SBD。对于双节点群集，只有在另外还配置了 QDevice 来帮助处理节点分裂情况时，才能使用无磁盘 SBD。
   </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-fencing-number">
  <title>SBD 设备数量</title>
  <para> SBD 支持最多使用三个设备：</para>
  <variablelist>
   <varlistentry>
    <term>一个设备</term>
    <listitem>
     <para>
      最简单的实施。适用于所有数据位于同一个共享存储的群集。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>两个设备</term>
    <listitem>
     <para>
      此配置主要用于如下环境：使用基于主机的镜像，但是没有第三个存储设备可用。SBD 在丢失对某个镜像分支的访问权后不会自行终止，这样群集便可继续运行。不过，由于 SBD 掌握的情况不够全面，无法检测到存储区的不对称分裂，因此，当只有一个镜像分支可用时，它不会屏蔽另一方。如此一来，就无法在存储阵列中的一个关闭时对第二个故障自动容错。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>三个设备</term>
    <listitem>
     <para>
      最可靠的配置。它具有从一个设备中断（可能是因为发生故障或进行维护）的情况中恢复的能力。只有当一个以上设备失去连接并且有必要时，SBD 才会自行终止，具体取决于群集分区或节点的状态。如果至少有两个设备仍然可访问，便能成功传输屏蔽消息。
     </para>
     <para>
      此配置适用于存储未限制为单个阵列的更为复杂的环境。基于主机的镜像解决方案中，每条镜像分支可配备一个 SBD（自身不镜像），并在 iSCSI 上额外设置一个决胜值。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>无磁盘</term>
    <listitem>
     <para>如果您想要建立一个不含共享存储的屏蔽机制，则此配置十分有用。在此无磁盘模式下，SBD 会使用硬件看门狗来屏蔽节点，而不依赖于任何共享设备。不过，无磁盘 SBD 不能处理双节点群集的节点分裂情况。此选项仅可用于<emphasis>超过 2 个</emphasis>节点的群集，或与 QDevice 结合使用以帮助处理节点分裂情况。</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-watchdog-timings">
   <title>超时计算</title>
    <para>
      使用 SBD 作为屏蔽机制时，必须考虑所有组件的超时，因为它们之间相互依赖。使用多个 SBD 设备时，所有设备都必须具有相同的超时值。
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>watchdog</literal> 超时</term>
      <listitem>
       <para>
        此超时在初始化 SBD 设备期间设置。它主要取决于存储延迟。必须可在此时间内成功读取大多数设备。否则，节点可能会自我屏蔽。
       </para>
       <note>
        <title>基于磁盘的 SBD 的多路径或 iSCSI 设置</title>
          <para>
          如果 SBD 设备驻留在多路径设置或 iSCSI 上，则应将超时设置为检测到路径故障并切换到下一个路径所需的时间。
          </para>
          <para>
           这也意味着，在 <filename>/etc/multipath.conf</filename> 中，<literal>max_polling_interval</literal> 的值必须小于 SBD 设备初始化时设置的 <literal>watchdog</literal> 超时值。
         </para>
       </note>
       <para>
        对于无磁盘 SBD，看门狗超时通过 <filename>/etc/sysconfig/sbd</filename> 中的 <literal>SBD_WATCHDOG_TIMEOUT</literal> 参数设置。对于基于磁盘的 SBD，无需设置 <literal>SBD_WATCHDOG_TIMEOUT</literal>，因为 SBD 设备元数据中的看门狗设置优先于 <filename>/etc/sysconfig/sbd</filename>。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>msgwait</literal> 超时</term>
      <listitem>
       <para>
        此超时在初始化 SBD 设备期间设置。它定义了将消息写入到 SBD 设备上的某个节点槽后经过多长时间视为已传递。该超时应设置的足够长，让节点有时间检测到它是否需要自我屏蔽。
       </para>
       <para>
        但是，如果 <literal>msgwait</literal> 超时较长，被屏蔽的群集节点可能会在屏蔽操作返回之前就重新加入群集。可以按<varname>SBD_DELAY_START</varname> 中的<xref linkend="pro-ha-storage-protect-sbd-config" xrefstyle="select:label"/> 所述，在 SBD 配置中设置 <xref linkend="st-ha-storage-protect-sbd-delay-start"/> 参数来减少此情况。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>CIB 中的 <literal>stonith-timeout</literal></term>
      <listitem>
       <para>
        此超时在 CIB 中作为全局群集属性设置。它定义了等待 STONITH 操作（重引导、打开、关闭）完成的时间。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>CIB 中的 <literal>stonith-watchdog-timeout</literal></term>
      <listitem>
       <para>
        此超时在 CIB 中作为全局群集属性设置。如果未显式设置，则默认值为 <literal>0</literal>，此值适用于 SBD 与一到三个设备搭配使用的情况。对于无磁盘模式下的 SBD，此超时<emphasis>不得</emphasis>为 <literal>0</literal>。</para>
      </listitem>
     </varlistentry>
    </variablelist>
  <para>
   如果您更改看门狗超时值，则必须同时调整其他超时值。以下公式表达了基于磁盘的 SBD 的这些值之间的关系：
  </para>
   <example xml:id="ex-ha-storage-protect-disk-based-sbd-timings">
    <title>基于磁盘的 SBD 超时计算公式</title>
    <screen>Timeout (msgwait) &gt;= (Timeout (watchdog) * 2)
stonith-timeout &gt;= Timeout (msgwait) + 20%</screen>
    <para>
      例如，如果将看门狗超时设置为 <literal>30</literal>，请将 <literal>msgwait</literal> 超时至少设置为 <literal>60</literal>，将 <literal>stonith-timeout</literal> 超时至少设置为 <literal>72</literal>。
    </para>
   </example>
   <para>
    以下公式表达了无磁盘 SBD 的这些值之间的关系：
   </para>
   <example xml:id="ex-ha-storage-protect-diskless-sbd-timings">
    <title>无磁盘 SBD 超时计算公式</title>
    <screen>stonith-watchdog-timeout &gt;= (SBD_WATCHDOG_TIMEOUT * 2)
stonith-timeout &gt;= stonith-watchdog-timeout + 20%
    </screen>
    <para>
      例如，如果将 <literal>SBD_WATCHDOG_TIMEOUT</literal> 设置为 <literal>10</literal>，请将 <literal>stonith-watchdog-timeout</literal> 至少设置为 <literal>20</literal>，将 <literal>stonith-timeout</literal> 至少设置为 <literal>24</literal>。
    </para>
   </example>
    <para>
     如果您使用 crm 外壳提供的引导脚本设置群集并初始化 SBD 设备，系统会自动考虑这些超时之间的关系。
    </para>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-watchdog">
  <title>设置看门狗</title>
  <para> SUSE Linux Enterprise High Availability 随附了几个内核模块，用于提供特定于硬件的看门狗驱动程序。对于生产环境中的群集，我们建议使用硬件特定的看门狗驱动程序。不过，如果没有与您的硬件匹配的看门狗，则可以将 <systemitem class="resource">softdog</systemitem> 用作内核看门狗模块。
 </para>
 <para>
   SUSE Linux Enterprise High Availability 使用 SBD 守护程序作为向看门狗<quote>供给</quote>数据的软件组件。</para>

  <sect2 xml:id="sec-ha-storage-protect-hw-watchdog">
   <title>使用硬件看门狗</title>

   <para>查找适合给定系统的看门狗内核模块并非没有意义。自动探测常常会失败。因此，加载许多模块后才会加载正确的模块。</para>
    <para>
     下表列出了一些常用看门狗驱动程序。但这不是完整的受支持驱动程序列表。如果您的硬件未在下面列出，您还可以在 <filename>/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/kernel/drivers/watchdog</filename> 和 <filename>/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/kernel/drivers/ipmi</filename> 目录中查看选项列表。或者，您可以咨询您的硬件或系统供应商，获取特定于系统的看门狗配置细节。
    </para>
   <table xml:id="tab-ha-storage-protect-watchdog-drivers">
    <title>常用看门狗驱动程序</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>硬件</entry>
       <entry>驱动程序</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>HP</entry>
       <entry><systemitem class="resource">hpwdt</systemitem></entry>
      </row>
      <row>
       <entry>Dell、Lenovo (Intel TCO)</entry>
       <entry><systemitem class="resource">iTCO_wdt</systemitem></entry>
      </row>
      <row>
       <entry>Fujitsu</entry>
       <entry><systemitem class="resource">ipmi_watchdog</systemitem></entry>
      </row>
      <row>
       <entry>IBM Power 上的 LPAR</entry>
       <entry><systemitem class="resource">pseries-wdt</systemitem></entry>
      </row>
      <row>
       <entry>IBM z/VM 上的 VM</entry>
       <entry><systemitem class="resource">vmwatchdog</systemitem></entry>
      </row>
      <row>
       <entry>Xen VM (DomU)</entry>
       <entry><systemitem class="resource">xen_xdt</systemitem></entry>
      </row>
      <row>
       <entry>VMware vSphere 上的 VM</entry>
       <entry><systemitem class="resource">wdat_wdt</systemitem></entry>
      </row>
      <row>
       <entry>通用</entry>
       <entry><systemitem class="resource">softdog</systemitem></entry>
      </row>
     </tbody>
    </tgroup>
   </table>

 <important>
    <title>访问看门狗计时器</title>
    <para>有些硬件供应商交付的系统管理软件（例如 HP ASR 守护程序）会使用看门狗来进行系统重置。如果 SBD 使用了看门狗，请禁用此类软件。不能有其他任何软件在访问看门狗计时器。</para>
   </important>

   <procedure xml:id="pro-ha-storage-protect-watchdog">
    <title>加载正确的内核模块</title>
    <para>要确保加载正确的看门狗模块，请执行如下操作：</para>
     <step>
      <para>列出已随内核版本安装的驱动程序：</para>
       <screen><prompt role="root"># </prompt><command>rpm -ql kernel-<replaceable>VERSION</replaceable> | grep watchdog</command></screen>
      </step>
      <step xml:id="st-ha-storage-listwatchdog-modules">
       <para>列出内核中当前加载的任何看门狗模块：</para>
       <screen><prompt role="root"># </prompt><command>lsmod | egrep "(wd|dog)"</command></screen>
      </step>
      <step>
       <para>如果返回了结果，请卸载错误的模块：</para>
       <screen><prompt role="root"># </prompt><command>rmmod <replaceable>WRONG_MODULE</replaceable></command></screen>
      </step>
      <step>
     <para> 启用与您的硬件匹配的看门狗模块：</para>
     <screen><prompt role="root"># </prompt><command>echo <replaceable>WATCHDOG_MODULE</replaceable> &gt; /etc/modules-load.d/watchdog.conf</command>
<prompt role="root"># </prompt><command>systemctl restart systemd-modules-load</command></screen>
    </step>
    <step>
     <para>测试是否已正确加载看门狗模块：</para>
     <screen><prompt role="root"># </prompt><command>lsmod | grep dog</command></screen>
    </step>
    <step>
     <para>校验看门狗设备是否可用且可正常工作：</para>
     <screen><prompt role="root"># </prompt><command>ls -l /dev/watchdog*</command>
<prompt role="root"># </prompt><command>sbd query-watchdog</command></screen>
     <para> 如果看门狗设备无法使用，请检查模块名称和选项。可以考虑使用其他驱动程序。</para>
    </step>
    <step>
     <para>
      校验看门狗设备是否可正常工作：
     </para>
     <screen><prompt role="root"># </prompt><command>sbd -w <replaceable>WATCHDOG_DEVICE</replaceable> test-watchdog</command></screen>
    </step>
    <step>
     <para>
      重引导计算机，以确保不存在冲突的内核模块。例如，如果您在日志中发现 <literal>cannot register ...</literal> 消息，就表示存在这样的冲突模块。要避免加载此类模块，请参见 <link xlink:href="https://documentation.suse.com/sles/html/SLES-all/cha-mod.html#sec-mod-modprobe-blacklist"></link>。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-ha-storage-protect-sw-watchdog">
   <title>使用软件看门狗 (softdog)</title>
   <para>
    对于生产环境中的群集，建议使用硬件特定的看门狗驱动程序。不过，如果没有与您的硬件匹配的看门狗，则可以将 <systemitem class="resource">softdog</systemitem> 用作内核看门狗模块。</para>

   <important>
    <title>Softdog 限制</title>
    <para>
     Softdog 驱动程序假设至少有一个 CPU 仍然在运行。如果所有 CPU 均已阻塞，则 softdog 驱动程序中应该重引导系统的代码永远都不会执行。相反地，即使所有 CPU 均已阻塞，硬件看门狗也仍然会继续工作。
    </para>
   </important>

   <procedure xml:id="pro-ha-storage-protect-sw-watchdog">
    <title>加载 softdog 内核模块</title>
    <step>
     <para>启用 softdog 看门狗：</para>
<screen><prompt role="root"># </prompt><command>echo softdog &gt; /etc/modules-load.d/watchdog.conf</command>
<prompt role="root"># </prompt><command>systemctl restart systemd-modules-load</command></screen>
    </step>
    <step>
     <para>测试是否已正确加载 softdog 看门狗模块：</para>
     <screen><prompt role="root"># </prompt><command>lsmod | grep softdog</command></screen>
    </step>
   </procedure>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-fencing-setup">
  <title>设置 SBD 与设备</title>
  <para>
   进行该设置必须执行以下步骤：
  </para>
 <procedure>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-sbd-create" xrefstyle="select:title"/>
        </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-sbd-config" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-sbd-services" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-sbd-test" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
     <xref linkend="pro-ha-storage-protect-fencing" xrefstyle="select:title"/>
    </para>
   </step>
  </procedure>
  <para>
    在开始之前，请确保要用于 SBD 的一个或多个块设备满足在<xref linkend="sec-ha-storage-protect-req" xrefstyle="select:label"/>中指定的要求。
  </para>
  <para>
   设置 SBD 设备时，您需要考虑几个超时值。有关详细信息，请参见 <xref linkend="sec-ha-storage-protect-watchdog-timings"/>。
  </para>
  <para>
   如果节点上运行的 SBD 守护程序更新看门狗计时器的速度不够快，节点会自行终止。设置超时后，请在您的特定环境中予以测试。
  </para>

  <procedure xml:id="pro-ha-storage-protect-sbd-create">
   <title>初始化 SBD 设备</title>
   <para>
    要将 SBD 与共享存储搭配使用，必须先在一到三个块设备上创建消息布局。<command>sbd create</command> 命令会将元数据头写入指定的一个或多个设备。它还会初始化最多 255 个节点的消息槽。如果不带任何其他选项执行该命令，该命令将使用默认超时设置。</para>
    <warning>
     <title>覆盖现有数据</title>
      <para> 确保要用于 SBD 的一个或多个设备未保存任何重要数据。执行 <command>sbd create</command> 命令时，会直接重写指定块设备的大约第一个 MB，而不会发出其他请求或进行备份。
      </para>
    </warning>
    <step>
     <para>决定要将哪个块设备或哪些块设备用于 SBD。</para>
    </step>
    <step>
     <para>初始化 SBD 设备：</para>
     <itemizedlist>
       <listitem>
         <para>
           要使用具有默认超时值的某个设备，请运行以下命令：
         </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> create</command></screen>
       </listitem>
       <listitem>
         <para>
           要将多个设备用于 SBD，请指定 <option>-d</option> 选项多次，例如：
         </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID1</replaceable> -d /dev/disk/by-id/<replaceable>DEVICE_ID2</replaceable> -d /dev/disk/by-id/<replaceable>DEVICE_ID3</replaceable> create</command></screen>
       </listitem>
       <listitem>
       <para>要调整用于 SBD 的超时值（例如，如果您的 SBD 设备位于多路径组上），请使用 <option>-1</option> 和 <option>-4</option> 选项。如果初始化了多个设备，则必须为所有设备设置相同的超时值。有关详细信息，请参见 <xref linkend="sec-ha-storage-protect-watchdog-timings"/>。所有超时均以秒为单位指定：</para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> -1 30</command><co xml:id="co-ha-sbd-watchdog"/> <command>-4 60</command><co xml:id="co-ha-sbd-msgwait"/> <command>create</command></screen>
       <calloutlist>
         <callout arearefs="co-ha-sbd-watchdog">
         <para> <option>-1</option> 选项用于指定 <literal>watchdog</literal> 超时。在以上示例中，超时设置为 <literal>30</literal> 秒。模拟看门狗的最小允许值为 <literal>15</literal> 秒。</para>
        </callout>
        <callout arearefs="co-ha-sbd-msgwait">
        <para> <option>-4</option> 选项用于指定 <literal>msgwait</literal> 超时。在以上示例中，超时设置为 <literal>60</literal> 秒。</para>
        </callout>
      </calloutlist>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>检查设备上写入的内容：</para>
     <screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> dump</command>
Header version     : 2.1
UUID               : 619127f4-0e06-434c-84a0-ea82036e144c
Number of slots    : 255
Sector size        : 512
Timeout (watchdog) : 15
Timeout (allocate) : 2
Timeout (loop)     : 1
Timeout (msgwait)  : 30
==Header on disk /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> is dumped</screen>
    <para> 如您所见，超时值也存储在报头中，以确保所有参与节点对其达成一致。</para>
    </step>
   </procedure>
   <para>
    初始化 SBD 设备之后，编辑 SBD 配置文件，然后启用并启动相应的服务以让更改生效。
   </para>

   <procedure xml:id="pro-ha-storage-protect-sbd-config">
   <title>编辑 SBD 配置文件</title>
    <step>
     <para>打开 <filename>/etc/sysconfig/sbd</filename> 文件。</para>
    </step>
    <step>
     <para>搜索以下参数：<parameter>SBD_DEVICE</parameter>。
     </para>
     <para>该参数指定要监控和要用于交换 SBD 讯息的设备。
     </para>
    <para> 编辑此行，用您的 SBD 设备替换 /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>：</para>
    <screen>SBD_DEVICE="/dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>"</screen>
    <para> 如果您需要在第一行中指定多个设备，请使用分号分隔设备（设备顺序无关紧要）：</para>
    <screen>SBD_DEVICE="/dev/disk/by-id/<replaceable>DEVICE_ID1</replaceable>;/dev/disk/by-id/<replaceable>DEVICE_ID2</replaceable>;/dev/disk/by-id/<replaceable>DEVICE_ID3</replaceable>"</screen>
    <para> 如果无法访问 SBD 设备，守护程序将无法启动，导致群集无法启动。</para>
   </step>
   <step xml:id="st-ha-storage-protect-sbd-delay-start">
    <para>搜索以下参数：<parameter>SBD_DELAY_START</parameter>。</para>
    <para>
      启用或禁用延迟。如果 <literal>msgwait</literal> 很长，但群集节点引导速度很快，请将 <parameter>SBD_DELAY_START</parameter> 设置为 <literal>yes</literal>。将此参数设置为 <literal>yes</literal> 可在引导时延迟 SBD 启动。虚拟机有时候需要此项延迟。
    </para>
    <para>
      默认延迟时长与 <literal>msgwait</literal> 超时值相同。或者，您可以指定一个整数（以秒为单位），而不是 <literal>yes</literal>。
    </para>
    <para>
      如果启用 <parameter>SBD_DELAY_START</parameter>，还必须检查 SBD 服务文件，以确保 <literal>TimeoutStartSec</literal> 的值大于 <parameter>SBD_DELAY_START</parameter> 的值。有关详细信息，请参见 <link xlink:href="https://www.suse.com/support/kb/doc/?id=000019356"></link>。
    </para>
   </step>
   <step>
     <para>
       使用 <command>csync2</command> 将配置文件复制到所有节点：
     </para>
<screen><prompt role="root"># </prompt><command>csync2 -xv</command></screen>
     <para>
       有关详细信息，请访问 <xref linkend="sec-ha-installation-setup-csync2"/>。
     </para>
   </step>
  </procedure>

 <para>将您的 SBD 设备添加到 SBD 配置文件之后，启用 SBD 守护程序。SBD 守护程序是群集堆栈的关键部分。当群集堆栈正在运行时，需要运行该守护程序。因此，每次群集服务启动时，<systemitem>sbd</systemitem> 服务也会作为依赖项启动。</para>

  <procedure xml:id="pro-ha-storage-protect-sbd-services">
   <title>启用和启动 SBD 服务</title>
   <step>
    <para>在每个节点，启用 SBD 服务：</para>
    <screen><prompt role="root"># </prompt><command>systemctl enable sbd</command></screen>
    <para>每次群集服务启动时，SBD 会与 Corosync 服务一起启动。</para>
   </step>
   <step>
    <para>使用 <option>--all</option> 选项同时在所有节点上重启动群集服务：</para>
    <screen><prompt role="root"># </prompt><command>crm cluster restart --all</command></screen>
    <para> 此操作会自动触发 SBD 守护程序的启动。</para>
    <important>
     <title>发生 SBD 更改后重启动群集服务</title>
     <para>
       如果任何 SBD 元数据发生更改，则必须再次重启动群集服务。要在重启动期间使关键群集资源保持运行状态，请考虑先将群集置于维护模式。有关详细信息，请访问 <xref linkend="cha-ha-maintenance"/>。
     </para>
   </important>
   </step>
  </procedure>

  <para>
   下一步是测试 SBD 设备，请参见<xref linkend="pro-ha-storage-protect-sbd-test" xrefstyle="select:label"/>。
  </para>

  <procedure xml:id="pro-ha-storage-protect-sbd-test">
   <title>测试 SBD 设备</title>
    <step>
     <para> 以下命令会从 SBD 设备转储节点槽及其当前消息：</para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> list</command></screen>
    <para> 现在，您应该会看到曾随 SBD 启动的所有群集节点都列在此处。例如，如果您拥有双节点群集，消息槽对于两个节点都应显示 <literal>clear</literal>：</para>
     <screen>0       alice        clear
1       bob          clear</screen>
    </step>
    <step>
     <para> 尝试将测试消息发送到节点之一：</para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> message alice test</command></screen>
    </step>
    <step>
     <para> 此节点会在系统日志文件中确认收到了该消息：</para>
<screen>May 03 16:08:31 alice sbd[66139]: /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>: notice: servant:
Received command test from bob on disk /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable></screen>
     <para> 这就确认了 SBD 确实在节点上正常运行，并已准备好接收消息。</para>
    </step>
   </procedure>

  <para>
   在最后一步中，您需要调整群集配置，请参见<xref linkend="pro-ha-storage-protect-fencing" xrefstyle="select:label"/>。
  </para>

<procedure xml:id="pro-ha-storage-protect-fencing">
 <title>配置群集以使用 SBD</title>
   <step>
    <para>
     启动外壳，并以 <systemitem class="username">root</systemitem> 用户或同等身份登录。
    </para>
   </step>
   <step>
    <para>
     运行 <command>crm configure</command>。
    </para>
   </step>
   <step>
    <para>输入以下内容：</para>
    <screen>
<prompt role="custom">crm(live)configure# </prompt><command>property stonith-enabled="true"</command><co xml:id="co-ha-sbd-st-enabled"/>
<prompt role="custom">crm(live)configure# </prompt><command>property stonith-watchdog-timeout=0</command><co xml:id="co-ha-sbd-watchdog-timeout"/>
<prompt role="custom">crm(live)configure# </prompt><command>property stonith-timeout="40s"</command><co xml:id="co-ha-sbd-st-timeout"/></screen>
    <calloutlist>
     <callout arearefs="co-ha-sbd-st-enabled">
      <para>
       此为默认配置，因为不支持没有 STONITH 的群集。而如果出于测试目的停用了 STONITH，请确保再次将此参数设置为 <literal>true</literal>。</para>
     </callout>
     <callout arearefs="co-ha-sbd-watchdog-timeout">
      <para>如果未显式设置，此值默认为 <literal>0</literal>，适用于 SBD 与一到三个设备搭配使用的情况。
      </para>
     </callout>
     <callout arearefs="co-ha-sbd-st-timeout">
      <para>
       要计算 <parameter>stonith-timeout</parameter>，请参见<xref linkend="sec-ha-storage-protect-watchdog-timings"/>。如果将 SBD 的 <systemitem>stonith-timeout</systemitem> 超时值设置为 <literal>40</literal> 秒，则适合将 <literal>msgwait</literal> 值设置为 <literal>30</literal>。</para>
     </callout>
   </calloutlist>
  </step>
  <step xml:id="st-ha-storage-protect-fencing-static-random">
   <para>
    配置 SBD STONITH 资源。您无需克隆此资源。
   </para>
   <para>
    对于双节点群集，在节点分裂情况下，两个节点都会按预期向对方发出屏蔽。为防止两个节点几乎同时被重置，建议应用以下屏蔽延迟来帮助其中一个节点甚至是首选节点在屏蔽竞争中胜出。对于具有两个以上节点的群集，无需应用这些延迟。
   </para>
   <variablelist>
    <varlistentry>
     <term>优先级屏蔽延迟</term>
     <listitem>
       <para>
        <literal>priority-fencing-delay</literal> 群集属性默认处于禁用状态。配置延迟值后，如果另一个节点发生故障且其总资源优先级更高，针对该节点的屏蔽将延迟指定的时间。这意味着在节点分裂情况下，更重要的节点将在屏蔽竞争中胜出。
      </para>
      <para>
        可以用优先级元属性配置重要资源。在计算时，将对每个节点上运行的资源或实例的优先级值求和来进行计算。提升后的资源实例的优先级为配置的基础优先级加 1，因此它的优先级值比任何未提升的实例都高。
      </para>
      <screen><prompt role="root"># </prompt><command>crm configure property priority-fencing-delay=30</command></screen>
       <para>
        即使使用了 <literal>priority-fencing-delay</literal>，我们也仍然建议使用 <literal>pcmk_delay_base</literal> 或 <literal>pcmk_delay_max</literal>（如下所述）来解决节点优先级恰好相同的所有情况。<literal>priority-fencing-delay</literal> 的值应显著大于 <literal>pcmk_delay_max</literal>/<literal>pcmk_delay_base</literal> 的最大值，最好是最大值的两倍。
       </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>可预测的静态延迟</term>
     <listitem>
      <para>此参数用于在执行 STONITH 操作之前添加静态延迟。为防止发生节点分裂时双节点群集的两个节点同时重置，请为不同的屏蔽资源配置不同的延迟值。可以用可实现更长屏蔽延迟的参数标记首选节点，使其在任何屏蔽竞争中都胜出。要成功实现此目的，每个节点都必须有两个原始 STONITH 设备。在下面的配置中，如果出现节点分裂情况，alice 会胜出并得以留存：
      </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive st-sbd-alice stonith:external/sbd \
  params pcmk_host_list=alice pcmk_delay_base=20</command>
<prompt role="custom">crm(live)configure# </prompt><command>primitive st-sbd-bob stonith:external/sbd \
  params pcmk_host_list=bob pcmk_delay_base=0</command></screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>动态随机延迟</term>
     <listitem>
      <para>此参数用于为屏蔽设备上的 STONITH 操作添加随机延迟。<parameter>pcmk_delay_max</parameter> 参数不会针对特定节点实施静态延迟，而是为包含屏蔽资源的任何屏蔽添加随机延迟，以防止双重重置。与 <parameter>pcmk_delay_base</parameter> 不同，此参数可对针对多个节点的统一屏蔽资源指定。
      </para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>primitive stonith_sbd stonith:external/sbd \
  params pcmk_delay_max=30</command></screen>
      <warning>
       <title><parameter>pcmk_delay_max</parameter> 可能无法防止节点分裂情况下的双重重置。</title>
       <para>
        <parameter>pcmk_delay_max</parameter> 的值越低，仍会发生双重重置的可能性就越高。
       </para>
       <para>
        如果您的目标是有可预测的幸存者，请使用优先级屏蔽延迟或可预测的静态延迟。
       </para>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </step>
  <step>
    <para>
     使用 <command>show</command> 查看所做的更改。
    </para>
   </step>
   <step>
    <para>
     使用 <command>commit</command> 提交更改，然后使用 <command>quit</command> 退出 crm 实时配置。
    </para>
   </step>
  </procedure>

   <para> 资源启动后，群集就会成功配置为在出现需要屏蔽的节点时使用 SBD。</para>
  </sect1>

  <sect1 xml:id="sec-ha-storage-protect-diskless-sbd">
   <title>设置无磁盘 SBD</title>
   <para>SBD 可在无磁盘模式下操作。在此模式下，当发生以下情况时，将使用看门狗设备来重置节点：失去仲裁、任何受监控的守护程序发生故障且未恢复、Pacemaker 决定需要屏蔽节点。无磁盘 SBD 基于节点的<quote>自我屏蔽</quote>，具体取决于群集的状态、仲裁和某些合理的假设。CIB 中不需要 STONITH SBD 原始资源。
   </para>
   <important>
    <title>不要在本地防火墙中阻止 Corosync 流量</title>
    <para>
     无磁盘 SBD 依赖于重新生成的成员资格和仲裁丢失来实现屏蔽。Corosync 流量必须能够通过所有网络接口（包括回写接口），并且不得被本地防火墙阻止。否则，Corosync 将无法重新生成新成员资格，可能导致出现节点分裂情况，而无磁盘 SBD 屏蔽无法处理该情况。
    </para>
   </important>
    <important>
     <title>群集节点数</title>
       <para>
        无磁盘模式下的 SBD 无法处理双节点群集的节点分裂情况。<emphasis>请勿</emphasis>将无磁盘 SBD 用作双节点群集的屏蔽机制，除非您还配置了 QDevice 以参与仲裁决定（如<xref linkend="cha-ha-qdevice"/>中所述）。
      </para>
   </important>

   <procedure xml:id="pro-ha-storage-protect-confdiskless">
    <title>配置无磁盘 SBD</title>
    <step>
     <para>打开文件 <filename>/etc/sysconfig/sbd</filename> 并使用以下项：</para>
     <screen>SBD_PACEMAKER=yes
SBD_STARTMODE=always
SBD_DELAY_START=no
SBD_WATCHDOG_DEV=/dev/watchdog
SBD_WATCHDOG_TIMEOUT=5</screen>
      <para>
       由于未使用共享磁盘，因此不需要 <varname>SBD_DEVICE</varname> 条目。此参数缺失时，<systemitem>sbd</systemitem> 服务不会为 SBD 设备启动任何观察程序进程。
      </para>
      <para>
        如果需要在系统引导时延迟启动 SBD，请将 <varname>SBD_DELAY_START</varname> 更改为 <literal>yes</literal>。默认延迟时长为 <varname>SBD_WATCHDOG_TIMEOUT</varname> 值的两倍。或者，您可以指定一个整数（以秒为单位），而不是 <literal>yes</literal>。
      </para>
      <important>
       <title>无磁盘 SBD 和 QDevice 的 <literal>SBD_WATCHDOG_TIMEOUT</literal></title>
       <para>
        如果您将 QDevice 和无磁盘 SBD 搭配使用，<literal>SBD_WATCHDOG_TIMEOUT</literal> 值必须大于 QDevice 的 <literal>sync_timeout</literal> 值，否则 SBD 将会超时并无法启动。
       </para>
       <para>
        <literal>sync_timeout</literal> 的默认值为 30 秒。因此，请将 <literal>SBD_WATCHDOG_TIMEOUT</literal> 设置为更大的值，例如 <literal>35</literal>。
       </para>
      </important>
    </step>
    <step>
     <para>在每个节点，启用 SBD 服务：</para>
     <screen><prompt role="root"># </prompt><command>systemctl enable sbd</command></screen>
     <para>每次群集服务启动时，SBD 会与 Corosync 服务一起启动。</para>
    </step>
    <step>
     <para>使用 <option>--all</option> 选项同时在所有节点上重启动群集服务：</para>
    <screen><prompt role="root"># </prompt><command>crm cluster restart --all</command></screen>
    <para> 此操作会自动触发 SBD 守护程序的启动。</para>
    <important>
     <title>发生 SBD 更改后重启动群集服务</title>
     <para>
       如果任何 SBD 元数据发生更改，则必须再次重启动群集服务。要在重启动期间使关键群集资源保持运行状态，请考虑先将群集置于维护模式。有关详细信息，请访问 <xref linkend="cha-ha-maintenance"/>。
     </para>
   </important>
    </step>
    <step>
      <para>
       检查是否已自动设置 <parameter>have-watchdog=true</parameter> 参数：
      </para>
      <screen><prompt role="root"># </prompt><command>crm configure show | grep have-watchdog</command>
         have-watchdog=true</screen>
    </step>
    <step xml:id="pro-ha-sbd-diskless-cib">
     <para>运行 <command>crm configure</command> 并在 crm 外壳上设置以下群集属性：</para>
<screen><prompt role="custom">crm(live)configure# </prompt><command>property stonith-enabled="true"</command><co xml:id="co-ha-sbd-stonith-enabled"/>
<prompt role="custom">crm(live)configure# </prompt><command>property stonith-watchdog-timeout=10</command><co xml:id="co-ha-sbd-diskless-watchdog-timeout"/>
<prompt role="custom">crm(live)configure# </prompt><command>property stonith-timeout=15</command><co xml:id="co-ha-sbd-diskless-stonith-timeout"/></screen>
    <calloutlist>
     <callout arearefs="co-ha-sbd-stonith-enabled">
      <para>
       此为默认配置，因为不支持没有 STONITH 的群集。而如果出于测试目的停用了 STONITH，请确保再次将此参数设置为 <literal>true</literal>。</para>
     </callout>
     <callout arearefs="co-ha-sbd-diskless-watchdog-timeout">
      <para>对于无磁盘 SBD，此参数不能为零。它定义了经过多长时间之后可以假定屏蔽目标已自我屏蔽。请使用以下公式计算此超时：
      </para>
      <screen>stonith-watchdog-timeout &gt;= (SBD_WATCHDOG_TIMEOUT * 2)</screen>
      <para>
        如果将 <parameter>stonith-watchdog-timeout</parameter> 设置为负值，Pacemaker 会自动计算此超时，并将它设置为 <parameter>SBD_WATCHDOG_TIMEOUT</parameter> 值的两倍。
      </para>
     </callout>
     <callout arearefs="co-ha-sbd-diskless-stonith-timeout">
       <para>
         此参数必须留出足够长的时间让屏蔽完成。对于无磁盘 SBD，请使用以下公式计算此超时：
       </para>
       <screen>stonith-timeout &gt;= stonith-watchdog-timeout + 20%</screen>
       <important>
        <title>无磁盘 SBD 超时</title>
        <para>
          使用无磁盘 SBD 时，如果 <literal>stonith-timeout</literal> 值小于 <literal>stonith-watchdog-timeout</literal> 值，则失败的节点可能会停滞在 <literal>UNCLEAN</literal> 状态，并阻止对活动资源进行故障转移。
        </para>
       </important>
     </callout>
    </calloutlist>
   </step>
  <step>
    <para>
     使用 <command>show</command> 查看所做的更改。
    </para>
   </step>
   <step>
    <para>
     使用 <command>commit</command> 提交更改，然后使用 <command>quit</command> 退出 crm 实时配置。
    </para>
   </step>
  </procedure>
  </sect1>

  <sect1 xml:id="sec-ha-storage-protect-test">
   <title>测试 SBD 和屏蔽</title>
   <para>要测试 SBD 在节点屏蔽方面是否按预期工作，请使用以下其中一种或所有方法：
   </para>
  <variablelist>
   <varlistentry>
    <term>手动触发节点屏蔽</term>
    <listitem>
     <para>要针对节点 <replaceable>NODENAME</replaceable> 触发屏蔽操作，请执行以下操作：</para>
 <screen><prompt role="root"># </prompt><command>crm node fence <replaceable>NODENAME</replaceable></command></screen>
     <para>检查经过 <parameter>stonith-watchdog-timeout</parameter> 时长后，节点是否已屏蔽，以及其他节点是否将该节点视为已屏蔽：</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>模拟 SBD 失败</term>
    <listitem>
     <procedure>
      <step>
       <para>识别 SBD inquisitor 的进程 ID：</para>
       <screen><prompt role="root"># </prompt><command>systemctl status sbd</command>
● sbd.service - Shared-storage based fencing daemon

   Loaded: loaded (/usr/lib/systemd/system/sbd.service; enabled; vendor preset: disabled)
   Active: active (running) since Tue 2018-04-17 15:24:51 CEST; 6 days ago
     Docs: man:sbd(8)
  Process: 1844 ExecStart=/usr/sbin/sbd $SBD_OPTS -p /var/run/sbd.pid watch (code=exited, status=0/SUCCESS)
 Main PID: 1859 (sbd)
    Tasks: 4 (limit: 4915)
   CGroup: /system.slice/sbd.service
           ├─<emphasis role="strong">1859 sbd: inquisitor</emphasis>
[...]</screen>
      </step>
      <step>
       <para>通过终止 SBD inquisitor 进程模拟 SBD 失败。在我们的示例中，SBD inquisitor 的进程 ID 是 <literal>1859</literal>：</para>
       <screen><prompt role="root"># </prompt><command>kill -9 1859</command></screen>
       <para>
        节点主动自我屏蔽。经过 <parameter>stonith-watchdog-timeout</parameter> 时间之后，其他节点注意到该节点丢失并将其视为已自我屏蔽。
       </para>
      </step>
     </procedure>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>通过监控操作失败触发屏蔽</term>
    <listitem>
     <para>在正常配置下，如果资源的<emphasis>停止操作</emphasis>失败，将会触发屏蔽。要手动触发屏蔽，可以产生一个资源停止操作失败。或者，可以如下所示临时更改资源<emphasis>监控操作</emphasis>的配置以造成监控失败情况：</para>
     <procedure>
      <step>
       <para>为资源监控操作配置 <literal>on-fail=fence</literal> 属性：</para>
       <screen>op monitor interval=10 on-fail=fence</screen>
      </step>
      <step>
       <para>让监控操作失败（例如，如果资源与某个服务相关，则可通过终止相应的守护程序来实现）。</para>
       <para>此失败会触发屏蔽操作。</para>
      </step>
     </procedure>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-rsc-fencing">
  <title>其他存储保护机制</title>
  <remark>toms 2018-04-20: this can be improved...</remark>
  <para>除了通过 STONITH 进行节点屏蔽之外，还可使用其他方法在资源级别实现存储保护。例如，SCSI-3 和 SCSI-4 使用持久预留，而 <literal>sfex</literal> 提供锁定机制。这两种方法将在下面的小节中介绍。
  </para>
  <sect2 xml:id="sec-ha-storage-protect-sgpersist">
   <title>配置 sg_persist 资源</title>
   <para>
    SCSI 规范 3 和 4 定义了<emphasis>持久预留</emphasis>。其属于 SCSI 协议功能，可用于 I/O 屏蔽和故障转移。此功能在 <command>sg_persist</command> Linux 命令中实施。
   </para>
   <note>
    <title>SCSI 磁盘兼容性</title>
    <para> 用于 <literal>sg_persist</literal> 的所有备用磁盘都必须与 SCSI 磁盘兼容。<literal>sg_persist</literal> 只适用于 SCSI 磁盘或 iSCSI LUN 等设备。<remark>toms 2018-04-20: What about FCoE, FC, iSER, SRP, Serial Attached SCSI (SAR)?</remark><emphasis>不要</emphasis>将它用于 IDE、SATA 或不支持 SCSI 协议的任何块设备。</para>
   </note>
   <para>继续之前，请检查您的磁盘是否支持持久预留。使用以下命令（用您的设备名称替换 <replaceable>DEVICE_ID</replaceable>）：</para>
    <screen><prompt role="root"># </prompt><command>sg_persist -n --in --read-reservation -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable></command></screen>
   <para>结果显示您的磁盘是否支持持久预留：</para>
    <itemizedlist>
     <listitem>
      <para>支持的磁盘：</para>
      <screen>PR generation=0x0, there is NO reservation held</screen>
     </listitem>
     <listitem>
      <para>不支持的磁盘：</para>
      <screen>PR in (Read reservation): command not supported
Illegal request, Invalid opcode</screen>
     </listitem>
    </itemizedlist>

   <remark>toms 2018-04-20: Do we need to prepare anything else with sg_persists?</remark>
   <para>如果您收到错误消息（如上面所示），请用 SCSI 兼容的磁盘替换旧磁盘。否则请执行如下操作：</para>
   <procedure>
    <step>
     <para>
      使用磁盘的稳定设备名称创建原始资源 <literal>sg_persist</literal>：
    </para>
     <screen><prompt role="root"># </prompt><command>crm configure</command>
<prompt role="custom">crm(live)configure# </prompt><command>primitive sg sg_persist \
    params devs="/dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>" reservation_type=3 \
    op monitor interval=60 timeout=60</command></screen>
    </step>
    <step>
     <para> 创建 <literal>sg_persist</literal> 原始资源的可提升克隆：
     </para>
     <screen><prompt role="custom">crm(live)configure# </prompt><command>clone clone-sg sg \
    meta promotable=true promoted-max=1 notify=true</command></screen>
    </step>
    <step>
     <para>测试设置：资源提升后，您可以在运行主实例的群集节点上挂载磁盘分区并将数据写入其中，但无法在运行次要实例的群集节点上写入数据。</para>
    </step>
    <step>
     <para> 使用磁盘分区的稳定设备名称为 Ext4 添加文件系统原始资源：</para>
     <screen><prompt role="custom">crm(live)configure# </prompt><command>primitive ext4 Filesystem \
    params device="/dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>" directory="/mnt/ext4" fstype=ext4 \
    op monitor timeout=40s interval=20s</command></screen>
    </step>
    <step>
     <para> 在 <literal>sg_persist</literal> 克隆和文件系统资源之间添加以下顺序关系和共置约束：</para>
     <screen><prompt role="custom">crm(live)configure# </prompt><command>order o-clone-sg-before-ext4 Mandatory: clone-sg:promote ext4:start</command>
<prompt role="custom">crm(live)configure# </prompt><command>colocation col-ext4-with-sg-persist inf: ext4 clone-sg:Promoted</command></screen>
    </step>
    <step>
     <para> 使用 <command>show changed</command> 命令检查所有更改。
     </para>
    </step>
    <step>
     <para> 提交更改。</para>
    </step>
   </procedure>
   <para>有关详细信息，请参见 <command>sg_persist</command> 手册页。</para>
  </sect2>

  <sect2 xml:id="sec-ha-storage-protect-exstoract">
   <title>使用 <literal>sfex</literal> 确保激活排它存储</title>
    <para>
     <remark>taroth 2018-04-26: ToDo - for next release, revise this section, too,
     and flatten its structure</remark>本节将介绍 <literal>sfex</literal>，这是一种额外的底层机制，用于将共享存储空间的访问权限独占锁定到单个节点。请注意，sfex 不会替代 STONITH。由于 sfex 需要共享存储，因此建议将上述 SBD 节点屏蔽机制用于存储的另一个分区。
   </para>

   <para>
    按照设计，sfex 不能与需要并发的工作负载（例如 OCFS2）配合使用。其可作为传统故障转移型工作负载的一层保护。实际效果与 SCSI-2 预留机制类似，但适用范围更广。
   </para>

   <sect3 xml:id="sec-ha-storage-protect-exstoract-description">
    <title>概述</title>
    <para>
     在共享存储环境中，存储区的一个小分区专门设置为存储一个或多个锁。
    </para>
    <para>
     在获取受保护资源之前，节点必须先获取保护锁。此顺序由 Pacemaker 强制实施。sfex 组件可确保即使 Pacemaker 遇到节点分裂情况，也不会多次授予锁。
    </para>
    <para>
     这些锁必须定期刷新，这样某个节点的终止才不会永久性地阻止此锁，其他节点仍可继续操作。
    </para>
   </sect3>

   <sect3 xml:id="sec-ha-storage-protect-exstoract-requirements">
    <title>设置</title>
    <para>
     以下内容可帮助您了解如何创建用于 sfex 的共享分区以及如何为 CIB 中的 sfex 锁配置资源。单个 sfex 分区可存放任意数量的锁，并需要为每个锁分配 1 KB 的存储空间。默认情况下，<command>sfex_init</command> 将在分区上创建一个锁。
    </para>
    <important>
     <title>要求</title>
     <itemizedlist>
      <listitem>
       <para>
        sfex 的共享分区应和要保护的数据位于同一逻辑单元上。
       </para>
      </listitem>
      <listitem>
       <para>
        共享的 sfex 分区不得使用基于主机的 RAID 或 DRBD。
       </para>
      </listitem>
      <listitem>
       <para>
        可以使用 LVM 逻辑卷。
       </para>
      </listitem>
     </itemizedlist>
    </important>
    <procedure>
     <title>创建 sfex 分区</title>
     <step>
      <para>
       创建用于 sfex 的共享分区。记下此分区的名称，并用它替换下面的 <filename>/dev/sfex</filename>。
      </para>
     </step>
     <step>
      <para>
       使用以下命令创建 sfex 元数据：
      </para>
      <screen><prompt role="root"># </prompt><command>sfex_init -n 1 /dev/sfex</command></screen>
     </step>
     <step>
      <para>
       校验元数据是否正确创建：
      </para>
      <screen><prompt role="root"># </prompt><command>sfex_stat -i 1 /dev/sfex ; echo $?</command></screen>
      <para>
       此操作应返回 <literal>2</literal>，因为当前未保存锁。
      </para>
     </step>
    </procedure>
    <procedure>
     <title>为 sfex 锁配置资源</title>
     <step>
      <para>
       sfex 锁通过 CIB 中的资源表示，其配置如下：
      </para>
      <screen><prompt role="custom">crm(live)configure# </prompt><command>primitive sfex_1 ocf:heartbeat:sfex \
      params device="/dev/sfex" index="1" collision_timeout="1" \
      lock_timeout="70" monitor_interval="10" \
      op monitor interval="10s" timeout="30s" on-fail="fence"</command></screen>
     </step>
     <step>
      <para>
       要通过 sfex 锁保护资源，请在要保护 sfex 资源的资源之间创建强制顺序和放置约束。如果要保护的资源 ID 是 <literal>filesystem1</literal>：
      </para>
      <screen><prompt role="custom">crm(live)configure# </prompt><command>order order-sfex-1 Mandatory: sfex_1 filesystem1</command>
<prompt role="custom">crm(live)configure# </prompt><command>colocation col-sfex-1 inf: filesystem1 sfex_1</command></screen>
     </step>
     <step>
      <para>
       如果使用组语法，请将 sfex 资源添加为组内的第一个资源：
      </para>
      <screen><prompt role="custom">crm(live)configure# </prompt><command>group LAMP sfex_1 filesystem1 apache ipaddr</command></screen>
     </step>
    </procedure>
   </sect3>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-sbd-redeploy">
  <title>更改 SBD 配置</title>
  <para>
    您可能会出于多种原因需要更改群集的 SBD 配置。例如：
  </para>
  <itemizedlist>
   <listitem>
     <para>
       将基于磁盘的 SBD 更改为无磁盘 SBD
     </para>
   </listitem>
   <listitem>
     <para>
       将无磁盘 SBD 更改为基于磁盘的 SBD
     </para>
   </listitem>
   <listitem>
     <para>
       用新设备替换 SBD 设备
     </para>
   </listitem>
   <listitem>
     <para>
       更改超时值和其他设置
     </para>
   </listitem>
  </itemizedlist>
  <para>
    您可以使用 crmsh 更改 SBD 配置。此方法会使用 crmsh 的默认设置，包括超时值。
  </para>
  <itemizedlist>
    <listitem>
      <para>
        <xref linkend="pro-ha-storage-protect-sbd-redeploy-disk-based-crmsh"/>
      </para>
    </listitem>
    <listitem>
      <para>
        <xref linkend="pro-ha-storage-protect-sbd-redeploy-diskless-crmsh"/>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    如果您需要更改任何设置，或者使用了自定义设置并需要在更换设备时保留这些设置，则必须手动编辑 SBD 配置。
  </para>
  <itemizedlist>
    <listitem>
      <para>
        <xref linkend="pro-ha-storage-protect-sbd-redeploy-disk-based-manual"/>
      </para>
    </listitem>
    <listitem>
      <para>
        <xref linkend="pro-ha-storage-protect-sbd-redeploy-diskless-manual"/>
      </para>
    </listitem>
  </itemizedlist>

  <procedure xml:id="pro-ha-storage-protect-sbd-redeploy-disk-based-crmsh">
    <title>使用 crmsh 重新部署基于磁盘的 SBD</title>
    <para>
      请执行以下过程将无磁盘 SBD 更改为基于磁盘的 SBD，或用新设备替换现有的 SBD 设备。
    </para>
    <step>
      <para>
        将群集置于维护模式：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance on</command></screen>
      <para>
        在此状态下，群集将停止监控所有资源，因此即使群集服务停止，资源所管理的服务也能继续运行。
      </para>
    </step>
    <step>
      <para>
        配置新设备：
      </para>
<screen><prompt role="root"># </prompt><command>crm -F cluster init sbd -s /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable></command></screen>
      <para>
        <option>-F</option> 选项允许 crmsh 重新配置 SBD，即使 SBD 服务已在运行也是如此。
      </para>
    </step>
    <step>
      <para>
        检查群集的状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm status</command></screen>
      <para>
        起初，节点的状态为 <literal>UNCLEAN (offline)</literal>，但很快就变为 <literal>Online</literal>。
      </para>
    </step>
    <step>
      <para>
        检查 SBD 配置。首先，检查设备元数据：
      </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> dump</command>
</screen>
      <para>
        然后检查群集中的所有节点是否都已分配到设备中的一个槽位：
      </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> list</command></screen>
    </step>
    <step>
      <para>
        检查 SBD 服务的状态：
      </para>
<screen><prompt role="root"># </prompt><command>systemctl status sbd</command></screen>
      <para>
        如果将无磁盘 SBD 更改为了基于磁盘的 SBD，请确认以下部分包含设备 ID：
      </para>
<screen>CGroup: /system/.slice/sbd.service
        |—23314 "sbd: inquisitor"
        |—23315 "sbd: watcher: /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> - slot: 0 - uuid: <replaceable>DEVICE_UUID</replaceable>"
        |—23316 "sbd: watcher: Pacemaker"
        |—23317 "sbd: watcher: Cluster"</screen>
    </step>
    <step>
      <para>
        节点重新上线后，让群集退出维护模式，恢复正常运行状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance off</command></screen>
    </step>
  </procedure>

  <procedure xml:id="pro-ha-storage-protect-sbd-redeploy-disk-based-manual">
    <title>手动重新部署基于磁盘的 SBD</title>
    <para>
      请执行以下过程将无磁盘 SBD 更改为基于磁盘的 SBD、用新设备替换现有的 SBD 设备，或更改基于磁盘的 SBD 的超时设置。
    </para>
    <step>
      <para>
        将群集置于维护模式：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance on</command></screen>
      <para>
        在此状态下，群集将停止监控所有资源，因此即使您停止群集服务，资源所管理的服务也能继续运行。
      </para>
    </step>
    <step>
      <para>
        停止所有节点上的群集服务，包括 SBD：
      </para>
<screen><prompt role="root"># </prompt><command>crm cluster stop --all</command></screen>
    </step>
    <step>
      <para>
        重新初始化设备元数据，根据需要指定新设备 ID 和超时值：
      </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> -1 <replaceable>VALUE</replaceable> -4 <replaceable>VALUE</replaceable> create</command></screen>
      <para>
        <option>-1</option> 选项用于指定 <literal>watchdog</literal> 超时值。
      </para>
      <para>
        <option>-4</option> 选项用于指定 <literal>msgwait</literal> 超时值，该值必须至少为 <literal>watchdog</literal> 超时值的两倍。
      </para>
      <para>
        有关详细信息，请访问 <xref linkend="pro-ha-storage-protect-sbd-create"/>。
      </para>
    </step>
    <step>
      <para>
        打开 <filename>/etc/sysconfig/sbd</filename> 文件。
      </para>
    </step>
    <step>
      <para>
        如果要将无磁盘 SBD 更改为基于磁盘的 SBD，请添加以下代码并指定设备 ID。如果要更换 SBD 设备，请将此行的值更改为新设备 ID：
      </para>
<screen>SBD_DEVICE="/dev/disk/by-id/<replaceable>DEVICE_ID</replaceable>"</screen>
    </step>
    <step>
      <para>
        根据需要调整其他设置。有关详细信息，请访问 <xref linkend="pro-ha-storage-protect-sbd-config"/>。
      </para>
    </step>
    <step>
      <para>
        将配置文件复制到所有节点上：
      </para>
<screen><prompt role="root"># </prompt><command>csync2 -xv</command></screen>
    </step>
    <step>
      <para>
        启动所有节点上的群集服务：
      </para>
<screen><prompt role="root"># </prompt><command>crm cluster start --all</command></screen>
    </step>
    <step>
      <para>
        检查群集的状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm status</command></screen>
      <para>
        起初，节点的状态为 <literal>UNCLEAN (offline)</literal>，但很快就变为 <literal>Online</literal>。
      </para>
    </step>
    <step>
      <para>
        检查 SBD 配置。首先，检查设备元数据：
      </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> dump</command>
</screen>
      <para>
        然后检查群集中的所有节点是否都已分配到设备中的一个槽位：
      </para>
<screen><prompt role="root"># </prompt><command>sbd -d /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> list</command></screen>
    </step>
    <step>
      <para>
        检查 SBD 服务的状态：
      </para>
<screen><prompt role="root"># </prompt><command>systemctl status sbd</command></screen>
      <para>
        如果将无磁盘 SBD 更改为了基于磁盘的 SBD，请确认以下部分包含设备 ID：
      </para>
<screen>CGroup: /system/.slice/sbd.service
        |—23314 "sbd: inquisitor"
        |—23315 "sbd: watcher: /dev/disk/by-id/<replaceable>DEVICE_ID</replaceable> - slot: 0 - uuid: <replaceable>DEVICE_UUID</replaceable>"
        |—23316 "sbd: watcher: Pacemaker"
        |—23317 "sbd: watcher: Cluster"</screen>
    </step>
    <step>
      <para>
        如果您更改了任何超时值，或者将无磁盘 SBD 更改为基于磁盘的 SBD，则可能还需要更改 CIB 属性 <literal>stonith-timeout</literal> 和 <literal>stonith-watchdog-timeout</literal>。对于基于磁盘的 SBD，<literal>stonith-watchdog-timeout</literal> 应该为 <literal>0</literal> 或设为默认值。有关详细信息，请访问 <xref linkend="sec-ha-storage-protect-watchdog-timings"/>。
      </para>
      <para>
        要检查当前值，请运行以下命令：
      </para>
<screen><prompt role="root"># </prompt><command>crm configure show</command></screen>
      <para>
        如果需要更改这些值，请执行以下命令：
      </para>
<screen><prompt role="root"># </prompt><command>crm configure property stonith-watchdog-timeout=0</command>
<prompt role="root"># </prompt><command>crm configure property stonith-timeout=<replaceable>VALUE</replaceable></command></screen>
    </step>
    <step>
      <para>
        如果将无磁盘 SBD 更改为了基于磁盘的 SBD，则必须为 SBD 配置 STONITH 资源。例如：
      </para>
<screen><prompt role="root"># </prompt><command>crm configure primitive stonith-sbd stonith:external/sbd</command></screen>
      <para>
        有关更多信息，请参见<xref linkend="pro-ha-storage-protect-fencing"/>中的<xref linkend="st-ha-storage-protect-fencing-static-random"/>。
      </para>
    </step>
    <step>
      <para>
        节点重新上线后，让群集退出维护模式，恢复正常运行状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance off</command></screen>
    </step>
  </procedure>

  <procedure xml:id="pro-ha-storage-protect-sbd-redeploy-diskless-crmsh">
    <title>使用 crmsh 重新部无磁盘 SBD</title>
    <para>
      请执行以下过程将基于磁盘的 SBD 更改为无磁盘 SBD。
    </para>
    <step>
      <para>
        将群集置于维护模式：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance on</command></screen>
      <para>
        在此状态下，群集将停止监控所有资源，因此即使群集服务停止，资源所管理的服务也能继续运行。
      </para>
    </step>
    <step>
      <para>
        配置无磁盘 SBD：
          </para>
<screen><prompt role="root"># </prompt><command>crm -F cluster init sbd -S</command></screen>
      <para>
        <option>-F</option> 选项允许 crmsh 重新配置 SBD，即使 SBD 服务已在运行也是如此。
      </para>
    </step>
    <step>
      <para>
        检查群集的状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm status</command></screen>
      <para>
        起初，节点的状态为 <literal>UNCLEAN (offline)</literal>，但很快就变为 <literal>Online</literal>。
      </para>
    </step>
    <step>
      <para>
        检查 SBD 服务的状态：
      </para>
<screen><prompt role="root"># </prompt><command>systemctl status sbd</command></screen>
      <para>
        以下部分<emphasis>不应</emphasis>包含设备 ID：
      </para>
<screen>CGroup: /system/.slice/sbd.service
        |—23314 "sbd: inquisitor"
        |—23315 "sbd: watcher: Pacemaker"
        |—23316 "sbd: watcher: Cluster"</screen>
    </step>
    <step>
      <para>
        节点重新上线后，让群集退出维护模式，恢复正常运行状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance off</command></screen>
    </step>
  </procedure>

  <procedure xml:id="pro-ha-storage-protect-sbd-redeploy-diskless-manual">
    <title>手动重新部无磁盘 SBD</title>
    <para>
      请执行以下过程将基于磁盘的 SBD 更改为无磁盘 SBD，或更改无磁盘 SBD 的超时值。
    </para>
    <step>
      <para>
        将群集置于维护模式：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance on</command></screen>
      <para>
        在此状态下，群集将停止监控所有资源，因此即使您停止群集服务，资源所管理的服务也能继续运行。
      </para>
    </step>
    <step>
      <para>
        停止所有节点上的群集服务，包括 SBD：
      </para>
<screen><prompt role="root"># </prompt><command>crm cluster stop --all</command></screen>
    </step>
    <step>
      <para>
        打开 <filename>/etc/sysconfig/sbd</filename> 文件。
      </para>
    </step>
    <step>
      <para>
        如果要将基于磁盘的 SBD 更改为无磁盘 SBD，请去除或注释 <literal>SBD_DEVICE</literal> 条目。
      </para>
    </step>
    <step>
      <para>
        根据需要调整其他设置。有关详细信息，请访问 <xref linkend="sec-ha-storage-protect-diskless-sbd"/>。
      </para>
    </step>
    <step>
      <para>
        将配置文件复制到所有节点上：
      </para>
<screen><prompt role="root"># </prompt><command>csync2 -xv</command></screen>
    </step>
    <step>
      <para>
        启动所有节点上的群集服务：
      </para>
<screen><prompt role="root"># </prompt><command>crm cluster start --all</command></screen>
    </step>
    <step>
      <para>
        检查群集的状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm status</command></screen>
      <para>
        起初，节点的状态为 <literal>UNCLEAN (offline)</literal>，但很快就变为 <literal>Online</literal>。
      </para>
    </step>
    <step>
      <para>
        检查 SBD 服务的状态：
      </para>
<screen><prompt role="root"># </prompt><command>systemctl status sbd</command></screen>
      <para>
        如果将基于磁盘的 SBD 更改为了无磁盘 SBD，请确认以下部分<emphasis>未</emphasis>包含设备 ID：
      </para>
<screen>CGroup: /system/.slice/sbd.service
        |—23314 "sbd: inquisitor"
        |—23315 "sbd: watcher: Pacemaker"
        |—23316 "sbd: watcher: Cluster"</screen>
    </step>
    <step>
      <para>
        如果您更改了任何超时值，或者将基于磁盘的 SBD 更改为无磁盘 SBD，则可能还需要更改 CIB 属性 <literal>stonith-timeout</literal> 和 <literal>stonith-watchdog-timeout</literal>。有关详细信息，请参见<xref linkend="pro-ha-storage-protect-confdiskless"/>中的<xref linkend="pro-ha-sbd-diskless-cib"/>。
      </para>
      <para>
        要检查当前值，请运行以下命令：
      </para>
<screen><prompt role="root"># </prompt><command>crm configure show</command></screen>
      <para>
        如果需要更改这些值，请执行以下命令：
      </para>
<screen><prompt role="root"># </prompt><command>crm configure property stonith-watchdog-timeout=<replaceable>VALUE</replaceable></command>
<prompt role="root"># </prompt><command>crm configure property stonith-timeout=<replaceable>VALUE</replaceable></command></screen>
    </step>
    <step>
      <para>
        节点重新上线后，让群集退出维护模式，恢复正常运行状态：
      </para>
<screen><prompt role="root"># </prompt><command>crm maintenance off</command></screen>
    </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-ha-storage-protect-moreinfo">
  <title>更多信息</title>
   <para>
    有关细节，请参见<command>man sbd</command>。
   </para>
 </sect1>
</chapter>
