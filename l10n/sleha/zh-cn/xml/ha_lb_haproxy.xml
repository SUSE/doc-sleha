<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xml:base="ha_lb_haproxy.xml" xml:id="sec-ha-lb-haproxy" version="5.0">
 <title>使用 HAProxy 配置负载平衡</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <remark>
  This is a straightforward explanation how to set up a HA openSUSE
  13.1 http load balancer, but not using SLE HA tools, but plain
  vanilla openSUSE with vi.
 </remark>

 <para>
  以下章节概述了 HAProxy 以及如何针对高可用性进行设置。负载平衡器会将所有请求分发到其后端服务器。它配置为主动/被动模式，也就是说，当一台服务器发生故障时，被动服务器就会变成主动服务器。在这种情况下，用户察觉不到任何服务中断的迹象。
 </para>

 <para>
  在本节中，我们将使用以下设置：
 </para>

 <itemizedlist>
  <listitem>
   <para>
    IP 地址为 <systemitem class="ipaddress">192.168.1.99</systemitem> 的负载平衡器。
   </para>
  </listitem>
  <listitem>
   <para>
    一个虚拟浮动 IP 地址 <systemitem class="ipaddress">192.168.1.99</systemitem>.
   </para>
  </listitem>
  <listitem>
   <para>
    我们的服务器（通常用于托管 Web 内容）<systemitem class="server">www.example1.com</systemitem>（IP：<systemitem class="ipaddress">192.168.1.200</systemitem>）和 <systemitem class="server">www.example2.com</systemitem>（IP：<systemitem class="ipaddress">192.168.1.201</systemitem>）
   </para>
  </listitem>
 </itemizedlist>

 <para>
  要配置 HAProxy，请使用以下过程：
 </para>

 <procedure>
  <step>
   <para>
    安装 <package>haproxy</package> 软件包。
   </para>
  </step>
  <step>
   <para>
    创建包含以下内容的 <filename>/etc/haproxy/haproxy.cfg</filename> 文件：
   </para>
   
   <remark>toms 2014-09-17: Not sure about all the options.</remark>
   <screen>global <co xml:id="co-ha-lb-global"/>
  maxconn 256
  daemon

defaults <co xml:id="co-ha-lb-defaults"/>
  log     global
  mode    http
  option  httplog
  option  dontlognull
  retries 3
  option redispatch
  maxconn 2000
  timeout connect   5000  <co xml:id="co-ha-lb-timeout-connect"/>
  timeout client    50s   <co xml:id="co-ha-lb-timeout-client"/>
  timeout server    50000 <co xml:id="co-ha-lb-timeout-server"/>

frontend LB
  bind 192.168.1.99:80 <co xml:id="co-ha-lb-listen"/>
  reqadd X-Forwarded-Proto:\ http
  default_backend LB

backend LB
  mode http
  stats enable
  stats hide-version
  stats uri /stats
  stats realm Haproxy\ Statistics
  stats auth haproxy:password	<co xml:id="co-ha-lb-stats-auth"/>
  balance roundrobin	<co xml:id="co-ha-lb-balance"/>
  option  httpclose
  option forwardfor
  cookie LB insert
  option httpchk GET /robots.txt HTTP/1.0
  server web1-srv 192.168.1.200:80 cookie web1-srv check
  server web2-srv 192.168.1.201:80 cookie web2-srv check</screen>
   <calloutlist>
    <callout arearefs="co-ha-lb-global">
     <para>
      该部分包含进程范围的选项和特定于操作系统的选项。
     </para>
     <variablelist>
      <varlistentry>
       <term><option>maxconn</option>
       </term>
       <listitem>
        <para>
         每个进程的最大并发连接数。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><option>daemon</option>
       </term>
       <listitem>
        <para>
         建议的模式，HAProxy 将在后台运行。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="co-ha-lb-defaults">
     <para>
      该部分为其声明后的所有其他部分设置默认参数。一些重要的行：
     </para>
     <variablelist>
      <varlistentry>
       <term><option>redispatch</option>
       </term>
       <listitem>
        <para>
         启用或禁用在连接失败时重新分发会话。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><option>log</option>
       </term>
       <listitem>
        <para>
         启用事件和流量日志记录。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>mode http</literal>
       </term>
       <listitem>
        <para>
         以 HTTP 模式运行（针对 HAProxy 建议采用的模式）。在此模式下，将会先分析请求，然后再执行与任何服务器的连接。不符合 RFC 要求的请求将被拒绝。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>option forwardfor</literal>
       </term>
       <listitem>
        <para>
         将 HTTP <option>X-Forwarded-For</option> 报头添加到请求中。如果您想要保留客户端的 IP 地址，则需要使用此选项。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="co-ha-lb-timeout-connect">
     <para>与服务器建立连接的尝试成功之前可等待的最长时间。
     </para>
    </callout>
    <callout arearefs="co-ha-lb-timeout-client">
     <para>客户端可保持非活动状态的最长时间。</para>
    </callout>
    <callout arearefs="co-ha-lb-timeout-server">
     <para>服务器端可保持非活动状态的最长时间。</para>
    </callout>
    <callout arearefs="co-ha-lb-listen">
     <para>
      该部分将前端部分和后端部分合并在一起。
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>balance leastconn</literal>
       </term>
       <listitem>
        <para>
         定义负载平衡算法，请参见 <link xlink:href="http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#4-balance"/>。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>stats enable</literal>
       </term>
       <term><literal>stats auth</literal>
       </term>
       <listitem>
        <para>
         启用统计报告（通过 <literal>stats enable</literal>）。<option>auth</option> 选项记录针对特定帐户的身份验证的统计信息。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="co-ha-lb-stats-auth">
      <para>
       HAProxy 统计数字报告页面的身份凭证。
      </para>
     </callout>
    <callout arearefs="co-ha-lb-balance">
      <para>
       负载平衡将在轮询过程中工作。
      </para>
    </callout>
   </calloutlist>
  </step>
  <step>
   <para>
    测试配置文件：
   </para>
   <screen><prompt role="root">root # </prompt><command>haproxy</command> -f /etc/haproxy/haproxy.cfg -c</screen>
  </step>
  <step>
   <para>
    将下面一行添加到 Csync2 的配置文件 <filename>/etc/csync2/csync2.cfg</filename> 中，以确保包括 HAProxy 配置文件：
   </para>
   <screen>include /etc/haproxy/haproxy.cfg</screen>
  </step>
  <step>
   <para>
    同步该文件：
   </para>
   <screen><prompt role="root">root # </prompt><command>csync2</command> -f /etc/haproxy/haproxy.cfg
<prompt role="root">root # </prompt><command>csync2</command> -xv</screen>
   <note>
    <para>
     Csync2 配置部分假设已使用 crm 外壳提供的引导脚本配置 HA 节点。有关细节，请参见《安装和设置快速入门》。
    </para>
   </note>
  </step>
  <step>
   <para>
    确保在两个负载平衡器（<systemitem class="server">alice</systemitem> 和 <systemitem class="server">bob</systemitem>）上禁用 HAProxy，因为它由 Pacemaker 启动：
   </para>
   <screen><prompt role="root">root # </prompt><command>systemctl</command> disable haproxy</screen>
  </step>
  <step>
   <para>
    配置新的 CIB：
   </para>
   <screen><prompt role="root">root # </prompt><command>crm</command> configure
<prompt role="custom">crm(live)# </prompt><command>cib</command> new haproxy-config
<prompt role="custom">crm(haproxy-config)# </prompt><command>primitive</command> haproxy systemd:haproxy \
    op start timeout=120 interval=0 \
    op stop timeout=120 interval=0 \
    op monitor timeout=100 interval=5s \
    meta target-role=Started
<prompt role="custom">crm(haproxy-config)# </prompt><command>primitive</command> vip IPaddr2 \
    params ip=192.168.1.99 nic=eth0 cidr_netmask=23 broadcast=192.168.1.255 \
    op monitor interval=5s timeout=120 on-fail=restart
<prompt role="custom">crm(haproxy-config)# </prompt><command>group</command> g-haproxy vip haproxy</screen>
  </step>
  <step>
   <para>
    校验新 CIB 并更正任何错误：
   </para>
   <screen><prompt role="custom">crm(haproxy-config)# </prompt><command>verify</command></screen>
  </step>
  <step>
   <para>
    提交新的 CIB：
   </para>
   <screen><prompt role="custom">crm(haproxy-config)# </prompt><command>cib</command> use live
<prompt role="custom">crm(live)# </prompt><command>cib</command> commit haproxy-config</screen>
  </step>
 </procedure>
</sect1>
