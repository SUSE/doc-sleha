<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec.ha.config.hawk.manage">
 <title>Managing Cluster Resources</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <para>
  In addition to configuring your cluster resources, &hawk2; allows you to
  manage existing resources from the <guimenu>Cluster Status</guimenu>
  screen. For a general overview of the screen, its different views and the
  color code used for status information, refer to
  <xref linkend="sec.ha.config.hawk.intro.main"/>.
 </para>

<!--fate#314387 (SP3)-->

 <para>
  Basic resource operations can be executed from any cluster status view.
  Both <guimenu>Tree View</guimenu> and <guimenu>Table View</guimenu> let
  you access the individual resources directly. However, in the
  <guimenu>Summary View</guimenu> you need to click the links in the
  resources category first to display the resource details. The detailed
  view also shows any attributes set for that resource. For primitive
  resources (regular primitives, children of groups, clones, or multi-state
  resources), the following information will be shown additionally:
 </para>

 <itemizedlist>
  <listitem>
   <para>
    the resource's failcount
   </para>
   <para>
    the last failure time stamp (if the failcount is &gt; 0)
   </para>
  </listitem>
  <listitem>
   <para>
    operation history and timings (call id, operation, last run time stamp,
    execution time, queue time, return code and last change time stamp)
   </para>
  </listitem>
 </itemizedlist>

 <figure>
  <title>Viewing a Resource's Details</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="hawk-resource-details.png" width="60%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="hawk-resource-details.png" width="55%"/>
   </imageobject>
  </mediaobject>
 </figure>

 <sect2 xml:id="sec.ha.config.hawk.start">
  <title>Starting Resources</title>
  <para>
   Before you start a cluster resource, make sure it is set up correctly.
   For example, if you want to use an Apache server as a cluster resource,
   set up the Apache server first. Complete the Apache configuration before
   starting the respective resource in your cluster.
  </para>
  <note>
   <title>Do Not Touch Services Managed by the Cluster</title>
   <para>
    When managing a resource via the &hasi;, the same resource must not
    be started or stopped otherwise (outside of the cluster, for example
    manually or on boot or reboot). The &hasi; software is responsible
    for all service start or stop actions.
   </para>
   <para>
    However, if you want to check if the service is configured properly,
    start it manually, but make sure that it is stopped again before &ha;
    takes over.
   </para>
   <para>
    For interventions in resources that are currently managed by the
    cluster, set the resource to <literal>maintenance mode</literal> first
    as described in <xref linkend="pro.ha.maint.mode.rsc.hawk2"/>.
   </para>
  </note>
  <para>
   When creating a resource with &hawk2;, you can set its initial state
   with the <literal>target-role</literal> meta attribute. If you set its
   value to <literal>stopped</literal>, the resource does not start
   automatically after being created.
  </para>
  <procedure xml:id="pro.ha.config.hawk.start">
   <title>Starting A New Resource</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual resource views, click the wrench icon next to
     the resource and select <guimenu>Start</guimenu>. To continue, confirm
     the message that appears. As soon as the resource has started,
     &hawk2; changes the resource's color to green and shows on which node
     it is running.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.ha.config.hawk.cleanup">
  <title>Cleaning Up Resources</title>
  <para>
   A resource will be automatically restarted if it fails, but each failure
   increases the resource's failcount.
  </para>
  <para>
   If a <literal>migration-threshold</literal> has been set for the
   resource, the node will no longer run the resource when the number of
   failures reaches the migration threshold.
  </para>
  <para>
   A resource's failcount can either be reset automatically (by setting a
   <literal>failure-timeout</literal> option for the resource) or you can
   reset it manually as described below.
  </para>
  <procedure xml:id="pro.ha.config.hawk.clean">
   <title>Cleaning Up A Resource</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual resource views, click the wrench icon next to
     the failed resource and select <guimenu>Clean Up</guimenu>. To
     continue, confirm the message that appears.
    </para>
<!--tserong 2011-11-25: actually, it executes "crm resource cleanup" but
     that's probably ultimately about the same as what you've listed :)-->
    <para>
     This executes the commands <command>crm_resource&nbsp;</command>
     <option>-C</option> and <command>crm_failcount&nbsp;</command>
     <option>-D</option> for the specified resource on the specified node.
    </para>
   </step>
  </procedure>
  <para>
   For more information, see the man pages of
   <command>crm_resource</command> and <command>crm_failcount</command>.
  </para>
 </sect2>

 <sect2 xml:id="sec.ha.config.hawk.remove">
  <title>Removing Cluster Resources</title>
  <para>
   If you need to remove a resource from the cluster, follow the procedure
   below to avoid configuration errors:
  </para>
<!--https://bugzilla.novell.com/show_bug.cgi?id=520718-->
<!--<note>
    <title>Removing Referenced Resources</title>
    <para>
     A cluster resource cannot be removed if its ID is referenced by any
     constraint. If you cannot delete a resource, check where the resource
     ID is referenced and remove the resource from the constraint first.
    <remark>tserong 2013-12-05: Actually, that might not be true. Hawk uses "crm
     configure delete", which I believe will try to remove constraints with
     dangling references to deleted resource IDs (but we should verify this to
     be sure). - taroth 2014-08-04: tserong is right - I tried today and it worked,
    even if the resource was referenced in a colocation constraint, therefore
    commenting the note now</remark></para>
   </note>-->
  <procedure xml:id="pro.ha.config.hawk.rm">
   <title>Removing a Cluster Resource</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Clean up the resource on all nodes as described in
     <xref linkend="pro.ha.config.hawk.clean"/>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual resource views, click the wrench icon next to
     the resource and select <guimenu>Stop</guimenu>. To continue, confirm
     the message that appears.
    </para>
   </step>
<!-- taroth 2014-08-04: this seems to be no longer necessary, 
   see commented  note above-->
<!--<step>
     <para>
      Remove all constraints that relate to the resource, otherwise removing
      the resource will not be possible. For details, refer to
      <xref linkend="pro.ha.config.hawk.constraints.remove"/>.
     </para>
    </step>-->
   <step>
    <para>
     If the resource is stopped, click the wrench icon next to it and select
     <guimenu>Delete Resource</guimenu>.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.ha.config.hawk.migrate">
  <title>Migrating Cluster Resources</title>
  <para>
   As mentioned in <xref linkend="sec.ha.config.hawk.failover"/>, the
   cluster will fail over (migrate) resources automatically in case of
   software or hardware failures&mdash;according to certain parameters
   you can define (for example, migration threshold or resource stickiness).
   Apart from that, you can manually migrate a resource to another node in
   the cluster. Or you decide to move it away from the current node and
   leave the decision about where to put it to the cluster.
  </para>
  <procedure xml:id="pro.ha.config.hawk.migrate">
   <title>Manually Migrating a Resource</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual resource views, click the wrench icon next to
     the resource and select <guimenu>Move</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the new window, select the node to which to move the resource.
    </para>
    <para>
     This creates a location constraint with an <literal>INFINITY</literal>
     score for the destination node.
    </para>
   </step>
   <step>
    <para>
     Alternatively, select to move the resource <guimenu>Away from current
     node</guimenu>.
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-move-rsc.png" width="70%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-move-rsc.png" width="60%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
    <para>
     This creates a location constraint with a <literal>-INFINITY</literal>
     score for the current node.
    </para>
<!--taroth 2011-11-15: the GUI also offers temporary migration (setting a
      duration) or forced migration (if the resource's stickiness and
      constraint scores total more than <literal>INFINITY</literal> on the
      current node) - tserong 2011-11-25: Hawk does not offer temporary 
      migration -->
   </step>
<!-- <step>
     <para>
      If you want to migrate the resource only temporarily, activate
      <guimenu>Duration</guimenu> and enter the time frame for which the
      resource should migrate to the new node. After the expiration of the
      duration, the resource <emphasis>can</emphasis> move back to its
      original location or it may stay where it is (depending on resource
      stickiness).
     </para>
    </step>
    <step>
     <para>
      In cases where the resource cannot be migrated (if the resource's
      stickiness and constraint scores total more than
      <literal>INFINITY</literal> on the current node), activate the
      <guimenu>Force</guimenu> option. This forces the resource to move by
      creating a rule for the current location and a score of
      <literal>-INFINITY</literal>.
     </para>
     <note>
      <para>
       This prevents the resource from running on this node until the
       constraint is removed with <guimenu>Clear Migrate
        Constraints</guimenu> or the duration expires.
      </para>
     </note>
    </step>-->
   <step>
    <para>
     Click <guimenu>OK</guimenu> to confirm the migration.
    </para>
   </step>
  </procedure>
  <para>
   To allow a resource to move back again, proceed as follows:
  </para>
  <procedure xml:id="pro.ha.config.hawk.migrate.back">
   <title>Clearing a Migration Constraint</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual resource views, click the wrench icon next to
     the resource and select <guimenu>Drop Relocation Rule</guimenu>. To
     continue, confirm the message that appears.
    </para>
    <para>
     This uses the <command>crm_resource&nbsp;</command>
     <option>-U</option> command. The resource <emphasis>can</emphasis> move
     back to its original location or it may stay where it is (depending on
     resource stickiness).
    </para>
   </step>
  </procedure>
  <para>
   For more information, see the <command>crm_resource</command> man page or
   &paceex;, available from <link xlink:href="http://www.clusterlabs.org/doc/"/>. Refer to section
   <citetitle>Resource Migration</citetitle>.
  </para>
 </sect2>

 <sect2 xml:id="sec.ha.config.hawk.history">
  <title>Viewing the Cluster History</title>
<!--fate#303620-->
  <para>
   &hawk2; provides the following possibilities to view past events on the
   cluster (on different levels and in varying detail).
  </para>
  <procedure xml:id="pro.ha.config.hawk.recent">
   <title>Viewing Recent Events of Nodes or Resources</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>Tree View</guimenu> or <guimenu>Table View</guimenu>,
     click the wrench icon next to the resource or node you are interested
     in and select <guimenu>View Recent Events</guimenu>.
    </para>
    <para>
     The dialog that opens shows the events of the last hour.
    </para>
   </step>
  </procedure>
  <procedure xml:id="pro.ha.config.hawk.history.explorer">
   <title>Viewing Transitions with the History Explorer</title>
   <para>
    The <guimenu>History Explorer</guimenu> provides transition information
    for a time frame that you can define. It also lists its previous runs
    and allows you to <guimenu>Delete</guimenu> reports that you no longer
    need. The <guimenu>History Explorer</guimenu> uses the information
    provided by <literal>hb_report</literal>. You can also upload an
    <literal>hb_report</literal> archive that has been created offline (on a
    different cluster) and view the respective transitions with the
    <guimenu>History Explorer</guimenu>. See
    <xref linkend="pro.ha.config.hawk.history.explorer.offline"/>.
<!--fate#314394 (SP3)-->
   </para>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>History Explorer</guimenu>.
    </para>
   </step>
   <step>
    <para>
     By default, the period to explore is set to the last 24 hours. To
     modify this, set another <guimenu>Start Time</guimenu> and <guimenu>End
     Time</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Display</guimenu> to start collecting transition data.
    </para>
   </step>
  </procedure>
  <figure>
   <title>&hawk2;&mdash;History Report</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-history-report.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-history-report.png" width="90%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>
   The following information is displayed:
  </para>
  <variablelist xml:id="vl.hawk.history.results">
   <title>History Explorer Results</title>
   <varlistentry>
    <term><guimenu>Time</guimenu>
    </term>
    <listitem>
     <para>
      The time line of all past transitions in the cluster.
     </para>
    </listitem>
   </varlistentry>
<!-- taroth 2014-08-04: https://fate.suse.com/314392: hawk:
     Display warning for transitions handled by different PE versions-->
   <varlistentry>
    <term>Information Icon</term>
    <listitem>
     <para>
      In some cases, an information icon is displayed between the
      <guimenu>Time</guimenu> and <guimenu>PE Input</guimenu> columns. Hover
      the mouse pointer over the icon to display one of the following
      messages:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <literal>Input created by different Pacemaker version</literal>. In
        that case, the transition graphs are only approximate since they
        have been generated by a different PE version.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>Pacemaker version not present in PE Input</literal>. This
        happens during cluster start, before a DC is elected.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>PE Input</guimenu>/<guimenu>Node</guimenu>
    </term>
    <listitem>
     <para>
      The <filename>pe-input*</filename> file for each transition and the
      node on which it was generated. For each transition, the cluster saves
      a copy of the state which is provided to the policy engine as input.
      The path to this archive is logged. The <filename>pe-input*</filename>
      files are only generated on the Designated Coordinator (DC), but as
      the DC can change, there may be <filename>pe-input*</filename> files
      from several nodes. The files show what the Policy Engine (PE)
      <emphasis>planned</emphasis> to do.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Details</guimenu>/<guimenu>Full Log</guimenu>
    </term>
<!--fate#314395 (SP3)-->
    <listitem>
     <para>
      Opens a pop-up window with snippets of logging data that belong to
      that particular transition. Different amounts of details are
      available: Clicking <guimenu>Details</guimenu> displays the output of
      <command>crm history transition</command>
      <replaceable>peinput</replaceable> (including the resource agents' log
      messages). <guimenu>Full Log</guimenu> also includes details from the
      <systemitem>pengine</systemitem>, <systemitem>crmd</systemitem>, and
      <systemitem>lrmd</systemitem> and is equivalent to <command>crm
      history transition log</command> <replaceable>peinput</replaceable>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Graph</guimenu>/<guimenu>XML</guimenu>
    </term>
    <listitem>
     <para>
      A graph and an XML representation of each transition. If you choose to
      show the <guimenu>Graph</guimenu>, the PE is reinvoked (using the
      <filename>pe-input*</filename> files), and generates a graphical
      visualization of the transition. Alternatively, you can view the XML
      representation of the graph.
     </para>
     <figure>
      <title>&hawk2; History Report&mdash;Transition Graph</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-history-graph.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-history-graph.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Diff</guimenu>
    </term>
<!--fate#314389 (SP3)-->
    <listitem>
     <para>
      If two or more pe-inputs are listed, a <guimenu>Diff</guimenu> link
      will appear to the right of each pair of pe-inputs. Clicking it
      displays the difference of configuration and status.
     </para>
<!--taroth 2013-03-28: commenting because of bnc#807503, line numbers are no longer
       diplayed
       <figure>
       <title>&hawk2; History Report&mdash;Diff</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk-history-diff.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk-history-diff.png" width="70%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>-->
    </listitem>
   </varlistentry>
  </variablelist>
<!--taroth 2014-07-30: https://fate.suse.com/313354: Hawk
    off-line, stand-alone history explorer-->
  <procedure xml:id="pro.ha.config.hawk.history.explorer.offline">
   <title>Using the <guimenu>History Explorer</guimenu> Offline</title>
   <para>
    If you have &hawk2; running on any machine, you can also use the
    <guimenu>History Explorer</guimenu> <quote>offline</quote>, that means
    to view and analyze the transitions of clusters that you are currently
    not connected to. All you need is a TAR archive with an
    <literal>hb_report</literal> generated on a &productname; cluster. To
    upload and analyze it with the <guimenu>History Explorer</guimenu>
    proceed as follows:
   </para>
   <step>
    <para>
     Start a Web browser and log in to the &hawk2; Web interface as
     described in <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>History Explorer</guimenu>.
    </para>
    <para>
     It shows an entry <guimenu>Upload hb_report tarball</guimenu>.
    </para>
    <figure>
     <title>&hawk2;&mdash;Offline Use of History Explorer</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-history-offline.png" width="80%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-history-offline.png" width="70%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     Click <guimenu>Browse</guimenu> and select the
     <filename>hb_report</filename> archive to upload from your file system.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Explore</guimenu> to start the analysis of the archive
     and to display the information listed in
     <xref linkend="vl.hawk.history.results"/>.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.ha.config.hawk.simulator">
  <title>Exploring Potential Failure Scenarios</title>
<!--fate#310186-->
  <para>
   &hawk2; provides a <guimenu>Simulator</guimenu> that allows you to
   explore failure scenarios before they happen.
<!--fate#314393 (SP3)-->
   After switching to the simulator mode, you can change the status of
   nodes, add or edit resources and constraints, change the cluster
   configuration, or execute multiple resource operations to see how the
   cluster would behave should these events occur. As long as the simulator
   mode is activated, a control dialog will be displayed in the bottom right
   hand corner of the <guimenu>Cluster Status</guimenu> screen. The
   simulator will collect the changes from all screens and will add them to
   its internal queue of events. The simulation run with the queued events
   will not be executed unless it is manually triggered in the control
   dialog. After the simulation run, you can view and analyze the details of
   what would have happened (log snippets, transition graph, and CIB
   states).
  </para>
  <procedure xml:id="pro.ha.config.hawk.simulator">
   <title>Switching to Simulator Mode</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     Activate the simulator mode by clicking the wrench icon in the
     top-level row (next to the user name), and by selecting
     <guimenu>Simulator</guimenu>.
    </para>
    <para>
     &hawk2;'s background changes color to indicate the simulator is
     active. A simulator control dialog is displayed in the bottom right
     hand corner of the <guimenu>Cluster Status</guimenu> screen. Its title
     <guimenu>Simulator (initial state)</guimenu> indicates that no
     simulator run has occurred yet.
    </para>
   </step>
   <step>
    <para>
     Fill the simulator's event queue:
    </para>
    <substeps performance="required">
     <step>
      <para>
       To simulate status change of a node: Click <guimenu>+Node</guimenu>
       in the simulator control dialog. Select the <guimenu>Node</guimenu>
       you want to manipulate and select its target
       <guimenu>State</guimenu>. Confirm your changes to add them to the
       queue of events listed in the controller dialog.
      </para>
     </step>
     <step>
      <para>
       To simulate a resource operation: Click <guimenu>+Op</guimenu> in the
       simulator control dialog. Select the <guimenu>Resource</guimenu> to
       manipulate and the <guimenu>Operation</guimenu> to simulate. If
       necessary, define an <guimenu>Interval</guimenu>. Select the
       <guimenu>Node</guimenu> on which to run the operation and the
       targeted <guimenu>Result</guimenu>. Confirm your changes to add them
       to the queue of events listed in the controller dialog.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Repeat the previous steps for any other node status changes or resource
     operations you want to simulate.
    </para>
    <figure>
     <title>&hawk2;&mdash;Simulator with Injected Events</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-simulator-injected.png" width="90%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-simulator-injected.png" width="70%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     To inject other changes that you want to simulate:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Switch to one or more of the following &hawk2; screens:
       <guimenu>Cluster Status</guimenu>, <guimenu>Setup Wizard</guimenu>,
       <guimenu>Cluster Configuration</guimenu>,
       <guimenu>Resources</guimenu>, or <guimenu>Constraints</guimenu>.
      </para>
      <note>
       <title>History Explorer and Simulator Mode</title>
       <para>
        Clicking the <guimenu>History Explorer</guimenu> tab will deactivate
        simulator mode.
       </para>
      </note>
     </step>
     <step>
      <para>
       Add or modify parameters on the screens as desired.
      </para>
      <para>
       The simulator will collect the changes from all screens and will add
       them to its internal queue of events.
       <remark>taroth 2013-03-27: tserong, is there some way to display also the events collected
         on the other screens in the "Injected State" queue? from a user perspective, it's somehow
         strange if the injected events reflect only part of what will happen if you hit the "run"
         button... - tserong 2013-04-15: No, there's not currently, and you're right, that's
         annoying :-/ I've made a note to do something about that (again not sure if that'll make
         this release).</remark>
      </para>
     </step>
     <step>
      <para>
       To return to the simulator control dialog, switch to the
       <guimenu>Cluster Status</guimenu> screen or click the wrench icon in
       the top-level row and click <guimenu>Simulator</guimenu> again.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     If you want to remove an event listed in <guimenu>Injected
     State</guimenu>, select the respective entry and click the minus icon
     beneath the list.
    </para>
   </step>
   <step>
    <para>
     Start the simulation run by clicking <guimenu>Run</guimenu> in the
     simulator control dialog. The <guimenu>Cluster Status</guimenu> screen
     displays the simulated events. For example, if you marked a node as
     unclean, it will now be shown offline, and all its resources will be
     stopped. The simulator control dialog changes to <guimenu>Simulator
     (final state)</guimenu>.
    </para>
    <figure>
     <title>&hawk2;&mdash;Simulator in Final State</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-simulator-final.png" width="90%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-simulator-final.png" width="70%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     To view more detailed information about the simulation run:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Click the <guimenu>Details</guimenu> link in the simulator dialog to
       see log snippets of what occurred.
      </para>
     </step>
     <step>
      <para>
       Click the <guimenu>Graph </guimenu> link to show the transition
       graph.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>CIB (in)</guimenu> to display the initial CIB state.
       To see what the CIB would look like after the transition, click
       <guimenu>CIB (out)</guimenu>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     To start from scratch with a new simulation, use the
     <guimenu>Reset</guimenu> button.
    </para>
   </step>
   <step>
    <para>
     To exit the simulation mode, close the simulator control dialog. The
     <guimenu>Cluster Status</guimenu> screen switches back to its normal
     color and displays the current cluster state.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.ha.config.hawk.crmreport">
  <title>Generating a Cluster Report</title>
<!--fate##310187-->
  <para>
   For analysis and diagnosis of problems occurring on the cluster,
   &hawk2; can generate a cluster report that collects information from
   all nodes in the cluster.
  </para>
  <procedure xml:id="pro.ha.config.hawk.crmreport">
   <title>Generating an <literal>hb_report</literal></title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     Click the wrench icon next to the user name in the top-level row, and
     select <guimenu>Generate hb_report</guimenu>.
    </para>
   </step>
   <step>
    <para>
     By default, the period to examine is the last hour. To modify this, set
     another <guimenu>Start Time</guimenu> and <guimenu>End Time</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Generate</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After the report has been created, download the
     <filename>*.tar.bz2</filename> file by clicking the respective link.
    </para>
   </step>
  </procedure>
  <para>
   For more information about the log files that the report covers,
   refer to <xref linkend="vle.ha.crmreport"/>.
  </para>
 </sect2>
</sect1>