<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<sect1 xmlns="http://docbook.org/ns/docbook" 
 xmlns:xi="http://www.w3.org/2001/XInclude" 
 xmlns:xlink="http://www.w3.org/1999/xlink" 
 version="5.0" xml:id="sec.conf.hawk2.rsc">
 <title>Configuring Cluster Resources</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
 </info>
 
  <para>
   A cluster administrator needs to create cluster resources for every
   resource or application that runs on the servers in your cluster. Cluster
   resources can include Web sites, mail servers, databases, file systems,
   virtual machines, and any other server-based applications or services you
   want to make available to users at all times.
  </para>
  
  <para>
   For an overview of the resource types you can create, refer to
   <xref linkend="sec.ha.config.basics.resources.types"/>. After you have
   specified the resource basics (ID, class, provider, and type), 
   &hawk2; shows the following categories:
  </para>
  
  <variablelist>
   <varlistentry>
    <term>Parameters (Instance Attributes)</term>
    <listitem>
     <para>Determines which instance of a service the resource controls. For more
      information, refer to <xref linkend="sec.ha.config.basics.inst.attr"/>. </para>
     <para> When creating a resource, &hawk2; automatically shows any
      required parameters. Edit them to get a valid resource configuration.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Operations</term>
    <listitem>
     <para>Needed for resource monitoring. For more information, refer to <xref
       linkend="sec.ha.config.basics.operations"/>.</para>
     <para> When creating a resource, &hawk2; displays the most important
      resource operations (<literal>monitor</literal>, <literal>start</literal>,
      and <literal>stop</literal>). </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Meta Attributes</term>
    <listitem>
     <para>Tells the CRM how to treat a specific resource. For more information,
      refer to <xref linkend="sec.ha.config.basics.meta.attr"/>. </para>
     <para> When creating a resource, &hawk2; automatically lists the
      important meta attributes for that resource (for example, the
       <literal>target-role</literal> attribute that defines the initial state
      of a resource. By default, it is set to <literal>Stopped</literal>, so the
      resource will not start immediately). </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Utilization</term>
    <listitem>
    <para>Tells the CRM what capacity a certain resource requires from a
     node. For more information, refer to <xref
      linkend="sec.config.hawk2.utilization"/>.
    </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>You can adjust the entries and values in those categories either during
   resource creation or later.</para>

  <sect2 xml:id="sec.conf.hawk2.rsc.show">
   <title>Showing the Current Cluster Configuration (CIB)</title>
   <para>
    Sometimes a cluster administrator needs to know the cluster configuration.
    &hawk2; can show the current configuration in &crmshell; syntax, as XML and
    as a graph. To view the cluster configuration in &crmshell; syntax, from the
    left navigation bar select
    <guimenu>Edit Configuration</guimenu>
    and click <guimenu>Show</guimenu>. To show the configuration
    in raw XML instead, click <guimenu>XML</guimenu>. Click
    <guimenu>Graph</guimenu> for a graphical representation of the nodes
    and resources configured in the CIB. It also shows the relationships
    between resources.
    </para>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.rsc.wizard">
   <title>Adding Resources with the Wizard</title>
   <para>The &hawk2; wizard is a convenient way of setting up simple
    resources like a virtual IP address or an SBD &stonith; resource, for
    example. However, it is most useful for more complex configurations that
    include multiple resources, like the resource configuration for a DRBD block
    device or an Apache Web server. The wizard guides you through the configuration
    steps and provides information about the parameters you need to enter.</para>
   <procedure xml:id="pro.conf.hawk2.wizard">
    <title>Using the Resource Wizard</title>
    <step>
    <para>Log in to &hawk2;:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
     <para>From the left navigation bar, select 
            <guimenu>Wizards</guimenu>.
    </para>
    </step>
    <step>
     <para>Expand the individual categories by clicking the arrow down icon next
      to them and select the desired wizard.</para>
    </step>
    <step>
     <para>Follow the instructions on the screen. After the last configuration
      step, <guimenu>Verify</guimenu> the values you have entered.</para>
     <para>&hawk2; shows which actions it is going to perform and what the
      configuration looks like. Depending on the configuration, you might be
      prompted for the &rootuser; password before you can
      <guimenu>Apply</guimenu> the configuration.</para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk2;&mdash;Wizard for Apache Web Server</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-wizard-apache.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-wizard-apache.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.primitive">
   <title>Adding Simple Resources</title>
    <para>
     To create the most basic type of resource, proceed as follows:
    </para>
   <procedure xml:id="pro.conf.hawk2.primitive.add">
    <title>Adding a Primitive Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
       <guimenu>Add Resource</guimenu>
       <guimenu>Primitive</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Resource ID</guimenu>. </para>
    </step>
    <step>
     <para>In case a resource template exists on which you want to base the resource configuration,
      select the respective <guimenu>Template</guimenu>. For details about configuring templates,
      see <xref linkend="pro.conf.hawk2.template.add"/>. </para>
    </step>
    <step xml:id="step.ha.config.hawk2.primitive.start">
     <para>Select the resource agent <guimenu>Class</guimenu> you want to use:
      <literal>lsb</literal>, <literal>ocf</literal>,
       <literal>service</literal>, <literal>stonith</literal>, or
       <literal>systemd</literal>. For more information, see <xref
       linkend="sec.ha.config.basics.raclasses"/>. </para>
    </step>
    <step>
     <para> If you selected <literal>ocf</literal> as class, specify the
       <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
      specification allows multiple vendors to supply the same resource agent.
     </para>
    </step>
    <step>
     <para> From the <guimenu>Type</guimenu> list, select the resource agent you
      want to use (for example, <guimenu>IPaddr</guimenu> or
       <guimenu>Filesystem</guimenu>). A short description for this resource
       agent is displayed.</para>
     <para>With that, you have specified the resource basics.</para>
     <note>
       <para> The selection you get in the <guimenu>Type</guimenu> list depends
       on the <guimenu>Class</guimenu> (and for OCF resources also on the
        <guimenu>Provider</guimenu>) you have chosen. </para>
     </note>
     <figure>
      <title>&hawk2;&mdash;Primitive Resource</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-primitive-basic.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-primitive-basic.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>To keep the <guimenu>Parameters</guimenu>,
       <guimenu>Operations</guimenu>, and <guimenu>Meta Attributes</guimenu> as
      suggested by &hawk2;, click <guimenu>Create</guimenu> to finish the
      configuration. A message at the top of the screen shows if the
      action has been successful. </para>
     <para>To adjust the parameters, operations, or meta attributes,
     refer to <xref linkend="sec.conf.hawk2.rsc.modify"/>. To configure
      <guimenu>Utilization</guimenu> attributes for the resource, see
      <xref linkend="pro.hawk2.utilization.rsc"/>.
     </para>
    </step>
   </procedure>
  </sect2>
 <sect2 xml:id="sec.conf.hawk2.rsc.template">
  <title>Adding Resource Templates</title>
   <para>
    If you want to create lots of resources with similar configurations,
    defining a resource template is the easiest way. After being defined, it
    can be referenced in primitives or in certain types of constraints. For
    detailed information about function and use of resource templates, refer
    to <xref linkend="sec.ha.config.basics.constraints.templates"/>.
   </para>
   <procedure xml:id="pro.conf.hawk2.template.add">
    <title>Adding a Resource Template</title>
    <para>Resource templates are configured like primitive resources.</para>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
       <guimenu>Add Resource</guimenu>
       <guimenu>Template</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Resource ID</guimenu>. </para>
    </step>
    <step>
     <para>Follow the instructions in <xref linkend="pro.conf.hawk2.primitive.add"/>, starting from
       <xref linkend="step.ha.config.hawk2.primitive.start" xrefstyle="select:label"/>.</para>
    </step>
   </procedure>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.rsc.modify">
   <title>Modifying Resources</title>
   <para>If you have created a resource, you can edit its configuration at any
   time by adjusting parameters, operations, or meta attributes as needed.</para>
   
   <procedure xml:id="pro.conf.hawk2.rsc.modify">
    <title>Modifying Parameters, Operations, or Meta Attributes for a
     Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>On the &hawk2; <guimenu>Status</guimenu> screen, go to the
       <guimenu>Resources</guimenu> list.</para>
    </step>
    <step>
     <para>In the <guimenu>Operations</guimenu> column, click the arrow down
      icon next to the resource or group you want to modify and select 
      <guimenu>Edit</guimenu>.</para>
     <para>The resource configuration screen opens.</para>
     <figure>
      <title>&hawk2;&mdash;Editing A Primitive Resource</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-primitive-edit.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-primitive-edit.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step xml:id="step.hawk2.rsc.modify.params">
     <para>To add a new parameter, operation, or meta attribute, select an entry
      from the empty drop-down box. Click the <guimenu>Plus</guimenu> icon
      next to it to add the entry to the respective category.</para>
    </step>
    <step>
     <para>To edit any values in the <guimenu>Operations</guimenu> category,
      click the <guimenu>Edit</guimenu> icon of the respective entry, enter a
      different value for the operation and click <guimenu>Apply</guimenu>.
     </para>
    </step>
    <step>
     <para>When you are finished, click the <guimenu>Apply</guimenu> button in
      the resource configuration screen to confirm your changes to the
      parameters, operations, or meta attributes.</para>
     <para>A message at the top of the screen shows if the action has been
      successful.</para>
    </step>
   </procedure>
   
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.rsc.stonith">
   <title>Adding &stonith; Resources</title>
   &important-stonith;
   <para>
    By default, the global cluster option <literal>stonith-enabled</literal>
    is set to <literal>true</literal>. If no &stonith; resources have been
    defined, the cluster will refuse to start any resources. Configure one or
    more &stonith; resources to complete the &stonith; setup. To add a &stonith;
    resource for SBD, for libvirt (&kvm;/&xen;) or for vCenter/ESX Server,
    the easiest way is to use the &hawk2; wizard (see <xref
    linkend="sec.conf.hawk2.rsc.wizard"/>). While &stonith; resources are
    configured similarly to other resources, their behavior
    is different in some respects. For details refer
    to <xref linkend="sec.ha.fencing.config"/>.
   </para>
   <procedure xml:id="pro.conf.hawk2.stonith">
    <title>Adding a &stonith; Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Add Resource</guimenu>
      <guimenu>Primitive</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Resource ID</guimenu>. </para>
    </step>
      <step>
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent
        class <guimenu>stonith</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the &stonith;
        plug-in to control your &stonith; device. A short description
        for this plug-in is displayed.
       </para>
      </step>
     <step>
     <para>
      &hawk2; automatically shows the required
      <guimenu>Parameters</guimenu> for the resource. Enter values for each
      parameter.
     </para>
    </step>
    <step>
     <para>
      &hawk2; displays the most important resource
      <guimenu>Operations</guimenu> and proposes default values. If you do
      not modify any settings here, &hawk2; adds the proposed
      operations and their default values when you confirm.
     </para>
    </step>
    <step>
     <para>
      If there is no reason to change them, keep the default
      <guimenu>Meta Attributes</guimenu> settings.
     </para>
     <figure>
      <title>&hawk2;&mdash;&stonith; Resource</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-primitive-stonith.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-primitive-stonith.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      Confirm your changes to create the &stonith; resource.
     </para>
     <para>A message at the top of the screen shows if the
      action has been successful.</para>
    </step>
   </procedure>
   <para>
    To complete your fencing configuration, add constraints.
    For more details, refer to <xref linkend="cha.ha.fencing"/>.
   </para>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.group">
   <title>Adding Cluster Resource Groups</title>
   <para>
    Some cluster resources depend on other components or resources and
    require that each component or resource starts in a specific order and
    runs on the same server. To simplify this configuration &productname;
    supports the concept of groups.
   </para>
   
   
   <para>Resource groups contain a set of resources that need to be located together, be started
    sequentially and stopped in the reverse order. For an example of a resource group and more
    information about groups and their properties, refer to <xref
    linkend="sec.ha.config.basics.resources.advanced.groups"/>.
   </para>
   <note>
    <title>Empty Groups</title>
    <para>
     Groups must contain at least one resource, otherwise the configuration
     is not valid. While creating a group, &hawk2; allows you to create more
     primitives and add them to the group. For details, see
     <xref linkend="sec.conf.hawk2.manage.edit"/>.
    </para>
   </note>
   <procedure xml:id="pro.conf.hawk2.group">
    <title>Adding a Resource Group</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Add Resource</guimenu>
      <guimenu>Group</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Group ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To define the group members, select one or multiple entries in the list
      of <guimenu>Children</guimenu>. Re-sort group members by dragging and dropping them into the
      order you want by using the <quote>handle</quote> icon on the right.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk2;&mdash;Resource Group</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-rsc-group.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-rsc-group.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.rsc.clone">
   <title>Adding Clone Resources</title>
   <para> If you want certain resources to run simultaneously on multiple nodes
    in your cluster, configure these resources as clones. An example of a resource
    that can be configured as a clone is <literal>ocf:pacemaker:controld</literal>
    for cluster file systems like OCFS2. Any regular resources or resource groups
    can be cloned. Instances of cloned resources may behave identically. However,
    they may also be configured differently, depending on which node they are
    hosted on.</para>
   <para>
    For an overview of the available types of resource clones, refer to
    <xref linkend="sec.ha.config.basics.resources.advanced.clones"/>.
   </para>
   <note>
    <title>Child Resources for Clones</title>
    <para>
     Clones can either contain a primitive or a group as child resources. In
     &hawk2;, child resources cannot be created or modified while creating a
     clone. Before adding a clone, create child resources and configure them as
     desired. For details, refer to
     <xref linkend="sec.conf.hawk2.rsc.primitive"/> or
     <xref linkend="sec.conf.hawk2.rsc.group"/>.
    </para>
   </note>
   <procedure xml:id="pro.conf.hawk2.clone">
    <title>Adding a Clone Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Add Resource</guimenu>
      <guimenu>Clone</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Clone ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Child Resource</guimenu> list, select the primitive
      or group to use as a sub-resource for the clone.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the
      action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk2;&mdash;Clone Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-clone.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-clone.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.ms">
   <title>Adding Multi-state Resources</title>
   <para>Multi-state resources are a specialization of clones. They allow the instances to be in one
    of two operating modes (called <literal>active/passive</literal>,
     <literal>primary/secondary</literal>, or <literal>master/slave</literal>). Multi-state
     resources must contain exactly one group or one regular resource. </para>
   <para>
    When configuring resource monitoring or constraints, multi-state
    resources have different requirements than simple resources. For
    details, see &paceex;, available from <link xlink:href="http://www.clusterlabs.org/doc/"/>. Refer to
    section <citetitle>Multi-state - Resources That Have Multiple
     Modes</citetitle>.
   </para>
  
   <note>
    <title>Child Resources for Multi-state Resources</title>
    <para>
     Multi-state resources can either contain a primitive or a group as child resources. In
     &hawk2;, child resources cannot be created or modified while creating a
     multi-state resource. Before adding a multi-state resource, create child resources and configure them as
     desired. For details, refer to
     <xref linkend="sec.conf.hawk2.rsc.primitive"/> or
     <xref linkend="sec.conf.hawk2.rsc.group"/>.
    </para>
   </note>
   <procedure xml:id="pro.conf.hawk2.ms">
    <title>Adding a Multi-state Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Add Resource</guimenu>
      <guimenu>Multi-state</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Multi-state ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Child Resource</guimenu> list, select the primitive
      or group to use as a sub-resource for the multi-state resource.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the
      action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk2;&mdash;Multi-state Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-multi-state.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-multi-state.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.tag">
   <title>Grouping Resources by Using Tags</title>
   <para>Tags are a way to refer to multiple resources at once, without creating any colocation or
    ordering relationship between them. You can use tags for grouping conceptually related
    resources. For example, if you have several resources related to a database, you can add all
    related resources to a tag named <literal>database</literal>.</para>
   <para>
    All resources belonging to a tag can be started or stopped with a single
    command.</para>
  
   <procedure xml:id="pro.conf.hawk2.tag">
    <title>Adding a Tag</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Add Resource</guimenu>
      <guimenu>Tag</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Tag ID</guimenu>.
     </para>
    </step>
    <step>
     <para> From the <guimenu>Objects</guimenu> list, select the resources you want to refer to with
      the tag. </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the
      action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk2;&mdash;Tag</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-tag.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-tag.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.monitor">
   <title>Configuring Resource Monitoring</title>
   <para> The &hasi; does not only detect node failures, but also when an individual resource on
    a node has failed. If you want to ensure that a resource is running, configure resource
    monitoring for it. Usually, resources are only monitored by the cluster while they are
    running. However, to detect concurrency violations, also configure monitoring for resources
    which are stopped. For resource monitoring, specify a timeout and/or start delay value, and an
    interval. The interval tells the CRM how often it should check the resource status. You can also
    set particular parameters such as <literal>timeout</literal> for <literal>start</literal> or
     <literal>stop</literal> operations.</para>
   <procedure xml:id="pro.hawk2.operations">
    <title>Adding and Modifying an Operation</title>
    <!--taroth 2015-12-04: for next time:
     - explain how to configure the following example taken from sec.ha.config.basics.monitoring:
       op monitor interval="300s" role="Stopped" timeout="10s" \
       op monitor interval="30s" timeout="10s"
    - explain how to configure resource probing-->
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> Add a resource as described in <xref linkend="pro.conf.hawk2.primitive.add"/> or select
      an existing primitive to edit.</para>
     <para>&hawk2; automatically shows the most important <guimenu>Operations</guimenu>
       (<literal>start</literal>, <literal>stop</literal>, <literal>monitor</literal>) and proposes
      default values. </para>
     <para>To see the attributes belonging to each proposed value, hover the mouse pointer over the
      respective value.</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-monitor-op.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-monitor-op.png" width="60%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>To change the suggested <literal>timeout</literal> values for the
       <literal>start</literal> or <literal>stop</literal> operation: </para>
     <substeps>
      <step>
       <para> Click the pen icon next to the operation.</para>
      </step>
      <step>
       <para>In the dialog that opens, enter a different value for the <literal>timeout</literal>
        parameter, for example <literal>10</literal>, and confirm your change.</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>To change the suggested <guimenu>interval</guimenu> value for the
       <literal>monitor</literal> operation:</para>
     <substeps>
      <step>
       <para> Click the pen icon next to the operation.</para>
      </step>
      <step>
       <para>In the dialog that opens, enter a different value for the monitoring
         <literal>interval</literal>. </para>
      </step>
      <step>
       <para>To configure resource monitoring in the case that the resource is stopped:</para>
       <substeps>
        <step>
         <para>Select the <literal>role</literal> entry from the empty drop-down box below, and
          click the <guimenu>Plus</guimenu> icon next to it to add the new parameter.</para>
        </step>
        <step>
         <para>From the <literal>role</literal> drop-down box, select
          <literal>Stopped</literal>.</para>
        </step>
        <step>
         <para>Click <guimenu>Apply</guimenu> to confirm your changes and to close the dialog for
          the operation.</para>
        </step>
       </substeps>
      </step>
     </substeps>
    </step>
    <step>
     <para>Confirm your changes in the resource configuration screen. A message at the top of the
      screen shows if the action has been successful.</para>
    </step>
   </procedure>

   <para> For the processes that take place if the resource monitor detects a failure, refer to
     <xref linkend="sec.ha.config.basics.monitoring"/>. </para>
   <para>
    To view resource failures, switch to the <guimenu>Status</guimenu> screen in &hawk2; and select the resource
    you are interested in. In the <guimenu>Operations</guimenu> column click the arrow down icon and
    select <guimenu>Recent Events</guimenu>. The dialog that opens lists recent actions
    performed for the resource. Failures are displayed in red. To view the resource details, 
    click the magnifier icon in the <guimenu>Operations</guimenu> column.
   </para>
    <figure>
     <title>&hawk2;&mdash;Resource Details</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-rsc-details.png" width="70%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-rsc-details.png" width="60%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
  </sect2>
 </sect1>
 