<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<sect1 xmlns="http://docbook.org/ns/docbook" 
 xmlns:xi="http://www.w3.org/2001/XInclude" 
 xmlns:xlink="http://www.w3.org/1999/xlink" 
 version="5.0" xml:id="sec.conf.hawk2.cons">
 
  <title>Configuring Constraints</title>
  
    <info>
   <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer/>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>yes</dm:translation>
    <dm:languages/>
    <dm:release/>
    <dm:repository/>
   </dm:docmanager>
  </info>
  
  <para>
   After you have configured all resources, specify how the cluster should
   handle them correctly. Resource constraints let you specify on which
   cluster nodes resources can run, in which order resources will be loaded,
   and what other resources a specific resource depends on.
  </para>
  <para>
   For an overview of available types of constraints, refer to
   <xref linkend="sec.ha.config.basics.constraints.types"/>. When defining
   constraints, you also need to specify scores. For more information on
   scores and their implications in the cluster, see
   <xref linkend="sec.ha.config.basics.constraints.scores"/>.
  </para>
 
  <sect2 xml:id="sec.conf.hawk2.cons.loc">
   <title>Adding Location Constraints</title>

   <para>A location constraint determines on which node a resource may be run,
    is preferably run, or may not be run. An example of a location constraint is to place all resources related to a
    certain database on the same node.</para>
   <procedure xml:id="pro.hawk2.constraints.location">
    <title>Adding a Location Constraint</title>
    <para>
     <remark>taroth 2015-12-02: todo for next release: explain advanced configuration (via
      rules)</remark>
    </para>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
       <guimenu>Add Constraint</guimenu>
       <guimenu>Location</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Constraint ID</guimenu>. </para>
    </step>
    <step xml:id="step.hawk2.loc.rsc">
     <para>From the list of <guimenu>Resources</guimenu> select the resource or resources for which
      to define the constraint.</para>
    </step>
    <step>
     <para> Enter a <guimenu>Score</guimenu>. The score indicates the value you are assigning to
      this resource constraint. Positive values indicate the resource can run on the
       <guimenu>Node</guimenu> you specify in the next step. Negative values mean it should not run
      on that node. Constraints with higher scores are applied before those with lower
      scores.</para>
     <para>Some often-used values can also be set via the drop-down box:</para>
     <itemizedlist>
      <listitem>
       <para>If you want to force the resources to run on the node, click the arrow icon and select
         <literal>Always</literal>. This sets the score to <literal>INFINITY</literal>.</para>
      </listitem>
      <listitem>
       <para>If you never want the resources to run on the node, click the arrow icon and select
         <literal>Never</literal>. This sets the score to <literal>-INFINITY</literal>, meaning that
        the resources must not run on the node.</para>
      </listitem>
      <listitem>
       <para>To set the score to <literal>0</literal>, click the arrow icon and select
         <literal>Advisory</literal>. This disables the constraint. This is useful when
        you want to set resource discovery but do not want to constrain the resources.</para>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>Select a <guimenu>Node</guimenu>.</para>
    </step>
    <step>
     <para>Click <guimenu>Create</guimenu> to finish the configuration. A message at the top of the
      screen shows if the action has been successful.</para>
    </step>
   </procedure>

   <figure pgwide="0">
    <title>&hawk2;&mdash;Location Constraint</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-loc-constraint.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-loc-constraint.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.cons.col">
   <title>Adding Colocation Constraints</title>
   <para>A colocational constraint tells the cluster which resources may or may
    not run together on a node. As a colocation constraint defines a dependency
    between resources, you need at least two resources to create a colocation
    constraint. </para>
   <procedure xml:id="pro.hawk2.constraints.colocation">
    <title>Adding a Colocation Constraint</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
       <guimenu>Add Constraint</guimenu>
       <guimenu>Colocation</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Constraint ID</guimenu>. </para>
    </step>
    <step>
     <para> Enter a <guimenu>Score</guimenu>. The score determines the location relationship between
      the resources. Positive values indicate that the resources should run on the same node. Negative
      values indicate that the resources should not run on the same node. The score will be combined with
      other factors to decide where to put the resource. </para>
     <para>Some often-used values can also be set via the drop-down box:</para>
     <itemizedlist>
      <listitem>
       <para>If you want to force the resources to run on the same node, click the arrow icon and
        select <literal>Always</literal>. This sets the score to <literal>INFINITY</literal>.</para>
      </listitem>
      <listitem>
       <para>If you never want the resources to run on the same node, click the arrow icon and
        select <literal>Never</literal>. This sets the score to <literal>-INFINITY</literal>,
        meaning that the resources must not run on the same node.</para>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para> To define the resources for the constraint: </para>
     <substeps performance="required">
      <step xml:id="step.hawk2.col.rsc">
       <para>From the drop-down box in the <guimenu>Resources</guimenu> category, select a resource
        (or a template) and click the <guimenu>Plus</guimenu> icon next to the list.</para>
       <para>The resource is added and a new empty drop-down box appears beneath.</para>
      </step>
      <step>
       <para>Repeat this step to add more resources.</para>
       <para>As the topmost resource depends on the next resource and so on, the cluster will first
        decide where to put the last resource, then place the depending ones based on that decision.
        If the constraint cannot be satisÔ¨Åed, the cluster may not allow the dependent
        resource to run.</para>
      </step>
      <step>
       <para>To swap the order of resources within the colocation constraint, click the arrow up
        icon next to a resource to swap it with the entry above. </para>
      </step>
     </substeps>
    </step>
    <step>
     <para> If needed, specify further parameters for each resource (such as
      <literal>Started</literal>, <literal>Stopped</literal>, <literal>Master</literal>,
       <literal>Slave</literal>, <literal>Promote</literal>, <literal>Demote</literal>): Click the
      empty drop-down box next to the resource and select the desired entry.</para>
    </step>
    <step>
     <para>Click <guimenu>Create</guimenu> to finish the configuration. A message at the top of the
      screen shows if the action has been successful.</para>
    </step>
   </procedure>

   <figure pgwide="0">
    <title>&hawk2;&mdash;Colocation Constraint</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-col-constraint.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-col-constraint.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
   
  <sect2 xml:id="sec.conf.hawk2.cons.order">
   <title>Adding Order Constraints</title>
   <para>
    Order constraints define the order in which resources are started and stopped.
    As an order constraint defines a dependency between resources, you need at
    least two resources to create an order constraint.
   </para>
  <procedure xml:id="pro.hawk2.constraints.order">
   <title>Adding an Order Constraint</title>
  
   <step>
    <para>Log in to &hawk2;:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>From the left navigation bar, select <menuchoice>
     <guimenu>Add Constraint</guimenu>
     <guimenu>Order</guimenu>
    </menuchoice>.</para>
   </step>
   <step>
    <para> Enter a unique <guimenu>Constraint ID</guimenu>. </para>
   </step>
   <step>
    <para> Enter a <guimenu>Score</guimenu>. If the score is greater than zero, the order constraint
    is mandatory, otherwise it is optional. </para>
    <para>Some often-used values can also be set via the drop-down box:</para>
    <!--http://clusterlabs.org/doc/en-US/Pacemaker/1.1/html/Pacemaker_Explained/s-resource-ordering.html-->
    <itemizedlist>
     <listitem>
      <para>If you want to make the order constraint mandatory, click the arrow icon and
       select <literal>Mandatory</literal>.</para>
     </listitem>
     <listitem>
      <para>If you want the order constraint to be a suggestion only, click the arrow icon and select
       <literal>Optional</literal>. </para>
     </listitem>
     <listitem>
      <para><literal>Serialize</literal>: To ensure that no two stop/start
       actions occur concurrently for the resources, click the arrow icon and
       select <literal>Serialize</literal>. This makes sure that one resource must
       complete starting before the other can be started. A typical use case are
       resources that put a high load on the host during start-up.</para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para> For order constraints, you can usually keep the option <guimenu>Symmetrical</guimenu>
     enabled. This specifies that resources are stopped in reverse order. </para>
   </step>
   <step>
    <para> To define the resources for the constraint: </para>
    <substeps performance="required">
     <step xml:id="step.hawk2.order.rsc">
      <para>From the drop-down box in the <guimenu>Resources</guimenu> category, select a resource
       (or a template) and click the <guimenu>Plus</guimenu> icon next to the list.</para>
      <para>The resource is added and a new empty drop-down box appears beneath.</para>
     </step>
     <step>
      <para>Repeat this step to add more resources.</para>
      <para>The topmost resource will start first, then the second, etc. Usually the resources
       will be stopped in reverse order.</para>
     </step>
     <step>
      <para>To swap the order of resources within the order constraint, click the arrow up icon
       next to a resource to swap it with the entry above. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> If needed, specify further parameters for each resource (like <literal>Started</literal>,
     <literal>Stopped</literal>, <literal>Master</literal>,
     <literal>Slave</literal>, <literal>Promote</literal>,
     <literal>Demote</literal>): Click the empty drop-down box
     next to the resource and select the desired entry.</para>
   </step>
   <step>
    <para>Confirm your changes to finish the configuration. A message at the top of the
     screen shows if the action has been successful.</para>
   </step>
  </procedure>

  <figure pgwide="0">
   <title>&hawk2;&mdash;Order Constraint</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-order-constraint.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-order-constraint.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.cons.set">
   <title>Using Resource Sets for Constraints</title>
  <para>
   As an alternative format for defining constraints, you can use <xref linkend="sec.ha.config.basics.constraints.rscset"
    xrefstyle="select:title"/>. They have the same ordering semantics as  <xref linkend="sec.ha.config.basics.resources.advanced.groups"
     xrefstyle="select:title"/>.
   </para>
  
 
  
  <procedure xml:id="pro.hawk2.constraints.sets">
   <title>Using a Resource Set for Constraints</title>
   <step>
    <para>
     To use a resource set within a location constraint:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Proceed as outlined in
       <xref linkend="pro.hawk2.constraints.location"/>, apart from
       <xref linkend="step.hawk2.loc.rsc" xrefstyle="select:label"/>: Instead of selecting
       a single resource, select multiple
       resources by pressing <keycap function="control"/> or
       <keycap function="shift"/> and mouse click. This
       creates a resource set within the location constraint.
      </para>
     </step>
      <step>
      <para>
       To remove a resource from the location constraint, press
       <keycap function="control"/> and click the resource again to deselect
       it. 
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> To use a resource set within a colocation or order constraint: </para>
    <substeps performance="required">
     <step>
      <para> Proceed as described in <xref linkend="pro.hawk2.constraints.colocation"/> or <xref
        linkend="pro.hawk2.constraints.order"/>, apart from the step where you define the resources
       for the constraint (<xref linkend="step.hawk2.col.rsc" xrefstyle="select:label"/> or <xref
        linkend="step.hawk2.order.rsc"/>): </para>
     </step>
     <step>
      <para>Add multiple resources.</para>
     </step>
     <step>
      <para>To create a resource set, click the chain icon next to a resource to link it to the
       resource above. A resource set is visualized by a frame around the resources belonging to a
       set.</para>
     </step>
     <step>
      <para> You can combine multiple resources in a resource set or create multiple resource sets. </para>
      <figure>
       <title>&hawk2;&mdash;Two Resource Sets in a Colocation Constraint</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk2-constraint-set.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk2-constraint-set.png" width="100%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para> To unlink a resource from the resource above, click the scissors icon next to the
       resource. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Confirm your changes to finish the constraint configuration.
    </para>
   </step>
  </procedure>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.cons.more">
   <title>For More Information</title>
   <para> For more information on configuring constraints and detailed background information about
    the basic concepts of ordering and colocation, refer to the documentation available at <link
     xlink:href="http://www.clusterlabs.org/doc/"/>: </para>
   <itemizedlist>
    <listitem>
     <para> &paceex;, chapter <citetitle>Resource Constraints</citetitle>
     </para>
    </listitem>
    <listitem>
     <para>
      <citetitle>Colocation Explained</citetitle>
     </para>
    </listitem>
    <listitem>
     <para>
      <citetitle>Ordering Explained</citetitle>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.failover">
   <title>Specifying Resource Failover Nodes</title>
   <para>
    A resource will be automatically restarted if it fails. If that cannot be
    achieved on the current node, or it fails <replaceable>N</replaceable> times
    on the current node, it
    will try to fail over to another node. You can define several
    failures for resources (a <literal>migration-threshold</literal>), after
    which they will migrate to a new node. If you have more than two nodes in
    your cluster, the node to which a particular resource fails over is
    chosen by the &ha; software.
   </para>
   <para>
    You can specify a specific node to which a resource will fail over by
    proceeding as follows:
   </para>
   <procedure xml:id="pro.hawk2.failover">
    <title>Specifying a Failover Node</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>
      Configure a location constraint for the resource as described in
      <xref linkend="pro.hawk2.constraints.location"/>.
     </para>
    </step>
    <step>
     <para>
      Add the <literal>migration-threshold</literal> meta attribute to the
      resource as described in
      <xref linkend="pro.conf.hawk2.rsc.modify" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.hawk2.rsc.modify.params" xrefstyle="select:label"/>
      and enter a value for the migration-threshold. The
      value should be positive and less than INFINITY.
     </para>
    </step>
    <step>
     <para>
      If you want to automatically expire the failcount for a resource, add
      the <literal>failure-timeout</literal> meta attribute to the resource
      as described in
      <xref linkend="pro.conf.hawk2.primitive.add" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.hawk2.rsc.modify.params" xrefstyle="select:label"/>
      and enter a <guimenu>Value</guimenu> for the <literal>failure-timeout</literal>.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-failover-node.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-failover-node.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
      </informalfigure>  
    </step>
    <step>
     <para>
      If you want to specify additional failover nodes with preferences for a
      resource, create additional location constraints.
     </para>
    </step>
   </procedure>
   <para>
    The process flow regarding migration thresholds and failcounts is
    demonstrated in <xref linkend="ex.ha.config.basics.failover"/>.
   </para>
   <para>
    Instead of letting the failcount for a resource expire automatically, you
    can also clean up failcounts for a resource manually at any time. Refer
    to <xref linkend="sec.conf.hawk2.manage.cleanup"/> for details.
   </para>
  </sect2>

  <sect2 xml:id="sec.config.hawk2.failback">
   <title>Specifying Resource Failback Nodes (Resource Stickiness)</title>
   <para>
    A resource may fail back to its original node when that node is back
    online and in the cluster. To prevent this or to specify a different node
    for the resource to fail back to, change the stickiness value of the
    resource. You can either specify the resource stickiness when creating it
    or afterward.
   </para>
   <para>
    For the implications of different resource stickiness values, refer to
    <xref linkend="sec.ha.config.basics.failback"/>.
   </para>
   <procedure xml:id="pro.hawk2.stickiness">
    <title>Specifying Resource Stickiness</title>
     <step>
      <para>Log in to &hawk2;:</para>
      <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
     </step>
    <step>
     <para> Add the <literal>resource-stickiness</literal> meta attribute to the resource as
      described in <xref linkend="pro.conf.hawk2.rsc.modify" xrefstyle="select:label title nopage"
      />, <xref linkend="step.hawk2.rsc.modify.params" xrefstyle="select:label"/>. </para>
    </step>
    <step>
     <para>
      Specify a value between <literal>-INFINITY</literal> and
      <literal>INFINITY</literal> for <literal>resource-stickiness</literal>.
     </para>
     <informalfigure>
      <mediaobject>
      <imageobject role="fo">
      <imagedata fileref="hawk2-rsc-stickiness.png" width="100%"
      format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-rsc-stickiness.png" width="100%" format="PNG"/>
      </imageobject>
      </mediaobject>
      </informalfigure>
    </step>
   </procedure>
  </sect2>
 <sect2 xml:id="sec.config.hawk2.utilization">
  <title>Configuring Placement of Resources Based on Load Impact</title>
  <para>
   Not all resources are equal. Some, such as &xen; guests, require that
   the node hosting them meets their capacity requirements. If resources are
   placed so that their combined needs exceed the provided capacity, the
   performance of the resources diminishes or they fail.
  </para>
  <para>
   To take this into account, the &hasi; allows you to specify the
   following parameters:
  </para>
  <orderedlist spacing="normal">
   <listitem>
    <para>
     The capacity a certain node <emphasis>provides</emphasis>.
    </para>
   </listitem>
   <listitem>
    <para>
     The capacity a certain resource <emphasis>requires</emphasis>.
    </para>
   </listitem>
   <listitem>
    <para>
     An overall strategy for placement of resources.
    </para>
   </listitem>
  </orderedlist>

  <para>For more details and a configuration example,
   refer to <xref linkend="sec.ha.config.basics.utilization"/>.
  </para>
  <para>
   Utilization attributes are used to configure both the resource's
   requirements and the capacity a node provides. You first need to configure
   a node's capacity before you can configure the capacity a resource requires.
  </para>

 <procedure xml:id="pro.hawk2.utilization.node">
  <title>Configuring the Capacity a Node Provides</title>
  <step>
   <para>Log in to &hawk2;:</para>
   <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
  </step>
  <step>
   <para>
    In the left navigation bar, select <guimenu>Status</guimenu>.</para>
  </step>
  <step>
   <para>
    On the <guimenu>Nodes</guimenu> tab, select the node whose capacity you want
    to configure.
   </para>
  </step>
  <step>
    <para>In the <guimenu>Operations</guimenu> column, click the arrow down icon
     and select <guimenu>Edit</guimenu>.</para>
    <para>The <guimenu>Edit Node</guimenu> screen opens.</para>
  </step>
  <step>
   <para>Below <guimenu>Utilization</guimenu>, enter a name for a utilization
   attribute into the empty drop-down box.</para>
   <para>The name can be arbitrary (for example, <literal>RAM_in_GB</literal>).</para>
  </step>
  <step>
   <para>Click the <guimenu>Plus</guimenu> icon to add the attribute.</para>
  </step>
  <step>
    <para>In the empty text box next to the attribute, enter an attribute value.
     The value must be an integer.</para>
  </step>
  <step>
   <para>Add as many utilization attributes as you need and add values for all
    of them.
   </para>
  </step>
  <step>
   <para>Confirm your changes. A message at the top of the screen shows if the
    action has been successful.</para>
  </step>
 </procedure>

  <procedure xml:id="pro.hawk2.utilization.rsc">
   <title>Configuring the Capacity a Resource Requires</title>
   <para>Utilization attributes for the capacity a certain resource
   requires from a node can either be configured when creating a primitive
   resource or be added to an already existing primitive resource.</para>
   <para>Before you can add utilization attributes to a resource,
   you need to have set utilization attributes for your cluster nodes as
   described in <xref linkend="pro.hawk2.utilization.node"
    xrefstyle="select:label"/>.</para>
   <step>
    <para>Log in to &hawk2;:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     To add a utilization attribute to an existing resource: Go to <menuchoice>
      <guimenu>Manage</guimenu><guimenu>Status</guimenu>
     </menuchoice> and open the resource configuration dialog as described in
     <xref linkend="sec.conf.hawk2.manage.edit"/>.
    </para>
    <para>If you create a new resource: Go to <menuchoice>
     <guimenu>Configuration</guimenu><guimenu>Add Resource</guimenu>
    </menuchoice> and proceed as described in
     <xref linkend="sec.conf.hawk2.rsc.primitive"/>.
    </para>
   </step>
   <step>
    <para>In the resource configuration dialog, go to the
     <guimenu>Utilization</guimenu> category.</para>
   </step>
   <step>
    <para>From the empty drop-down box, select one of the utilization attributes
    that you have configured for the nodes in <xref linkend="pro.hawk2.utilization.node"
     xrefstyle="select:label"/>.</para>
   </step>
   <step>
    <para>Click the <guimenu>Plus</guimenu> icon to add the attribute to the resource.</para>
   </step>
   <step>
    <para>In the empty text box next to the attribute, enter an attribute value.
     The value must be an integer.</para>
   </step>
   <step>
    <para>Add as many utilization attributes as you need and add values for all
     of them.
    </para>
   </step>
   <step>
    <para>Confirm your changes. A message at the top of the screen shows if the
     action has been successful.</para>
   </step>
  </procedure>

  <para>
   After you have configured the capacities your nodes provide and the
   capacities your resources require, you need to set the placement strategy
   in the global cluster options. Otherwise the capacity configurations have
   no effect. Several strategies are available to schedule the load: for
   example, you can concentrate it on as few nodes as possible, or balance
   it evenly over all available nodes. For more information, refer to
   <xref linkend="sec.ha.config.basics.utilization"/>.
  </para>

  <procedure xml:id="pro.ha.config.hawk2.placement">
   <title>Setting the Placement Strategy</title>
   <step>
    <para>Log in to &hawk2;:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
     <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster
     Configuration</guimenu> to open the respective screen.
     It shows global cluster options and resource and operation defaults.
    </para>
   </step>
   <step>
    <para>
     From the empty drop-down box in the upper part of the screen, select
     <literal>placement-strategy</literal> and click the <guimenu>Plus</guimenu> icon to add the
     parameter.
    </para>
    <para>By default, its value is set to <guimenu>Default</guimenu>, which means
     that utilization attributes and values are not considered. </para>
   </step>
   <step>
    <para>
     Depending on your requirements, set <guimenu>Placement
      Strategy</guimenu> to the appropriate value.
    </para>
   </step>
    <step>
    <para>
     Confirm your changes.
    </para>
   </step>
  </procedure>
  </sect2>
 </sect1>