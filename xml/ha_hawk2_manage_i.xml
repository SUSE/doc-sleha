<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<sect1 xmlns="http://docbook.org/ns/docbook" 
 xmlns:xi="http://www.w3.org/2001/XInclude" 
 xmlns:xlink="http://www.w3.org/1999/xlink" 
 version="5.0" xml:id="sec.conf.hawk2.manage">
  
  <title>Managing Cluster Resources</title>
  
    <info>
   <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer/>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>yes</dm:translation>
    <dm:languages/>
    <dm:release/>
    <dm:repository/>
   </dm:docmanager>
    </info>
 
  <para> In addition to configuring your cluster resources, &hawk2; allows you to manage existing
   resources from the <guimenu>Status</guimenu> screen. For a general overview of the screen refer
   to <xref linkend="sec.conf.hawk2.manage.monitor.status"/>.</para>

  <sect2 xml:id="sec.conf.hawk2.manage.edit">
   <title>Editing Resources and Groups</title>
   <para>
    In case you need to edit existing resources, go to the <guimenu>Status</guimenu>
    screen and from the <guimenu>Operations</guimenu> column, select
    <menuchoice>
     <guimenu>action icon (arrow down)</guimenu>
     <guimenu>Edit</guimenu>
    </menuchoice>.
   </para>
   <para>
    The edit interface appears. For a primitive resource, the following
    operations are available:
   </para>

   <itemizedlist>
    <title>Primitive Operations</title>
    <listitem>
     <para>copy the resource</para>
    </listitem>
    <listitem>
     <para>rename the resource</para>
    </listitem>
    <listitem>
     <para>delete the resource</para>
    </listitem>
   </itemizedlist>

   <para>
     If you edit a group, the following operations are available:
   </para>
   <itemizedlist>
    <title>Group Operations</title>
    <listitem>
     <para>Create a new primitive as child in this group.</para>
    </listitem>
    <listitem>
     <para>Rename the group name (ID).</para>
    </listitem>
    <listitem>
     <para>Rearrange the group children by dragging the handle next to the
      name.</para>
    </listitem>
    <listitem>
     <para>Rearrange the group children by dragging the handle next to the name</para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.start">
   <title>Starting Resources</title>
   <para> Before you start a cluster resource, make sure it is set up correctly. For example, if you
    use an Apache server as a cluster resource, set up the Apache server first. Complete the
    Apache configuration before starting the respective resource in your cluster. </para>
   <note>
    <title>Do Not Touch Services Managed by the Cluster</title>
    <para> When managing a resource via the &hasi;, the resource must not be started or
     stopped otherwise (outside of the cluster, for example manually or on boot or reboot). The
     &hasi; software is responsible for all service start or stop actions. </para>
    <para> However, if you want to check if the service is configured properly, start it manually,
     but make sure that it is stopped again before &ha; takes over. </para>
    <para> For interventions in resources that are currently managed by the cluster, set the
     resource to <literal>maintenance mode</literal> first. <remark>taroth 2015-12-04: ToDo: add
      for next revision: krig - how does that work with hawk2? does it work already? 
      I searched in the Operations column for a resource but could not find anything there...
      krig 2015-12-08: Ah! That's the "Unmanage" operation on resources.</remark>
    </para>
   </note>
   <para> When creating a resource with &hawk2;, you can set its initial state with the
     <literal>target-role</literal> meta attribute. If you set its value to
     <literal>stopped</literal>, the resource does not start automatically after being created. </para>
   <procedure xml:id="pro.hawk2.rsc.start">
    <title>Starting A New Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para> Select the resource to start and in its <guimenu>Operations</guimenu> column click the
       <guimenu>Start</guimenu> icon. To continue, confirm the message that appears. </para>
     <para>When the resource has started, &hawk2; changes the resource's
       <guimenu>Status</guimenu> to green and shows on which node it is running. </para>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.manage.cleanup">
   <title>Cleaning Up Resources</title>
   <para> A resource will be automatically restarted if it fails, but each failure increases the
    resource's failcount. </para>
   <para> If a <literal>migration-threshold</literal> has been set for the resource, the node will
    no longer run the resource when the number of failures reaches the migration threshold. </para>
   <para> A resource's failcount can either be reset automatically (by setting a
     <literal>failure-timeout</literal> option for the resource) or it can be reset manually as
    described below. </para>
   <procedure xml:id="pro.hawk2.clean">
    <title>Cleaning Up A Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para> Go to the resource to clean up. In the <guimenu>Operations</guimenu> column click the
      arrow down button and select <guimenu>Cleanup</guimenu>. To continue, confirm the message that
      appears. </para>
     <para>This executes the
      command <command>crm resource cleanup</command> and cleans up the
      resource on all nodes. </para>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.manage.remove">
   <title>Removing Cluster Resources</title>
   <para> If you need to remove a resource from the cluster, follow the procedure below to avoid
    configuration errors: </para>
   <procedure xml:id="pro.hawk2.rsc.rm">
    <title>Removing a Cluster Resource</title>
    <step>
     <para> Clean up the resource on all nodes as described in <xref linkend="pro.hawk2.clean"/>.
     </para>
    </step>
    <step>
     <para>Stop the resource:</para>
     <substeps>
      <step>
       <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
         <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
      </step>
      <step>
       <para>In the <guimenu>Operations</guimenu> column click the <guimenu>Stop</guimenu> button
        next to the resource. </para>
      </step>
      <step>
       <para>To continue, confirm the message that appears.</para>
       <para>The <guimenu>Status</guimenu> column will reflect the change when the resource is
        stopped.</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>Delete the resource:</para>
     <substeps>
      <step>
       <para> In the left navigation bar, select <guimenu>Edit</guimenu>. </para>
      </step>
      <step>
       <para>In the list of <guimenu>Resources</guimenu>, go to the respective resource. From the
         <guimenu>Operations</guimenu> column click the <guimenu>Delete</guimenu> icon next to the
        resource.</para>
      </step>
      <step>
       <para>To continue, confirm the message that appears.</para>
      </step>
     </substeps>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.migrate">
   <title>Migrating Cluster Resources</title>
   <para> As mentioned in <xref linkend="sec.conf.hawk2.failover"/>, the cluster will fail over
    (migrate) resources automatically in case of software or hardware failures&mdash;according
    to certain parameters you can define (for example, migration threshold or resource stickiness).
    You can also manually migrate a resource to another node in the cluster. Or you
    decide to move the resource away from the current node and let the cluster decide where to put it. </para>
   <procedure xml:id="pro.hawk2.rsc.migrate">
    <title>Manually Migrating a Resource</title>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para>In the list of <guimenu>Resources</guimenu>, select the respective resource.</para>
    </step>
    <step>
     <para><remark>taroth 2015-12-07: krig, is there any way to select which node to migrate the
       resource to? krig: also, Hawk1 has two options: "Move" (lets you select where to move the rsc
       to and creates a location constraint with an INFINITY score for the destination node) and
       "Away from current node" (creates a location constraint with a -INFINITY score for the
       current node) - is there anything like this with Hawk2? - taroth 2015-12-08: on behalf of
       krig, filed https://bugzilla.suse.com/show_bug.cgi?id=958386 for this </remark>In the
       <guimenu>Operations</guimenu> column click the arrow down button and select
       <guimenu>Migrate</guimenu>. To continue, confirm the message that appears.</para>
    </step>
   </procedure>
   <para> To allow a resource to move back again, proceed as follows: </para>
   <procedure xml:id="pro.hawk2.rsc.migrate.back">
    <title>Unmigrating a Resource</title>

    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para>In the list of <guimenu>Resources</guimenu>, go to the respective resource.</para>
    </step>
    <step>
     <para>In the <guimenu>Operations</guimenu> column click the arrow down button and select
       <guimenu>Unmigrate</guimenu>. To continue, confirm the message that appears.</para>
     <para>
        This uses the <command>crm_resource&nbsp;</command>
        <option>-U</option> command. The resource
       can move back to its original location or it may stay where it is
      (depending on resource stickiness).</para>
    </step>
   </procedure>

   <para> For more information, see &paceex;, available from <link
     xlink:href="http://www.clusterlabs.org/doc/"/>. Refer to section
    <citetitle>Resource Migration</citetitle>. </para>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.monitor.status">
   <title>Monitoring a Cluster</title>
   <para>After you have logged in, &hawk2; displays the <guimenu>Status</guimenu> screen by
    default. An icon in the upper right corner shows the cluster status at one glance. For further
    details, have a look at the following categories:</para>
   <variablelist>
    <varlistentry>
     <term>Errors</term>
     <listitem>
      <para>Only shown if errors have occurred.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Resources</term>
     <listitem>
      <para>Shows the configured resources including their <guimenu>Status</guimenu>,
        <guimenu>Name</guimenu> (ID), Location (node on which they are running), and resource agent
        <guimenu>Type</guimenu>. From the <guimenu>Operations</guimenu> column,
       you can start or stop a resource, trigger several actions, or view details.
       Actions that can be triggered include to set the resource in maintenance
       mode, migrate it to a different node, cleanup the resource, show any
       recent events, or edit the resource.
       <remark>toms 2016-08-17: Actually, the operations column is a little
       bit more difficult. If you put your resource into maintenance mode, the
       first entry (Maintenance) disappears.
       </remark>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Nodes</term>
     <listitem>
      <para>Shows the nodes belonging to the cluster site you are logged in to, including the nodes'
        <guimenu>Status</guimenu> and <guimenu>Name</guimenu>. In the <guimenu>Maintenance</guimenu>
       and <guimenu>Standby</guimenu> columns, you can set or remove the
        <literal>maintenance</literal> or <literal>standby</literal> flag for a node. The
        <guimenu>Operations</guimenu> column allows you to view further details, for example, if a
        <literal>utilization</literal>, <literal>standby</literal> or <literal>maintenance</literal>
       attribute is set for the respective node. </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <figure pgwide="0">
    <title>&hawk2;&mdash;Cluster Status</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-cluster-status-main.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-cluster-status-main.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.monitor.dash">
   <title>Monitoring Multiple Clusters</title>
   <para> The cluster information displayed in the <guimenu>Dashboard</guimenu> screen is stored on
    the server side and synchronized between the cluster nodes (if passwordless SSH access between
    the cluster nodes has been configured). For details, see <xref
     linkend="sec.crmreport.nonroot.ssh"/>. However, the machine you are running &hawk2; on does
    not even need to be part of any cluster for that purpose&mdash;it can be a separate,
    unrelated system. </para>
   <procedure xml:id="pro.conf.hawk2.dashboard">
    <title>Monitoring Multiple Clusters with &hawk2;</title>
    <para>In addition to the general <xref linkend="sec.conf.hawk2.req" xrefstyle="select:title"/>,
     the following prerequisites need to be fulfilled to monitor multiple clusters with
     &hawk2;:</para>
    <itemizedlist>
     <title>Prerequisites</title>
     <listitem>
      <para> All clusters to be monitored from &hawk2;'s <guimenu>Dashboard</guimenu> must be
       running &productname; &productnumber;. It is not possible to monitor clusters that
       are running earlier versions of &productname;. </para>
     </listitem>
     <listitem>
      <para>If you did not replace the self-signed certificate for &hawk2; on every cluster node
       with your own certificate (or a certificate signed by an official Certificate Authority), log
       in to &hawk2; on <emphasis>every</emphasis> node in <emphasis>every</emphasis> cluster at
       least once. Verify the certificate (or add an exception in the browser to bypass the
       warning). </para>
     </listitem>
    </itemizedlist>
    <step>
     <para>Log in to &hawk2;:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <guimenu>Dashboard</guimenu>. </para>
    </step>
    <step>
     <para>To add dashboards for multiple clusters, click <guimenu>Add Cluster</guimenu>.</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-dashboard-add-cluster.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-dashboard-add-cluster.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <substeps>
      <step>
       <para> Enter a custom <guimenu>Cluster name</guimenu> with which to identify the cluster in
        the <guimenu>Dashboard</guimenu>. </para>
      </step>
      <step>
       <para>Enter the <guimenu>Hostname of a node in the cluster</guimenu>.</para>
      </step>
      <step>
       <para>To specify further options such as the update interval for &hawk2;, the port to
        connect to, or whether to use HTTPS (default), click <guimenu>Advanced</guimenu> and enter
        the details. </para>
      </step>
      <step>
       <para>Confirm your changes with <guimenu>Add</guimenu>.</para>

      </step>
      <step>
       <para> To add more clusters to the dashboard, click <guimenu>Add Cluster</guimenu> again and
        enter the details for the next cluster. </para>
       <figure>
        <title>&hawk2;&mdash;Dashboard</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="hawk2-dashboard-multiple-clusters.png" width="100%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="hawk2-dashboard-multiple-clusters.png" width="100%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </step>
     </substeps>
    </step>
    <step>
     <para> To remove a cluster from the dashboard, click the <literal>x</literal> icon next to the
      cluster's name. </para>
    </step>
    <step>
     <para> To view details about a cluster, enter a password and click <guimenu>Connect</guimenu>. </para>
     <para> &hawk2; will show you a summary with the status of the respective nodes, resources,
      and tickets.
      <!--
       (05:20:55 PM) krig: each column is a node except the last one which is for stopped resources, 
       and each row is a resource 
       (05:21:24 PM) krig: the frame of each box is the node status: green is good, red is bad, gray is offline
       (05:21:54 PM) krig: the fill color of each box is the status of the resource on that node: 
       here green means running, blue means master and orange means slave
       (05:09:42 PM) krig: in the dashboard, pointing at each box gives more information (details)
      -->
      Clicking a cluster name will take you to the <guimenu>Status</guimenu> view for that cluster,
      from where you can administer it as usual.</para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.monitor.batch">
   <title>Using Batch Mode</title>
   <para>
    <!-- Some paras are taken from the help page of Batch Mode -->
    The batch mode in &hawk2; can be used to do two things:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      Stage all changes to the cluster and apply them as a single transaction,
      instead of having each change take effect immediately.
     </para>
    </listitem>
    <listitem>
     <para>Simulate changes and cluster events.</para>
    </listitem>
   </itemizedlist>

   <para>
    For example, batch mode can be used when creating groups of resources
    that depend on each other, or to avoid intermediate incomplete
    configurations being applied to the cluster.
   </para>

   <para>The batch mode has the following features:</para>
   <itemizedlist>
    <listitem>
     <para>
      While batch mode is enabled, the <emphasis>cluster simulator</emphasis>
      runs automatically after every change. The expected outcome of the
      change is reflected in the user interface.
     </para>
    </listitem>
    <listitem>
     <para>
      When stopping a resource while in batch mode, the resource is not actually
      stopped. However, the user interface will update showing the resource as
      stopped, since the change is simulated.
     </para>
    </listitem>
    <listitem>
     <para>
      The simulator will process all cluster configuration changes, including
      creating and removing resources, changing resource parameters or editing
      constraints.
     </para>
    </listitem>
    <listitem>
     <para>
      It is also possible to simulate events in the cluster. This includes
      nodes going online or offline, resource operations and tickets being
      granted or revoked.
     </para>
    </listitem>
   </itemizedlist>

   <!--  -->
   <para>
    To work with the batch mode, do the following:
   </para>
   <procedure xml:id="pro.conf.hawk2.manage.monitor.batch">
    <title>Working with the Batch Mode</title>
    <step>
     <para>
      Click the <guimenu>Batch</guimenu> link at the top-level row.
      The batch mode bar appears below the top-level row.
     </para>
    </step>
    <step>
     <para>
      Change your cluster. Note that wizards that perform actions beyond
      simple cluster configuration will process those actions on the live
      system, not simply as simulated changes. Take care when using wizards
      while in batch mode.
     </para>
    </step>
    <step>
     <para>
      To review the changes you have made to the cluster, click the
     <guimenu>Show</guimenu> link. This will open a new dialog which shows
      a <quote>diff</quote>: lines starting with a <literal>-</literal>
      character represent the former state whereas a <literal>+</literal>
      means the future state.
     </para>
     <mediaobject>
      <imageobject>
       <imagedata width="50%" fileref="hawk-batchmode-show.png"/>
      </imageobject>
     </mediaobject>
    </step>
    <step>
     <para>
      To return to the regular mode, click <guimenu>Discard</guimenu>.
      A dialog opens where you can cancel the switch to the regular mode
      or proceed with <guimenu>Ok</guimenu>. This will discard any changes
      to the cluster configuration you have made.
     </para>
    </step>
    <step>
     <para>
      Use <guimenu>Apply</guimenu> to make a single commit to your live
      configuration.
      A dialog opens where you can cancel the switch to the regular mode
      or to apply your changes to the live configuration. This will disable
      the batch mode.
     </para>
    </step>
   </procedure>

<!--
   <sect3 xml:id="sec.conf.hawk2.manage.monitor.batch.simulator">
    <title>Using Simulator</title>
    <para></para>
   </sect3>
-->

   <sect3 xml:id="sec.conf.hawk2.manage.monitor.batch.inject">
    <title>Injecting Node and Resource Events</title>
    <para>Inside the batch mode dialog you can call two event types: node
     events and resource events. When you click the <guimenu>Inject</guimenu>
     button, it gives you two choices:
    </para>
    <variablelist>
     <varlistentry>
      <term><guimenu>Node Events</guimenu></term>
      <listitem>
       <para>
        lets you change the state of a node. Available states are
        <guimenu>online</guimenu>, <guimenu>offline</guimenu>, and
        <guimenu>unclean</guimenu>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Resource Events</guimenu></term>
      <listitem>
       <para>
        lets you change some properties of a resource. For example, you can
        set the operation, the node where it applies to, and the (simulated)
        result.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     When you have created you node type, it will show up in the batch mode
     dialog. Proceed with <guimenu>Close</guimenu>.
    </para>
   </sect3>
  </sect2>
</sect1>
