<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.ha.geo.manage">
 <title>Managing &geo; Clusters</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer/>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release/>
   <dm:repository/>
  </dm:docmanager>
 </info>

 <para>
  Before booth can manage a certain ticket within the &geo; cluster, you
  initially need to grant it to a site manually.
 </para>

 <sect1 xml:id="sec.ha.geo.manage.cli">
  <title>From Command Line</title>
  <para>
   Use the <command>booth&nbsp;client</command> command line tool to grant,
   list, or revoke tickets as described in
   <xref linkend="vl.ha.booth.client.cmds"/>. The
   <command>booth&nbsp;client</command> commands can be run on any machine in
   the cluster, not only the ones having the &boothd; running. The
   <command>booth&nbsp;client</command> commands try to find the
   <quote>local</quote> cluster by looking at the booth configuration file and
   the locally defined IP addresses. If you do not specify a site which the
   booth client should connect to (using the <option>-s</option> option), it
   will always connect to the local site.
  </para>
  <note>
   <title>Syntax Changes</title>
   <para>
    The syntax of booth client commands has been simplified since &productname;
    11. For example, the <literal>client</literal> keyword can be omitted for
    <option>list</option>, <option>grant</option>, or <option>revoke</option>
    operations: <command>booth list</command>. Also, the <option>-t</option>
    option can be omitted when specifying a ticket.
   </para>
   <para>
    The former syntax is still supported. For detailed information, see the
    <literal>Synopsis</literal> section in the booth man page. However, the
    examples in this manual use the simplified syntax.
   </para>
  </note>
<!--taroth 2013-04-24: information taken from bnc#752601, c#17-->
  <variablelist xml:id="vl.ha.booth.client.cmds">
   <title>Overview of <command>booth client</command> Commands</title>
   <varlistentry>
    <term>Listing All Tickets</term>
    <listitem>
<screen>&prompt.root;<command>booth</command> list
ticket: &ticket1;, leader: none
ticket: &ticket2;, leader: 10.2.12.101, expires: 2014-08-13 10:28:57</screen>
     <para>
      If you do not specify a certain site with <option>-s</option>, the
      information about the tickets will be requested from the local booth
      instance.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Granting a Ticket to a Site</term>
    <listitem>
<screen>&prompt.root;<command>booth</command> grant -s 192.168.201.151 &ticket1;
booth[27891]: 2014/08/13_10:21:23 info: grant request sent, waiting for the result ...
booth[27891]: 2014/08/13_10:21:23 info: grant succeeded!</screen>
     <para>
      In this case, <literal>&ticket1;</literal> will be granted to the site
      <literal>192.168.201.151</literal>. If you omit the <option>-s</option>
      option, booth will automatically connect to the current site (the site
      you are running the booth client on) and will request the
      <command>grant</command> operation.
     </para>
     <para>
      Before granting a ticket, the command will execute a sanity check. If the
      same ticket is already granted to another site, you will be warned about
      that and be prompted to revoke the ticket from the current site first.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Revoking a Ticket From a Site</term>
    <listitem>
<screen>&prompt.root;<command>booth</command> revoke &ticket1;
booth[27900]: 2014/08/13_10:21:23 info: revoke succeeded!</screen>
     <para>
      Booth will check to which site the ticket is currently granted and will
      request the <command>revoke</command> operation for
      <literal>&ticket1;</literal>. The revoke operation will be executed
      immediately.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   The <command>grant</command> and, under certain circumstances,
   <command>revoke</command> operations may take a while to return a definite
   operation's outcome. The client will wait for the result up to the ticket's
   <varname>timeout</varname> value before it gives up waiting&mdash;unless the
   <option>-w</option> option was used, in which case the client waits
   indefinitely. Find the exact status in the log files or with the
   <command>crm_ticket -L</command> command.
  </para>
  <warning>
   <title><command>crm_ticket</command> and <command>crm&nbsp;site&nbsp;ticket</command></title>
   <para>
    In case the booth service is not running for any reasons, you may also
    manage tickets manually with <command>crm_ticket</command> or
    <command>crm&nbsp;site&nbsp;ticket</command>. Both commands are only
    available on cluster nodes. In case of intervention, use them with great
    care as they <emphasis>cannot</emphasis> verify if the same ticket is
    already granted elsewhere. For more information, read the man pages.
   </para>
   <para>
    As long as booth is up and running, only use
    <command>booth&nbsp;client</command> for manual intervention.
   </para>
  </warning>
  <para>
   After you have initially granted a ticket to a site, the booth mechanism
   will take over and manage the ticket automatically. If the site holding a
   ticket should be out of service, the ticket will automatically be revoked
   after the expiry time and granted to another site. The resources that depend
   on that ticket will fail over to the new site holding the ticket. The nodes
   that have run the resources before will be treated according to the
   <literal>loss-policy</literal> you set within the constraint.
  </para>
<!--taroth 2013-04-24: fix for bnc#752601, c#10-->
  <procedure xml:id="pro.ha.geo.manage.tickets">
   <title>Managing Tickets Manually</title>
   <para>
    Assuming that you want to manually move <literal>ticket-nfs</literal> from
    site <literal>&cluster1;</literal> (with the virtual IP
    <literal>192.168.201.151</literal>) to site <literal>&cluster2;</literal>
    (with the virtual IP <literal>192.168.202.151</literal>), proceed as
    follows:
   </para>
   <step>
    <para>
     Set <literal>ticket-nfs</literal> to standby with the following command:
    </para>
<screen>&prompt.root;<command>crm_ticket</command> -t ticket-nfs -s</screen>
   </step>
   <step>
    <para>
     Wait for any resources that depend on <literal>ticket-nfs</literal> to be
     stopped or demoted cleanly.
    </para>
   </step>
   <step>
    <para>
     Revoke <literal>ticket-nfs</literal> from site
     <literal>&cluster1;</literal> with:
    </para>
<screen>&prompt.root;<command>booth</command> revoke -s 192.168.201.151 ticket-nfs</screen>
   </step>
   <step>
    <para>
     After the ticket has been revoked from its original site, grant it to the
     site <literal>&cluster2;</literal> with:
    </para>
<screen>&prompt.root;<command>booth</command> grant -s 192.168.202.151 ticket-nfs</screen>
   </step>
  </procedure>
  <remark>phil 2013-12: Will/Should get a cleaner, more integrated workflow - "booth client move -t ticket -s new-site"
     or something similar. - dmuhamedagic 2014-08-13: N/A</remark>
 </sect1>

<!--<sect2 xml:id="sec.ha.geo.manage.hawk">
  <title>With the &haweb; (&hawk2;)</title>
  <para>
   You can use &hawk2; as a single point of administration for monitoring
   multiple clusters. &hawk2;'s <guimenu>Cluster Dashboard</guimenu>
   allows you to view a summary of multiple clusters, with each summary
   listing the number of nodes, resources, tickets, and their state. The
   summary also shows whether any failures have appeared in the respective
   cluster.
  </para>
  <para><remark>taroth 2015-10-29: todo - check if this is also still true with hawk2!</remark>
   To manage cluster site tickets and to test the impact of ticket failover
   with the <guimenu>Simulator</guimenu>, you can switch from the
   <guimenu>Cluster Dashboard</guimenu> to other &hawk2; functions that
   are available after logging in to an individual cluster. &hawk2; allows
   you to grant or revoke tickets, to view ticket details, and to test the
   impact of ticket failover with the <guimenu>Simulator</guimenu>.
  </para>
  
  <para><remark>taroth 2015-10-29: either keep this section or enable sec.ha.geo.manage.hawk2</remark></para>
 
  <sect3 xml:id="sec.ha.geo.manage.hawk.dashboard">
<!-\-taroth 2014-08-27: CAVE - the following is copied from ha_config_hawk.xml,
 find a better solution next time-\->
   <title>Monitoring Multiple Clusters with the Cluster Dashboard</title>
   <para>
    The cluster information displayed in the <guimenu>Cluster
    Dashboard</guimenu> is stored in a persistent cookie. This means you
    need to decide which &hawk2; instance you want to view the
    <guimenu>Cluster Dashboard</guimenu> on, and always use that one. The
    machine you are running &hawk2; on does not even need to be part of
    any cluster for that purpose&mdash;it can be a separate, unrelated
    system.
   </para>
   <procedure xml:id="pro.ha.config.hawk.geo.dashboard">
    <title>Monitoring Multiple Clusters with &hawk2;</title>
    <itemizedlist>
     <title>Prerequisites</title>
     <listitem>
      <para>
       All clusters to be monitored from &hawk2;'s <guimenu>Cluster
       Dashboard</guimenu> must be running &productname;
       &productnumber;. It is not possible to monitor clusters that are
       running earlier versions of &productname;.
      </para>
     </listitem>
     <listitem>
      <para>
       If you did not replace the self-signed certificate for &hawk2; on
       every cluster node with your own certificate (or a certificate signed
       by an official Certificate Authority), log in to &hawk2; on
       <emphasis>every</emphasis> node in <emphasis>every</emphasis> cluster
       at least once. Verify the certificate (and add an exception in the
       browser to bypass the warning).
      </para>
     </listitem>
     <listitem>
      <para>
       If you are using Mozilla Firefox, you must change its preferences to
       <guimenu>Accept third-party cookies</guimenu>. Otherwise cookies from
       monitored clusters will not be set, thus preventing login to the
       clusters you are trying to monitor.
      </para>
     </listitem>
    </itemizedlist>
    <step>
     <para>
      Start the &hawk2; Web service on a machine you want to use for
      monitoring multiple clusters.
     </para>
    </step>
    <step>
     <para>
      Start a Web browser and as URL enter the IP address or host name of
      the machine that runs &hawk2;:
     </para>
<screen>https://<replaceable>IPaddress</replaceable>:7630/</screen>
    </step>
    <step>
     <para>
      On the &hawk2; login screen, click the <guimenu>Dashboard</guimenu>
      link in the right upper corner.
     </para>
     <para>
      The <guimenu>Add Cluster</guimenu> dialog appears.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-dashboard-add-cluster.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-dashboard-add-cluster.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Enter a custom <guimenu>Cluster Name</guimenu> with which to identify
      the cluster in the <guimenu>Cluster Dashboard</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter the <guimenu>Host Name</guimenu> of one of the cluster nodes and
      confirm your changes.
     </para>
     <para>
      The <guimenu>Cluster Dashboard</guimenu> opens and shows a summary of
      the cluster that you have added.
     </para>
    </step>
    <step>
     <para>
      To add more clusters to the dashboard, click the plus icon and enter
      the details for the next cluster.
     </para>
     <figure>
      <title>&hawk2;&mdash;Cluster Dashboard</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-dashboard-multiple-clusters.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-dashboard-multiple-clusters.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      To remove a cluster from the dashboard, click the <literal>x</literal>
      icon next to the cluster's summary.
     </para>
    </step>
    <step>
     <para>
      To view more details about a cluster, click somewhere in the cluster's
      box on the dashboard.
     </para>
     <para>
      This opens a new browser window or new browser tab. If you are not
      currently logged in to the cluster, this takes you to the &hawk2;
      login screen. After having logged in, &hawk2; shows the
      <guimenu>Cluster Status</guimenu> of that cluster in the summary view.
      From here, you can administer the cluster with &hawk2; as usual.
     </para>
    </step>
    <step>
     <para>
      As the <guimenu>Cluster Dashboard</guimenu> stays open in a separate
      browser window or tab, you can easily switch between the dashboard and
      the administration of individual clusters in &hawk2;.
     </para>
    </step>
   </procedure>
   <para>
    Any status changes for nodes or resources are reflected almost
    immediately within the <guimenu>Cluster Dashboard</guimenu>.
   </para>
  </sect3>
  <sect3 xml:id="sec.ha.geo.manage.hawk.tickets">
   <title>Managing Tickets with &hawk2;</title>
   <note>
    <title>Granting Tickets to Current Site</title>
    <para>
     <remark>taroth 2014-08-27: it is not explicitly mentioned in fate#316119, therefore I'm
       wondering if the same is true for any revoke operations? or does that work
       differently?</remark>
     Though you can view tickets for all sites with &hawk2;, any grant
     operations triggered by &hawk2; only apply to the current site (that
     you are currently connected to with &hawk2;). To grant a ticket to
     another site of your &geo; cluster, start &hawk2; on one of the
     cluster nodes belonging to the respective site.
    </para>
   </note>
   <procedure xml:id="pro.ha.config.hawk.viewtickets">
    <title>Granting, Revoking and Viewing Tickets with &hawk2;</title>
    <para>
     <remark>taroth 2014-0827: DEVs, is the following still true?</remark>
     Tickets are visible in &hawk2; if they have been granted or revoked
     at least once or if they are referenced in a ticket dependency. In case
     a ticket is referenced in a ticket dependency, but has not been granted
     to any site yet, &hawk2; displays it as <literal>revoked</literal>.
    </para>
    <step>
     <para>
      Start a Web browser and log in to the cluster.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Switch to the <guimenu>Summary View</guimenu> or the <guimenu>Tree
      View</guimenu> to view tickets. Along with information about cluster
      nodes and resources, &hawk2; also displays a
      <guimenu>Tickets</guimenu> category.
     </para>
     <para>
      It shows the following information:
      <remark>tarot 2014-08-27: DEVs,
       is the following correct?</remark>
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <guimenu>Granted</guimenu>: Tickets that are granted to the current
        site.
       </para>
      </listitem>
      <listitem>
       <para>
        <guimenu>Elsewhere</guimenu>: Tickets that are granted to another
        site.
       </para>
      </listitem>
      <listitem>
       <para>
        <guimenu>Revoked</guimenu>: Tickets that have been revoked.
       </para>
      </listitem>
     </itemizedlist>
     <figure>
      <title>&hawk2; Cluster Status (Summary View)&mdash;Ticket Overview</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-geo-status-tickets.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-geo-status-tickets.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      To view more details, either click the title of the
      <guimenu>Tickets</guimenu> category or the individual ticket entries
      that are marked as links. Hover the cursor over the information icon
      next to the ticket to display the following information: time when the
      ticket was last granted,
      <remark>taroth 2014-08-27: DEVs, not sure what
        leader means here? does it display the IP address of the site that holds
        the ticket? (=the virtual IP configured for boothd at that
        site)?</remark>
      the leader, and the ticket expiry date.
     </para>
     <figure>
      <title>&hawk2; Cluster Status (Summary View)&mdash;Ticket Details</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-geo-ticket-details.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-geo-ticket-details.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      To revoke a ticket, click the wrench icon next to the ticket and
      select <guimenu>Revoke</guimenu>. Confirm your choice when &hawk2;
      prompts for a confirmation.
     </para>
     <para>
      If the ticket cannot be revoked for any reason, &hawk2; shows an
      error message. After the ticket has been successfully revoked,
      &hawk2; will update the ticket status in the
      <guimenu>Tickets</guimenu> category.
     </para>
    </step>
    <step>
     <para>
      You can only grant tickets that are not already given to any site. To
      grant a ticket to the current site:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Click the wrench icon next to a ticket with the current status
        <guimenu>Revoked</guimenu> and select <guimenu>Grant</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Confirm your choice when &hawk2; prompts for a confirmation.
       </para>
       <para>
        If the ticket cannot be granted for any reason, &hawk2; shows an
        error message. After the ticket has been successfully granted,
        &hawk2; will update the ticket status in the
        <guimenu>Tickets</guimenu> category.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
   <procedure xml:id="pro.ha.config.hawk.geo.simulator">
    <title>Simulating Granting and Revoking Tickets</title>
    <para>
     &hawk2;'s <guimenu>Simulator</guimenu> allows you to explore failure
     scenarios before they happen. To explore whether your resources that
     depend on a certain ticket behave as expected, you can also test the
     impact of granting or revoking tickets.
    </para>
    <step>
     <para>
      Start a Web browser and log in to &hawk2;.
     </para>
    </step>
    <step>
     <para>
      Click the wrench icon next to the user name in the top-level row, and
      select <guimenu>Simulator</guimenu>.
     </para>
     <para>
      &hawk2;'s background changes color to indicate the simulator is
      active. A simulator dialog opens in the bottom right hand corner of
      the screen. Its title <guimenu>Simulator (initial state)</guimenu>
      indicates that the <guimenu>Cluster Status</guimenu> screen still
      reflects the current state of the cluster.
     </para>
    </step>
    <step>
     <para>
      To simulate status change of a ticket:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Click <guimenu>+Ticket</guimenu> in the simulator control dialog.
       </para>
      </step>
      <step>
       <para>
        Select the <guimenu>Action</guimenu> you want to simulate.
       </para>
      </step>
      <step>
       <para>
        Confirm your changes to add them to the queue of events listed in
        the controller dialog below <guimenu>Injected State</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To start the simulation, click <guimenu>Run</guimenu> in the simulator
      control dialog. The <guimenu>Cluster Status</guimenu> screen displays
      the impact of the simulated events. The simulator control dialog
      changes to <guimenu>Simulator (final state)</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To exit the simulation mode, close the simulator control dialog. The
      <guimenu>Cluster Status</guimenu> screen switches back to its normal
      color and displays the current cluster state.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk2;Simulator&mdash;Tickets</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-geo-simulator-tickets.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-geo-simulator-tickets.png" width="80%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    For more information about &hawk2;'s <guimenu>Simulator</guimenu> (and
    which other scenarios can be explored with it), refer to the
    <citetitle>&haguide;</citetitle> for &productname;, available from
    <link xlink:href="http://www.suse.com/documentation/"/>. Refer to chapter <citetitle>Configuring and
    Managing Cluster Resources (Web Interface)</citetitle>, section
    <citetitle> Exploring Potential Failure Scenarios</citetitle>.
   </para>
  </sect3>
 </sect2>
 -->

 <xi:include href="geo_manage_hawk2_i.xml"/>
</chapter>
