<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.ha.geo.manage">
 <title>Managing &geo; Clusters</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer/>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release/>
   <dm:repository/>
  </dm:docmanager>
 </info>

 <para>
  Before booth can manage a certain ticket within the &geo; cluster, you
  initially need to grant it to a site manually&mdash;either with the booth command
  line client or with &hawk2;.
 </para>

 <sect1 xml:id="sec.ha.geo.manage.cli">
  <title>Managing Tickets From Command Line</title>
  <para>
   Use the <command>booth&nbsp;client</command> command line tool to grant,
   list, or revoke tickets as described in
   <xref linkend="vl.ha.booth.client.cmds"/>. The
   <command>booth&nbsp;client</command> commands can be run on any machine in
   the cluster, not only the ones having the &boothd; running. The
   <command>booth&nbsp;client</command> commands try to find the
   <quote>local</quote> cluster by looking at the booth configuration file and
   the locally defined IP addresses. If you do not specify a site which the
   booth client should connect to (using the <option>-s</option> option), it
   will always connect to the local site.
  </para>
  <note>
   <title>Syntax Changes</title>
   <para>
    The syntax of booth client commands has been simplified since &productname;
    11. The former syntax is still supported. For detailed information, see the
    <literal>Synopsis</literal> section in the booth man page.
   </para>
   <para>The examples in this manual use the simplified syntax.
   </para>
  </note>
<!--taroth 2013-04-24: information taken from bnc#752601, c#17-->
  <variablelist xml:id="vl.ha.booth.client.cmds">
   <title>Overview of <command>booth client</command> Commands</title>
   <varlistentry>
    <term>Listing All Tickets</term>
    <listitem>
<screen>&prompt.root;<command>booth</command> list
ticket: &ticket1;, leader: none
ticket: &ticket2;, leader: 10.2.12.101, expires: 2014-08-13 10:28:57</screen>
     <para>
      If you do not specify a certain site with <option>-s</option>, the
      information about the tickets will be requested from the local booth
      instance.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Granting a Ticket to a Site</term>
    <listitem>
<screen>&prompt.root;<command>booth</command> grant -s 192.168.201.100 &ticket1;
booth[27891]: 2014/08/13_10:21:23 info: grant request sent, waiting for the result ...
booth[27891]: 2014/08/13_10:21:23 info: grant succeeded!</screen>
     <para>
      In this case, <literal>&ticket1;</literal> will be granted to the site
      <literal>192.168.201.100</literal>. Without the <option>-s</option>
      option, booth would automatically connect to the current site (the site
      you are running the booth client on) and would request the
      <command>grant</command> operation.
     </para>
     <para>
      Before granting a ticket, the command executes a sanity check. If the
      same ticket is already granted to another site, you are warned about
      that and are prompted to revoke the ticket from the current site first.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Revoking a Ticket From a Site</term>
    <listitem>
<screen>&prompt.root;<command>booth</command> revoke &ticket1;
booth[27900]: 2014/08/13_10:21:23 info: revoke succeeded!</screen>
     <para>
      Booth checks to which site the ticket is currently granted and
      requests the <command>revoke</command> operation for
      <literal>&ticket1;</literal>. The revoke operation will be executed
      immediately.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   The <command>grant</command> and (under certain circumstances),
   <command>revoke</command> operations may take a while to return a definite
   operation's outcome. The client waits for the result up to the ticket's
   <varname>timeout</varname> value before it gives up waiting. If the
   <option>-w</option> option was used, the client will wait indefinitely
   instead. Find the exact status in the log files or with the
   <command>crm_ticket -L</command> command.
  </para>
  <warning>
   <title><command>crm_ticket</command> and <command>crm&nbsp;site&nbsp;ticket</command></title>
   <para>
    If the booth service is not running for any reasons, you may also
    manage tickets manually with <command>crm_ticket</command> or
    <command>crm&nbsp;site&nbsp;ticket</command>. Both commands are only
    available on cluster nodes. Use them with great care as they
    <emphasis>cannot</emphasis> verify if the same ticket is
    already granted elsewhere. For more information, read the man pages.
   </para>
   <para>
    As long as booth is up and running, only use the <command>booth&nbsp;client</command>
    for manual intervention.
   </para>
  </warning>
  <para>
   After you have initially granted a ticket to a site, the booth mechanism
   takes over and manages the ticket automatically. If the site holding a
   ticket should be out of service, the ticket is automatically revoked
   after the expiry time and granted to another site. The resources that depend
   on that ticket fail over to the new site that holds the ticket. The
   <literal>loss-policy</literal> set within the constraint specifies what
   happens to the nodes that have run the resources before.
  </para>
<!--taroth 2013-04-24: fix for bnc#752601, c#10-->
  <procedure xml:id="pro.ha.geo.manage.tickets">
   <title>Managing Tickets Manually</title>
   <para>
    Assuming that you want to manually move <literal>&ticket1;</literal> from
    site <literal>&cluster1;</literal> (with the virtual IP
    <literal>192.168.201.100</literal>) to site <literal>&cluster2;</literal>
    (with the virtual IP <literal>192.168.202.100</literal>), proceed as
    follows:
   </para>
   <step>
    <para>
     Set <literal>&ticket1;</literal> to standby with the following command:
    </para>
<screen>&prompt.root;<command>crm_ticket</command> -t &ticket1; -s</screen>
   </step>
   <step>
    <para>
     Wait for any resources that depend on <literal>&ticket1;</literal> to be
     stopped or demoted cleanly.
    </para>
   </step>
   <step>
    <para>
     Revoke <literal>&ticket1;</literal> from site
     <literal>&cluster1;</literal> with:
    </para>
<screen>&prompt.root;<command>booth</command> revoke -s 192.168.201.100 &ticket1;</screen>
   </step>
   <step>
    <para>
     After the ticket has been revoked from its original site, grant it to the
     site <literal>&cluster2;</literal> with:
    </para>
<screen>&prompt.root;<command>booth</command> grant -s 192.168.202.100 &ticket1;</screen>
   </step>
  </procedure>
 </sect1>
 <xi:include href="geo_manage_hawk2_i.xml"/>
</chapter>
