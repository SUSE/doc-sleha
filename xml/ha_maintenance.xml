<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
 xml:id="cha.ha.maintenance">
 <title>Executing Maintenance Tasks</title>
 <info>
  <abstract>
  <para>
   To perform maintenance tasks on the cluster nodes, you might need to stop
   the resources running on that node, to move them, or to shut down or reboot
   the node. <!--Or you may need to stop the cluster software while leaving the services
   untouched.-->This chapters explains how to manually take down a cluster node
   without negative side-effects. It also gives an overview of different options
   the cluster stack provides for executing maintenance tasks.
  </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer/>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release/>
   <dm:repository/>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec.ha.maint.shutdown.node">
  <title>Implications of Taking Down a Cluster Node</title>
  <para>
   When you shut down or reboot a cluster node or stop the &pace; service on a
   node, the following processes will be triggered:</para>
   <itemizedlist>
    <listitem>
     <para>
      The resources that are running on the node will be stopped or moved
      off the node.
     </para>
    </listitem>
   <listitem>
     <para>
      If stopping the resources should fail or time out, the &stonith; mechanism
      will fence the node and shut it down.
     </para>
    </listitem>
   </itemizedlist>
   <procedure>
    <title>Manually Rebooting a Cluster Node</title>
    <para>
     If your aim is to move the services off the node in an orderly fashion
     before shutting down or rebooting the node, proceed as follows:
    </para>
   <step>
    <para>
     On the node you want to reboot or shut down, log in as &rootuser; or
     equivalent.
    </para>
   </step>
   <step>
    <para>
     Put the node into <literal>standby</literal> mode:
    </para>
    <screen>&prompt.root;crm node standby</screen>
    <para>
     That way, services can migrate off the node without being limited by the
     shutdown timeout of &pace;.
    </para>
   </step>
   <step>
    <para>
     Check the cluster status with:
    </para>
    <screen>&prompt.root;crm status</screen>
    <para>
     It shows the respective node in <literal>standby</literal> mode:
    </para>
<screen>[...]
Node <replaceable>&node2;</replaceable>: standby
[...]</screen>
   </step>
    <step>
    <para>
     Stop the &pace; service on that node:
    </para>
    <screen>&prompt.root;systemctl stop pacemaker.service</screen>
   </step>
   <step>
    <para>
     Reboot the node.
    </para>
   </step>
  </procedure>
<para>To check if the node joins the cluster again:</para>
  <procedure>
    <step>
      <para>
       Log in to the node as &rootuser; or equivalent.
      </para>
     </step>
     <step>
      <para>
       Check if the &pace; service has started:
      </para>
      <screen>&prompt.root;systemctl status pacemaker.service</screen>
     </step>
     <step>
      <para>
       If not, start it:
      </para>
      <screen>&prompt.root;systemctl start pacemaker.service</screen>
     </step>
     <step>
      <para>
       Check the cluster status with:
      </para>
      <screen>&prompt.root;crm status</screen>
      <para>
       It should show the node coming online again.
      </para>
     </step>
   </procedure>
 </sect1>

<sect1 xml:id="sec.ha.maint.overview">
<title>Different Options for Maintenance Tasks</title>
 <para>&pace; offers a variety of methods for performing system maintenance:</para>
   <variablelist>
    <varlistentry>
     <term>Putting a Node into Standby Mode</term>
     <listitem>
      <para>
       A node that is in standby mode can no longer run resources. Any resources
       running on the node will be moved away or stopped (in case no other node
       is eligible to run the resource). Also, all monitor operations will be
       stopped on the node, except for those with <literal>role=Stopped</literal>.
      </para>
      <para>
       You can use this option if you need to stop a node in a cluster while
       continuing to provide the services running on another node.
      </para>
     </listitem>
    </varlistentry>
 <varlistentry>
  <term>FIXME (more to follow)</term>
  <listitem>
   <para></para>
  </listitem>
 </varlistentry>
   </variablelist>

</sect1>
 <sect1 xml:id="sec.ha.config.basics.maint.mode">
  <title>Maintenance Modes</title>
   &maint-mode-basics;
  <para>
   With regard to that, the &hasi; provides maintenance modes and options on
   several levels:
  </para>

  <variablelist>
   <varlistentry>
    <term>Cluster Maintenance Mode</term>
    <listitem>
     <para>
      Use this option if you need to perform maintenance tasks and do not want
      to receive any notification by the cluster during that time. In
      maintenance mode, you can stop or restart cluster resources at
      will&mdash;the &hasi; will not attempt to restart them. All resources
      automatically become unmanaged: The &hasi; will cease monitoring them and
      thus be oblivious to their status.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Maintenance Mode for Nodes</term>
    <listitem>
     <para>
      Use this option if you want to do maintenance for plenty of (or all)
      resources hosted on a node. It can also be used for updating software
      packages on a node that do <emphasis>not</emphasis> affect the cluster
      stack. See also
      <xref linkend="sec.ha.migration.update"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Maintenance Mode For Resources</term>
    <listitem>
     <para>
      Use this option if you need to manually touch a service that is managed
      by a resource (or if you need to adjust any components of this service).
     </para>
     <note>
      <title>Monitoring Unmanaged Resources</title>
      <para>
       If you want to suspend management of an individual resource but still
       want the cluster to monitor the resource and to report any failures,
       adjust the <option>is-managed</option> meta attribute for this resource
       instead of putting the resource into maintenance mode. See <xref
       linkend="pro.ha.config.hawk.rsc.is-managed" xrefstyle="select:label"/> or <xref
       linkend="sec.ha.manual_config.cli.maint.mode" xrefstyle="select:label"/>
       for details.
      </para>
      <para>
       For the difference between maintenance mode and
       <option>is-managed</option>, see also
       <xref linkend="tab.ha.basics.meta"/>.
      </para>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="se.ha.maintenance.cluster.services">
  <title>Implications of Cluster Maintenance Mode</title>

  <para>
   If the cluster is in maintenance mode, all resources become unmanaged. This
   means you can even stop all &pace; services on a node. All daemons and
   processes (originally started as &pace;-managed cluster resources) will
   continue to run.
  </para>

  <para>
   However, as &corosync; is also stopped when you stop the &pace; service,
   this might lead to unexpected results for some resources. For example, DLM
   depends on the membership and messaging services provided by &corosync;. If
   &corosync; stops, the DLM resource will assume a split-brain scenario and
   trigger a fencing operation. To avoid this, explicitly stop resources like
   DLM before putting the cluster or the node into maintenance mode and before
   stopping the &pace; service.
  </para>

  <para>
   If you attempt to start &pace; services on a node while the cluster is in
   maintenance mode, &pace; will initiate a single one-shot monitor operation
   (a <quote>probe</quote>) for every resource to evaluate which resources are
   currently running on that node. However, it will take no further action
   other than determining the resources' status.
  </para>
 </sect1>
 <sect1 xml:id="sec.ha.maintenance.outline">
  <title>Avoiding Unwanted Side Effects</title>
  &warning-maint-mode;
</sect1>
 <sect1 xml:id="sec.ha.config.hawk.maint.mode">
  <title>Using Maintenance Modes with &hawk2;</title>

  <para>
   The following procedures show how to set and unset maintenance mode on
   cluster level, node level, and resource level with &hawk2;. If you want to
   put a resource into unmanaged mode with the <option>is-managed</option> meta
   attribute instead, see <xref linkend="pro.ha.config.hawk.rsc.is-managed"/>.
  </para>

  <procedure xml:id="pro.ha.config.hawk.maint.mode.cluster">
   <title>Applying Maintenance Mode to the Cluster</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster
     Configuration</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>CRM Configuration</guimenu> group, select the
     <guimenu>maintenance-mode</guimenu> attribute from the empty drop-down box
     and click the plus icon to add it.
    </para>
   </step>
   <step>
    <para>
     To set <literal>maintenance-mode=true</literal>, activate the check box
     next to <literal>maintenance-mode</literal> and confirm your changes.
    </para>
   </step>
   <step>
    <para>
     After you have finished the maintenance task for the whole cluster,
     deactivate the check box next to the <literal>maintenance-mode</literal>
     attribute.
    </para>
    <para>
     From this point on, &hasi; will take over cluster management again.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro.ha.config.hawk.maint.mode.nodes">
   <title>Applying Maintenance Mode to Nodes</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual nodes' views, click the wrench icon next to the
     node and select <guimenu>Maintenance</guimenu>.
    </para>
    <para>
     This adds the following instance attribute to the node:
     <literal>maintenance="true"</literal>. The resources previously running on
     this node now becomes <literal>unmanaged</literal>. No new
     resources are allocated to the node until it leaves the maintenance
     mode.
    </para>
   </step>
   <step>
    <para>
     To deactivate the maintenance mode, click the wrench icon next to the node
     and select <guimenu>Ready</guimenu>.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro.ha.config.hawk.maint.mode.rsc">
   <title>Applying Maintenance Mode to Resources</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select the resource you want to put in maintenance mode or unmanaged mode,
     click the wrench icon next to the resource and select <guimenu>Edit
     Resource</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Open the <guimenu>Meta Attributes</guimenu> category.
    </para>
   </step>
   <step>
    <para>
     From the empty drop-down list, select the <guimenu>maintenance</guimenu>
     attribute and click the plus icon to add it.
    </para>
   </step>
   <step>
    <para>
     Activate the check box next to <literal>maintenance</literal> to set the
     maintenance attribute to <literal>yes</literal>.
    </para>
   </step>
   <step>
    <para>
     Confirm your changes.
    </para>
   </step>
   <step>
    <para>
     After you have finished the maintenance task for that resource, deactivate
     the check box next to the <literal>maintenance</literal> attribute for
     that resource.
    </para>
    <para>
     From this point on, the resource will be managed by the &hasi; software
     again.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro.ha.config.hawk.rsc.is-managed">
   <title>Putting a Resource Into Unmanaged Mode</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref
      linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     From the left navigation bar, select <guimenu>Status</guimenu> and go to
     the <guimenu>Resources</guimenu> list.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>Operations</guimenu> column, click the arrow down icon
     next to the resource you want to modify and select
     <guimenu>Edit</guimenu>.
    </para>
    <para>
     The resource configuration screen opens.
    </para>
   </step>
   <step>
    <para>
     Below <guimenu>Meta Attributes</guimenu>, select the
     <guimenu>is-managed</guimenu> entry from the empty drop-down box.
    </para>
   </step>
   <step>
    <para>
     Set its value to <literal>No</literal> and click <guimenu>Apply</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After you have finished your maintenance task, set
     <guimenu>is-managed</guimenu> to <literal>Yes</literal> (which is the
     default value) and apply your changes.
    </para>
    <para>
     From this point on, the resource will be managed by the &hasi; software
     again.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.ha.manual_config.cli.maint.mode">
  <title>Using Maintenance Modes with &crmsh;</title>

  <variablelist>
   <varlistentry>
    <term>Applying Maintenance Mode to your Cluster</term>
    <listitem>
     <para>
      In case you want to put the whole cluster in maintenance mode, use the
      following command:
     </para>
<screen>&prompt.root;<command>crm</command> configure property maintenance-mode=true</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Applying Maintenance Mode to Nodes</term>
    <listitem>
     <para>
      To put a node into maintenance mode (for example, the node
      <literal>&node1;</literal>):
     </para>
<screen>&prompt.root;<command>crm</command> node maintenance &node1;</screen>
     <para>
      The <command>crm status</command> command will show the maintenance mode
      for &node1; and no more resources will be allocated to that node. To
      remove the maintenance flag from the node, use:
     </para>
<screen>&prompt.root;<command>crm</command> node ready &node1;</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Applying Maintenance Mode to Resources</term>
    <listitem>
     <para>
      To put a specific resource into maintenance mode (for example, the
      resource <literal>ipaddress</literal>) enter:
     </para>
<screen>&prompt.root;<command>crm</command> resource maintenance ipaddress true</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Putting a Resource Into Unmanaged Mode</term>
    <listitem>
     <para>
      To put a specific resource into unmanaged mode, enter:
     </para>
<screen>&prompt.root;<command>crm</command> resource unmanage <replaceable>RESOURCE_ID</replaceable></screen>
     <para>
      To bring it back to managed mode, enter:
     </para>
<screen>&prompt.root;<command>crm</command> resource manage <replaceable>RESOURCE_ID</replaceable></screen>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
