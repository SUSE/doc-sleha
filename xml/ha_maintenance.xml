<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
 xml:id="cha.ha.maintenance">
 <title>Executing Maintenance Tasks</title>
 <info>
  <abstract>
   &maint-mode-basics;
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer/>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release/>
   <dm:repository/>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec.ha.config.basics.maint.mode">
  <title>Different Maintenance Modes</title>

  <para>
   With regard to that, the &hasi; provides maintenance modes and options on
   several levels:
  </para>

  <variablelist>
   <varlistentry>
    <term>Cluster Maintenance Mode</term>
    <listitem>
     <para>
      Use this option if you need to perform maintenance tasks and do not want
      to receive any notification by the cluster during that time. In
      maintenance mode, you can stop or restart cluster resources at
      will&mdash;the &hasi; will not attempt to restart them. All resources
      automatically become unmanaged: The &hasi; will cease monitoring them and
      thus be oblivious to their status.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Maintenance Mode For Resources</term>
    <listitem>
     <para>
      Use this option if you need to manually touch a service that is managed
      by a resource (or if you need to adjust any components of this service).
     </para>
     <note>
      <title>Monitoring Unmanaged Resources</title>
      <para>
       If you want to suspend management of an individual resource but still
       want the cluster to monitor the resource and to report any failures,
       adjust the <option>is-managed</option> meta attribute for this resource
       instead of putting the resource into maintenance mode. FIXME
      </para>
      <para>
       For the difference between maintenance mode and
       <option>is-managed</option>, see also
       <xref linkend="tab.ha.basics.meta"/>.
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Maintenance Mode for Nodes</term>
    <listitem>
     <para>
      Use this option if you want to update software packages on a node that do
      <emphasis>not</emphasis> affect the cluster stack. To check the exact
      conditions under which to use this option, see
      <xref linkend="sec.ha.migration.update"/>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="se.ha.maintenance.cluster.services">
  <title>Implications of Cluster Maintenance Mode</title>

  <para>
   If the cluster is in maintenance mode, all resources become unmanaged. This
   means you can even stop all &pace; services on a node. All daemons and
   processes (originally started as &pace;-managed cluster resources) will
   continue to run.
  </para>

  <para>
   However, as &corosync; is also stopped when you stop the &pace; service,
   this might lead to unexpected results for some resources. For example, DLM
   depends on the membership and messaging services provided by &corosync;. If
   &corosync; stops, the DLM resource will assume a split-brain scenario and
   trigger a fencing operation. To avoid this, manually stop resources like DLM
   or bring them back from maintenance mode before stopping the &pace; service.
  </para>

  <para>
   If you attempt to start &pace; services on a node while the cluster is in
   maintenance mode, &pace; will initiate a single one-shot monitor operation
   (a <quote>probe</quote>) for every resource to evaluate which resources are
   currently running on that node. However, it will take no further action
   other than determining the resources' status.
  </para>
 </sect1>
 <sect1 xml:id="sec.ha.maintenance.outline">
  <title>Avoiding Unwanted Side Effects</title>
  &warning-maint-mode;
</sect1>
 <sect1 xml:id="sec.ha.config.hawk.maint.mode">
  <title>Using Maintenance Modes with &hawk2;</title>

  <para>
   The following procedures show how to set and unset maintenance mode on
   cluster level, node level, and resource level with &hawk2;. If you want to
   put a resource into unmanaged mode with the <option>is-managed</option> meta
   attribute, see <xref linkend="pro.ha.config.hawk.rsc.is-managed"/>.
  </para>

  <procedure xml:id="pro.ha.config.hawk.maint.mode.cluster">
   <title>Applying Maintenance Mode to the Cluster</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster
     Configuration</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>CRM Configuration</guimenu> group, select the
     <guimenu>maintenance-mode</guimenu> attribute from the empty drop-down box
     and click the plus icon to add it.
    </para>
   </step>
   <step>
    <para>
     To set <literal>maintenance-mode=true</literal>, activate the check box
     next to <literal>maintenance-mode</literal> and confirm your changes.
    </para>
   </step>
   <step>
    <para>
     After you have finished the maintenance task for the whole cluster,
     deactivate the check box next to the <literal>maintenance-mode</literal>
     attribute.
    </para>
    <para>
     From this point on, &hasi; will take over cluster management again.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro.ha.config.hawk.maint.mode.nodes">
   <title>Applying Maintenance Mode to Nodes</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In one of the individual nodes' views, click the wrench icon next to the
     node and select <guimenu>Maintenance</guimenu>.
    </para>
    <para>
     This will add the following instance attribute to the node:
     <literal>maintenance="true"</literal>. The resources previously running on
     the maintenance-mode node will become <literal>unmanaged</literal>. No new
     resources will be allocated to the node until it leaves the maintenance
     mode.
    </para>
   </step>
   <step>
    <para>
     To deactivate the maintenance mode, click the wrench icon next to the node
     and select <guimenu>Ready</guimenu>.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro.ha.config.hawk.maint.mode.rsc">
   <title>Applying Maintenance Mode to Resources</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Resources</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select the resource you want to put in maintenance mode or unmanaged mode,
     click the wrench icon next to the resource and select <guimenu>Edit
     Resource</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Open the <guimenu>Meta Attributes</guimenu> category.
    </para>
   </step>
   <step>
    <para>
     From the empty drop-down list, select the <guimenu>maintenance</guimenu>
     attribute and click the plus icon to add it.
    </para>
   </step>
   <step>
    <para>
     Activate the check box next to <literal>maintenance</literal> to set the
     maintenance attribute to <literal>yes</literal>.
    </para>
   </step>
   <step>
    <para>
     Confirm your changes.
    </para>
   </step>
   <step>
    <para>
     After you have finished the maintenance task for that resource, deactivate
     the check box next to the <literal>maintenance</literal> attribute for
     that resource.
    </para>
    <para>
     From this point on, the resource will be managed by the &hasi; software
     again.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro.ha.config.hawk.rsc.is-managed">
   <title>Putting a Resource Into Unmanaged Mode</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref
      linkend="sec.conf.hawk2.login"/>.
    </para>
   </step>
   <step>
    <para>
     From the left navigation bar, select <guimenu>Status</guimenu> and go to
     the <guimenu>Resources</guimenu> list.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>Operations</guimenu> column, click the arrow down icon
     next to the resource you want to modify and select
     <guimenu>Edit</guimenu>.
    </para>
    <para>
     The resource configuration screen opens.
    </para>
   </step>
   <step>
    <para>
     Below <guimenu>Meta Attributes</guimenu>, select the
     <guimenu>is-managed</guimenu> entry from the empty drop-down box.
    </para>
   </step>
   <step>
    <para>
     Set its value to <literal>No</literal> and click <guimenu>Apply</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After you have finished your maintenance task, set
     <guimenu>is-managed</guimenu> to <literal>Yes</literal> (which is the
     default value) and apply your changes.
    </para>
    <para>
     From this point on, the resource will be managed by the &hasi; software
     again.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.ha.manual_config.cli.maint.mode">
  <title>Using Maintenance Modes with &crmsh;</title>

  <variablelist>
   <varlistentry>
    <term>Applying Maintenance Mode to your Cluster</term>
    <listitem>
     <para>
      In case you want to put the whole cluster in maintenance mode, use the
      following command:
     </para>
<screen>&prompt.root;<command>crm</command> configure property maintenance-mode=true</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Applying Maintenance Mode to Nodes</term>
    <listitem>
     <para>
      To put a node into maintenance mode (for example, the node
      <literal>&node1;</literal>):
     </para>
<screen>&prompt.root;<command>crm</command> node maintenance &node1;</screen>
     <para>
      The <command>crm status</command> command will show the maintenance mode
      for &node1; and no more resources will be allocated to that node. To
      remove the maintenance flag from the node, use:
     </para>
<screen>&prompt.root;<command>crm</command> node ready &node1;</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Applying Maintenance Mode to Resources</term>
    <listitem>
     <para>
      To put a specific resource into maintenance mode (for example, the
      resource <literal>ipaddress</literal>) enter:
     </para>
<screen>&prompt.root;<command>crm</command> resource maintenance ipaddress true</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Putting a Resource Into Unmanaged Mode</term>
    <listitem>
     <para>
      To put a specific resource into unmanaged mode, enter:
     </para>
<screen>&prompt.root;<command>crm</command> resource unmanage <replaceable>RESOURCE_ID</replaceable></screen>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1>
  <title>Rebooting a Cluster Node</title>
  <para>If you need to reboot a cluster node for a maintenance task, it is not a
   good idea to simply shut it down without precautions. Rebooting a cluster
   node (as well as stopping the cluster stack on a node) will trigger the
   normal &ha; recovery process (like in the case of a reboot caused by a
   fault). That means the node will be fenced. Services that had been running on
   this node will be restarted on other nodes (or migrate back to the same node
   when it has finished rebooting and rejoined the cluster).
   <remark>taroth 2018-05-04: more to follow on Monday</remark></para>
 </sect1>
</chapter>
