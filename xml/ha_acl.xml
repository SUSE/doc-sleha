<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-ha-acl">
 <title>Access Control Lists</title>
 <info>
      <abstract>
        <para>
    The cluster administration tools like &crmshell; (&crmsh;) or
    &hawk2; can be used by &rootuser; or any user in the group
    <systemitem class="groupname">haclient</systemitem>. By default, these
    users have full read/write access. To limit access or assign more
    fine-grained access rights, you can use <emphasis>Access control
    lists</emphasis> (ACLs).
   </para>
        <para>
    Access control lists consist of an ordered set of access rules. Each
    rule allows read or write access or denies access to a part of the
    cluster configuration. Rules are typically combined to produce a
    specific role, then users may be assigned to a role that matches their
    tasks.
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <para>

 </para>
 <note>
  <title>CIB Syntax Validation Version and ACL Differences</title>
  <para>
   This ACL documentation only applies if your CIB is validated with the CIB
   syntax version <literal>pacemaker-2.0</literal> or higher. For details on
   how to check this and upgrade the CIB version, see
   <xref linkend="note-ha-cib-upgrade"/>.
  </para>
  <!--taroth 2020-03-11: commenting the following because we currently only publish 
    11 SP4 docs (the others are out of maintenance)-->
   <!--<para>
   If you have upgraded from &productname; 11 SPx and kept your former
   CIB version, refer to the <citetitle>Access Control List</citetitle>
   chapter in the <citetitle>&haguide;</citetitle> for &productname; 11 SP3 or earlier. It is
   available from FIXME.
   </para>-->
 </note>
 <sect1 xml:id="sec-ha-acl-require">
  <title>Requirements and Prerequisites</title>

  <para>
   Before you start using ACLs on your cluster, make sure the following
   conditions are fulfilled:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Ensure you have the same users on all nodes in your cluster, either by
     using NIS, Active Directory, or by manually adding the same users to
     all nodes.
    </para>
   </listitem>
   <listitem>
    <para>
     All users for whom you want to modify access rights with ACLs must
     belong to the <systemitem class="groupname">haclient</systemitem>
     group.
    </para>
   </listitem>
   <listitem>
    <para>
     All users need to run &crmsh; by its absolute path
     <filename>/usr/sbin/crm</filename>.
    </para>
   </listitem>
   <listitem>
    <para>
     If non-privileged users want to run &crmsh;, their
     <envar>PATH</envar> variable needs to be extended with
     <filename>/usr/sbin</filename>.
    </para>
   </listitem>
  </itemizedlist>

  <important>
   <title>Default Access Rights</title>
   <itemizedlist>
    <listitem>
     <para>
      ACLs are an optional feature. By default, use of ACLs is disabled.
     </para>
    </listitem>
    <listitem>
     <para>
      If ACLs are not enabled, &rootuser; and all users belonging to the
      <systemitem class="groupname">haclient</systemitem> group have full
      read/write access to the cluster configuration.
     </para>
    </listitem>
    <listitem>
     <para>
      Even if ACLs are enabled and configured, both &rootuser; and the
      default CRM owner <systemitem class="username">hacluster</systemitem>
      <emphasis>always</emphasis> have full access to the cluster
      configuration.
     </para>
    </listitem>
   </itemizedlist>
  </important>

  <para>
   To use ACLs you need some knowledge about XPath. XPath is a language for
   selecting nodes in an XML document. Refer to
   <link xlink:href="http://en.wikipedia.org/wiki/XPath"/> or look into the
   specification at <link xlink:href="http://www.w3.org/TR/xpath/"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-ha-acl-enable">
  <title>Enabling Use of ACLs in Your Cluster</title>

  <para>
   Before you can start configuring ACLs, you need to
   <emphasis>enable</emphasis> use of ACLs. To do so, use the following
   command in the &crmsh;:
  </para>

<screen>&prompt.root;<command>crm</command> configure property enable-acl=true</screen>
    <para>
   Alternatively, use &hawk2; as described in
   <xref linkend="pro-ha-acl-enable-hawk2"/>.
  </para>

  <procedure xml:id="pro-ha-acl-enable-hawk2">
   <title>Enabling Use of ACLs with &hawk2;</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster Configuration</guimenu>
     to display the global cluster options and their current values.
    </para>
   </step>
   <step>
    <para>
     Below <guimenu>Cluster Configuration</guimenu> click the empty drop-down box
     and select <guimenu>enable-acl</guimenu> to add the parameter. It is added
     with its default value <literal>No</literal>.
    </para>
   </step>
   <step>
    <para>
     Set its value to <literal>Yes</literal> and apply your changes.
    </para>
   </step>
  </procedure>
  
 </sect1>
 <sect1 xml:id="sec-ha-acl-basics">
  <title>The Basics of ACLs</title>

  <para>
   Access control lists consist of an ordered set of access rules. Each rule
   allows read or write access or denies access to a part of the cluster
   configuration. Rules are typically combined to produce a specific role,
   then users may be assigned to a role that matches their tasks. An ACL
   role is a set of rules which describe access rights to CIB. A rule
   consists of the following:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     an access right like <literal>read</literal>, <literal>write</literal>,
     or <literal>deny</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     a specification where to apply the rule. This specification can be a
     type, an ID reference, or an XPath expression.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Usually, it is convenient to bundle ACLs into roles and assign a specific
   role to system users (ACL targets). There are two methods to create ACL
   rules:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec-ha-acl-config-xpath"/>. You need to know the
     structure of the underlying XML to create ACL rules.
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-ha-acl-config-tag"/>. Create a shorthand syntax and
     ACL rules to apply to the matched objects.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec-ha-acl-config-xpath">
   <title>Setting ACL Rules via XPath Expressions</title>
   <para>
    To manage ACL rules via XPath, you need to know the structure of the
    underlying XML. Retrieve the structure with the following command that
    shows your cluster configuration in XML (see
    <xref linkend="ex-ha-acl-excerpt" xrefstyle="select:label nopage"/>):
   </para>
<screen>&prompt.root;<command>crm</command> configure show xml</screen>
   <remark>taroth 2014-08-13: filed https://bugzilla.novell.com/show_bug.cgi?id=891695 for a future "Show CIB"
    option in Hawk</remark>
   <example xml:id="ex-ha-acl-excerpt">
    <title>Excerpt of a Cluster Configuration in XML</title>
<screen>&lt;num_updates="59" 
      dc-uuid="175704363"
      crm_feature_set="3.0.9"
      validate-with="pacemaker-2.0"
      epoch="96"
      admin_epoch="0"
      cib-last-written="Fri Aug  8 13:47:28 2014"
      have-quorum="1"&gt;
  &lt;configuration&gt;
    &lt;crm_config&gt;
       &lt;cluster_property_set id="cib-bootstrap-options"&gt;
        &lt;nvpair name="stonith-enabled" value="true" id="cib-bootstrap-options-stonith-enabled"/&gt;
       [...]
      &lt;/cluster_property_set&gt;
    &lt;/crm_config&gt;
    &lt;nodes&gt;
      &lt;node id="175704363" uname="alice"/&gt;
      &lt;node id="175704619" uname="bob"/&gt;
    &lt;/nodes&gt;
    &lt;resources&gt; [...]  &lt;/resources&gt;
    &lt;constraints/&gt;
    &lt;rsc_defaults&gt; [...] &lt;/rsc_defaults&gt;
    &lt;op_defaults&gt; [...] &lt;/op_defaults&gt;
  &lt;configuration&gt;
&lt;/cib&gt;</screen>
   </example>
   <para>
    With the XPath language you can locate nodes in this XML document. For
    example, to select the root node (<literal>cib</literal>) use the XPath
    expression <literal>/cib</literal>. To locate the global cluster
    configurations, use the XPath expression
    <literal>/cib/configuration/crm_config</literal>.
   </para>
   <para>
    As an example, <xref linkend="tab-ha-acl-operator"/> shows the
    parameters (access type and XPath expression) to create an
    <quote>operator</quote> role. Users with this role can only execute the
    tasks mentioned in the second column&mdash;they cannot reconfigure
    any resources (for example, change parameters or operations), nor change
    the configuration of colocation or ordering constraints.
   </para>
   <table xml:id="tab-ha-acl-operator">
    <title>Operator Role&mdash;Access Types and XPath Expressions</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>
         Type
        </para>
       </entry>
       <entry>
        <para>
         XPath/Explanation
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//crm_config//nvpair[@name='maintenance-mode']</screen>
        <para>
         Turn cluster maintenance mode on or off.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//op_defaults//nvpair[@name='record-pending']</screen>
        <para>
         Choose whether pending operations are recorded.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//nodes/node//nvpair[@name='standby']</screen>
        <para>
         Set node in online or standby mode.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//resources//nvpair[@name='target-role']</screen>
        <para>
         Start, stop, promote or demote any resource.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//resources//nvpair[@name='maintenance']</screen>
        <para>
         Select if a resource should be put to maintenance mode or not.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Write
        </para>
       </entry>
       <entry>
<screen>//constraints/rsc_location</screen>
        <para>
         Migrate/move resources from one node to another.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Read
        </para>
       </entry>
       <entry>
<screen>/cib</screen>
        <para>
         View the status of the cluster.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec-ha-acl-config-tag">
   <title>Setting ACL Rules via Abbreviations</title>
   <para>
    For users who do not want to deal with the XML structure there is an
    easier method.
<!--It is a combination of a tag specifier and/or a
    reference.-->
   </para>
   <para>
    For example, consider the following XPath:
   </para>
<screen>//*[@id="rsc1"]</screen>
   <para>
    which locates all the XML nodes with the ID <literal>rsc1</literal>.
   </para>
   <para>
    The abbreviated syntax is written like this:
   </para>
<screen>ref:"rsc1"</screen>
   <para>
    This also works for constraints. Here is the verbose XPath:
   </para>
<screen>//constraints/rsc_location</screen>
   <para>
    The abbreviated syntax is written like this:
   </para>
<screen>type:"rsc_location"</screen>
   <para>
    The abbreviated syntax can be used in &crmsh; and &hawk2;. The CIB
    daemon knows how to apply the ACL rules to the matching objects.
   </para>
  </sect2>
 </sect1>
 
  <sect1 xml:id="sec-ha-acl-config-hawk2">
  <title>Configuring ACLs with &hawk2;</title>
  <para>
   The following procedures show how to configure read-only access to the
   cluster configuration by defining a <literal>monitor</literal> role and
   assigning it to a user. Alternatively, you can use &crmsh; to do so,
   as described in <xref linkend="pro-ha-acl-crm"/>.
  </para>

  <procedure xml:id="pro-ha-acl-hawk2-role">
   <title>Adding a Monitor Role with &hawk2;</title>
   <step>
    <para>
     Log in to &hawk2;: </para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Roles</guimenu>. 
    </para>
   </step>
   <step>
    <para>
      Click <guimenu>Create</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter a unique <guimenu>Role ID</guimenu>, for example,
     <literal>monitor</literal>.
    </para>
   </step>
   <step>
    <para>
      As access <guimenu>Right</guimenu>, select <literal>Read</literal>.
    </para>
   </step>
   <step>
    <para>
     As <guimenu>Xpath</guimenu>, enter the XPath expression
     <literal>/cib</literal>.
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-acl-role.png" width="100%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-acl-role.png" width="100%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para>
      Click <guimenu>Create</guimenu>.
    </para>
    <para>
     This creates a new role with the name <literal>monitor</literal>, sets
     the <literal>read</literal> rights and applies this to all elements in
     the CIB by using the XPath expression<literal>/cib</literal>.
    </para>
   </step>
   <step>
    <para>
     If necessary, add more rules by clicking the plus icon and specifying
     the respective parameters.
    </para>
   </step>
   <step>
    <para>
     Sort the individual rules by using the arrow up or down buttons.
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro-ha-acl-hawk2-target">
    <title>Assigning a Role to a Target with &hawk2;</title>
   <para>
    To assign the role we created in <xref linkend="pro-ha-acl-hawk2-role"
    xrefstyle="select:label"/> to a system user (target), proceed as follows:
   </para>
   <step>
    <para>
     Log in to &hawk2;: </para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Targets</guimenu>. 
    </para>
   </step>
   <step>
    <para>
     To create a system user (ACL Target), click <guimenu>Create</guimenu> and
     enter a unique <guimenu>Target ID</guimenu>, for example, <literal>tux</literal>.
     Make sure this user belongs to the <systemitem
      class="groupname">haclient</systemitem> group.
    </para>
   </step>
   <step>
    <para>
     To assign a role to the target, select one or multiple <guimenu>Roles</guimenu>.
    </para>
    <para>
     In our example, select the <literal>monitor</literal> role you created
     in <xref linkend="pro-ha-acl-hawk2-role" xrefstyle="select:label"/>.
     </para>
    <informalfigure>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk2-acl-user-assign.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk2-acl-user-assign.png" width="80%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </step>
     <step>
      <para>
       Confirm your choice.
      </para>
     </step>
   </procedure>

  <para>
   To configure access rights for resources or constraints, you can also use
   the abbreviated syntax as explained in
   <xref linkend="sec-ha-acl-config-tag"/>.
  </para>
 </sect1>

 <sect1 xml:id="sec-ha-acl-config-crm">
  <title>Configuring ACLs with &crmsh;</title>

  <para>
   The following procedure shows how to configure a read-only access to the
   cluster configuration by defining a <literal>monitor</literal> role and
   assigning it to a user.
  </para>

  <procedure xml:id="pro-ha-acl-crm">
   <title>Adding a Monitor Role and Assigning a User with &crmsh;</title>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Start the interactive mode of &crmsh;:
    </para>
<screen>&prompt.root;<command>crm</command> configure
&prompt.crm.conf;</screen>
   </step>
   <step>
    <para>
     Define your ACL role(s):
    </para>
    <substeps performance="required">
     <step>
      <para>
       Use the <command>role</command> command to define a new role:
      </para>
<screen>&prompt.crm.conf;<command>role</command> monitor read xpath:"/cib"</screen>
      <para>
       The previous command creates a new role with the name
       <literal>monitor</literal>, sets the <literal>read</literal> rights
       and applies it to all elements in the CIB by using the XPath
       expression <literal>/cib</literal>. If necessary, you can add more
       access rights and XPath arguments.
      </para>
     </step>
     <step>
      <para>
       Add additional roles as needed.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Assign your roles to one or multiple ACL targets, which are the
     corresponding system users. Make sure they belong to the
     <systemitem class="groupname">haclient</systemitem> group.
    </para>
<screen>&prompt.crm.conf;<command>acl_target</command> &exampleuser_plain; monitor</screen>
   </step>
   <step>
    <para>
     Check your changes:
    </para>
<screen>&prompt.crm.conf;<command>show</command></screen>
   </step>
   <step>
    <para>
     Commit your changes:
    </para>
<screen>&prompt.crm.conf;<command>commit</command></screen>
   </step>
  </procedure>

  <para>
   To configure access rights for resources or constraints, you can also use
   the abbreviated syntax as explained in
   <xref linkend="sec-ha-acl-config-tag"/>.
  </para>
 </sect1>
<!-- taroth 2015-04-29: commenting for now (as agreed with ygao) 
  as the upstream document is outdated
  (does not reflect the changes mentioned in bsc#921056)
  
  <sect1 id="sec-ha-acl-moreinfo">
  <title>For More Information</title>

  <para>
   See <ulink url="http://www.clusterlabs.org/pacemaker/doc/acls.html"/>.
  </para>
 </sect1>-->
</chapter>
