<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<!-- toms 2014-02-26:
  - rear-SUSE is not available anymore in SLE12 Beta1
  - No YaST module for Rear
  - 2014-05-14: Btrfs and Rear:
    http://en.opensuse.org/SDB:Disaster_Recovery#All_filesystems_are_equal.2C_but_some_are_more_equal_than_others
-->
<!--Fates #310991, 312336-->
<!--taroth 2011-09-19: information sources:
  /usr/share/doc/packages/rear/README
  /usr/share/doc/packages/rear-SUSE
  http://sourceforge.net/projects/rear/files/documentation/

-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-ha-rear">
 <title>Disaster recovery with &rear; (&rear.long;)</title>
 <info>
      <abstract>
        <para>
    &rear.long; (<quote>&rear;</quote>) is a disaster recovery framework for use by
    system administrators. It is a collection of Bash scripts that need to
    be adjusted to the specific production environment that is to be
    protected in case of disaster.
   </para>
        <para>
    No disaster recovery solution works out-of-the-box. Therefore
    you must take preparations <emphasis>before</emphasis> any
    disaster happens.
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>editing</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-ha-rear-concept">
  <title>Conceptual overview</title>

<!-- taroth 2015-03-26: the following slides by jsmeix provide excellent input:
 https://en.opensuse.org/images/8/8b/Relax-and-Recover_jsmeix_presentation.pdf
-->

  <para>
   The following sections describe the general disaster recovery concept and
   the basic steps you need to execute for successful recovery with
   &rear;. They also provide guidance on &rear; requirements,
<!--&rear; versions shipped with the current product, -->
   some limitations to be aware of, and scenarios and backup tools.
  </para>

  <sect2 xml:id="sec-ha-rear-concept-drp">
   <title>Creating a disaster recovery plan</title>
   <para>
    <emphasis>Before</emphasis> the worst scenario happens, take action:
    analyze your IT infrastructure for any substantial risks, evaluate your
    budget, and create a disaster recovery plan. If you do not already have
    a disaster recovery plan at hand, find information on each step
    below:
   </para>
   <itemizedlist>
    <listitem>
     <formalpara>
      <title>Risk analysis</title>
      <para>
       Conduct a solid risk analysis of your infrastructure. List all the
       possible threats and evaluate how serious they are. Determine how
       likely these threats are and prioritize them. It is recommended to
       use a simple categorization: probability and impact.
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>Budget planning</title>
      <para>
       The outcome of the analysis is an overview, which risks can be
       tolerated and which are critical for your business. Ask yourself how
       you can minimize risks and how much it costs. Depending on how
       big your company is, spend two to fifteen percent of the overall IT
       budget on disaster recovery.
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>Disaster recovery plan development</title>
      <para>
       Make checklists, test procedures, establish and assign priorities,
       and inventory your IT infrastructure. Define how to deal with a
       problem when some services in your infrastructure fail.
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>Test</title>
      <para>
       After defining an elaborate plan, test it. Test it at least once a
       year. Use the same testing hardware as your main IT infrastructure.
      </para>
     </formalpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-ha-rear-concept-recovery">
   <title>What does disaster recovery mean?</title>
   <para>
    If a system in a production environment has been destroyed (for whatever
    reasons&mdash;be it broken hardware, a misconfiguration or software
    problems), you need to re-create the system. The recreation can be done
    either on the same hardware or on compatible replacement hardware.
    Re-creating a system means more than restoring files from a backup.
    It also includes preparing the system's storage (with regard to partitioning, file
    systems, and mount points), and reinstalling the boot
    loader.
   </para>
  </sect2>

  <sect2 xml:id="sec-ha-rear-concept-basics">
   <title>How does disaster recovery with &rear; work?</title>
   <para>
    While the system is up and running, create a backup of the files and
    create a recovery system on a recovery medium. The recovery system
    contains a recovery installer.
   </para>
   <para>
    In case the system has been destroyed, replace broken hardware (if
    needed), boot the recovery system from the recovery medium and launch
    the recovery installer. The recovery installer re-creates the system:
    First, it prepares the storage (partitioning, file systems, mount
    points), then it restores the files from the backup. Finally, it
    reinstalls the boot loader.
   </para>
  </sect2>

  <sect2 xml:id="sec-ha-rear-concept-requirements">
   <title>&rear; requirements</title>
   <para>
    To use &rear; you need at least two identical systems: the machine
    that runs your production environment and an identical test machine.
    <quote>Identical</quote> in this context means that you can, for
    example, replace a network card with another one using the same Kernel
    driver.
   </para>
   <warning>
    <title>Identical drivers required</title>
    <para>
     If a hardware component does not use the same driver as the one in
     your production environment, it is not considered identical by
     &rear;.
    </para>
   </warning>
  </sect2>


  <sect2 xml:id="sec-ha-rear-concept-versions">
   <title>&rear; version updates</title>

   <para>
    To see which versions of &rear; are available with &productname; &productnumber;,
    run the following command:
   </para>
<screen>&prompt.root;<command>zypper search -v rear</command></screen>

   <note>
    <title>Find important information in changelogs</title>
    <para>
     Any information about bug fixes, incompatibilities, and other issues can
     be found in the changelogs of the packages. It is recommended to review
     also later package versions of &rear; in case you need to re-validate
     your disaster recovery procedure.
    </para>
   </note>

   <para>
     Be aware of the following issues with &rear;:
   </para>

    <itemizedlist>
     <listitem>
     <para>
      To allow disaster recovery on UEFI systems, you need at least &rear;
      version 1.18.a and the package <package>ebiso</package>.
      Only this version supports the new helper tool
      <filename>/usr/bin/ebiso</filename>. This helper tool is
      used to create a UEFI-bootable &rear; system ISO image.
     </para>
     </listitem>
     <listitem>
     <para>
      If you have a tested and fully functional disaster recovery procedure
      with one &rear; version, do not update &rear;. Keep the &rear; package
      and do not change your disaster recovery method.
     </para>
     </listitem>
     <listitem>
     <para>
      Version updates for &rear; are provided as separate packages that
      intentionally conflict with each other to prevent your installed version
      getting accidentally replaced with another version.
     </para>
     </listitem>
    </itemizedlist>

   <para>
    In the following cases you need to re-validate your existing
    disaster recovery procedure:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      For each &rear; version update.
     </para>
    </listitem>
    <listitem>
     <para>When you update &rear; manually.</para>
    </listitem>
    <listitem>
     <para>
      For each software that is used by &rear;.
     </para>
    </listitem>
    <listitem>
     <para>
      If you update low-level system components such as <command>parted</command>,
       <command>btrfs</command> and similar.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-ha-rear-concept-limit">
   <title>Limitations with Btrfs</title>
   <para>
    The following limitations apply if you use Btrfs.
   </para>
   <variablelist>
    <varlistentry>
     <term>Your system includes subvolumes, but no snapshot subvolumes</term>
     <listitem>
      <para>
       At least &rear; version 1.17.2.a is required. This version supports
       re-creating <quote>normal</quote> Btrfs subvolume structure (no snapshot
       subvolumes).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Your system includes snapshot subvolumes</term>
     <listitem>
      <warning>
       <para>
        Btrfs snapshot subvolumes <emphasis>cannot</emphasis> be backed up
        and restored as usual with file-based backup software.
       </para>
      </warning>
      <para>
       While recent snapshot subvolumes on Btrfs file systems need
       almost no disk space (because of Btrfs's copy-on-write functionality),
       those files would be backed up as complete files when using
       file-based backup software. They would end up twice in the backup
       with their original file size. Therefore, it is impossible to
       restore the snapshots as they have been before on the original
       system.
      </para>
<!-- from: https://en.opensuse.org/SDB:Disaster_Recovery#btrfs -->
<!--<para>The main reason is: When there are btrfs snapshot subvolumes and you
        run usual file-based backup software (for example,
        <command>tar</command>) to back up the whole
        data of the btrfs filesystem then all what there is in snapshot
        subvolumes gets backed up as complete files. For example if there is
        a 8GB disk with a Btrfs filesystem where 5GB disk space is used and there
        is a recent snapshot. A recent snapshot needs almost no disk space
        because of btrfs' copy on write functionality. But 'tar' would create a
        backup that has an uncompressed size of about 10GB because the files
        appear twice: Under their regular path and additionally under the
        snapshot subvolume's path. It would be impossible to restore that tarball
        on the disk. This means btrfs snapshot subvolumes cannot be backed up and
        restored as usual with file-based backup software. </para>-->
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Your SLE system needs matching &rear; configuration</term>
     <listitem>
      <remark>toms 2018-04-18: See https://github.com/rear/rear/issues/1368#issuecomment-302410707</remark>
      <para>
       For example, the setups in SLE12 GA, SLE12 SP1, and SLE12 SP2 have several
       incompatible Btrfs default structures. As such, it is
       crucial to use a matching &rear; configuration file. See the example
       files <filename>/usr/share/rear/conf/examples/SLE12*-btrfs-example.conf</filename>.
       <remark>toms 2018-04-18: https://github.com/rear/rear/issues/1368#issuecomment-302410707</remark>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-ha-rear-concept-scenarios">
   <title>Scenarios and backup tools</title>
   <para>
    &rear; can create a disaster recovery system (including a system-specific
    recovery installer) that can be booted from a local medium (like a hard
    disk, a flash disk, a DVD/CD-R) or via PXE. The backup data can be
    stored on a network file system, for example NFS, as described in
    <xref linkend="ex-ha-rear-nfs-server-backup" xrefstyle="select:label"/>.
   </para>
   <para>
    &rear; does not replace a file backup, but complements it. By
    default, &rear; supports the generic <command>tar</command> command,
    and several third-party backup tools (such as Tivoli Storage Manager,
    QNetix Galaxy, Symantec NetBackup, EMC NetWorker, or HP DataProtector).
    Refer to
    <xref linkend="ex-ha-rear-config-EMC" xrefstyle="select:label"/> for an
    example configuration of using &rear; with EMC NetWorker as backup
    tool.
   </para>
  </sect2>

  <sect2 xml:id="sec-ha-rear-concept-overview">
   <title>Basic steps</title>
   <para>
    For a successful recovery with &rear; in case of disaster, you need
    to execute the following basic steps:
   </para>
   <variablelist>
    <varlistentry>
<!--Setting Up &rear; and Your Backup Solution-->
     <term><xref linkend="sec-ha-rear-config" xrefstyle="select:title"/>
     </term>
     <listitem>
      <para>
       This includes tasks like editing the &rear; configuration file,
       adjusting the Bash scripts, and configuring the backup solution that
       you want to use.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
<!--Creating the Recovery Installation System-->
     <term><xref linkend="sec-ha-rear-mkbackup" xrefstyle="select:title"/>
     </term>
     <listitem>
      <para>
       While the system to be protected is up and running, create a file backup and
       generate a recovery system that contains a system-specific &rear; recovery installer.
      </para>
      <para>
       For basic backups with <command>tar</command>, use the <command>rear mkbackup</command>
       command to create both the backup and the recovery system.
      </para>
      <para>
       For third-party backup tools, use the <command>rear mkrescue</command> command
       to create the recovery system, and use the third-party backup tool to create the backup.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
<!--Testing the Disaster Recovery Process-->
     <term><xref linkend="sec-ha-rear-testing" xrefstyle="select:title"/>
     </term>
     <listitem>
      <para>
       Whenever you have created a disaster recovery medium with &rear;,
       test the disaster recovery process thoroughly. You must use
       a test machine that has <emphasis>identical</emphasis> hardware like
       the one that is part of your production environment. For details,
       refer to <xref linkend="sec-ha-rear-concept-requirements"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
<!--Recovering from Disaster-->
     <term><xref linkend="sec-ha-rear-recover" xrefstyle="select:title"/>
     </term>
     <listitem>
      <para>
       After a disaster has occurred, replace any broken hardware (if
       necessary). Then boot the &rear; recovery system and start the
       recovery installer with the <command>rear recover</command> command.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-ha-rear-config">
  <title>Setting up &rear; and your backup solution</title>
  <para>
   Before you can configure &rear;, you must install the latest &rear; package:
  </para>
<screen>&prompt.root;<command>zypper install rear</command></screen>
  <para>
   To configure &rear;, add your settings to the &rear; configuration file
   <filename>/etc/rear/local.conf</filename> and, if needed, edit the Bash
   scripts that are part of the &rear; framework. In particular, you need to
   define the following tasks that &rear; should do:
  </para>

  <itemizedlist>
   <listitem>
    <formalpara>
     <title>How to back up files and how to create and store the disaster recovery system</title>
     <para>
      This needs to be configured in
      <filename>/etc/rear/local.conf</filename>.
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>What to re-create (partitioning, file systems, mount points, etc.)</title>
     <para>
      This can be defined in <filename>/etc/rear/local.conf</filename>.
      To re-create non-standard systems, you may
      need to enhance the Bash scripts.
     </para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>How the recovery process works</title>
     <para>
      To change how &rear; generates the recovery installer, or to adapt
      what the &rear; recovery installer does, you need to edit the Bash
      scripts.
     </para>
    </formalpara>
   </listitem>
  </itemizedlist>

  <para>
   All &rear; configuration variables and their default values are explained in
   <filename>/usr/share/rear/conf/default.conf</filename>.
  </para>
  <para>
   Below are some examples of useful configuration options. You can also find example files
   for different scenarios in the <filename>/usr/share/rear/conf/examples/</filename> subdirectory.
   Use these to help you create your <filename>/etc/rear/local.conf</filename> file.
  </para>

  <example xml:id="ex-ha-rear-nfs-server-backup">
   <title>Using an NFS server to store the file backup</title>
  <orderedlist>
   <listitem>
    <para>
     Set up an NFS server with &yast; as described in the
     <link
      xlink:href="https://documentation.suse.com/sles-15/html/SLES-all/cha-nfs.html">
      &admin; for &sls; &productnumber;</link>.
    </para>
   </listitem>
   <listitem>
    <para>
     Define the configuration for your NFS server in the
     <filename>/etc/exports</filename> file. Make sure the directory on the
     NFS server has the right mount options. For example, you might
     need <literal>no_root_squash</literal> as the
     <command>rear mkbackup</command> command runs as &rootuser;.
     For more information, see <command>man exports</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     Adjust the various <varname>BACKUP</varname> parameters in the
     configuration file <filename>/etc/rear/local.conf</filename> to make
     &rear; store the file backup on the respective NFS server. Find
     examples in your installed system under
     <filename>/usr/share/rear/conf/examples/SLE*-example.conf</filename>.
    </para>
   </listitem>
  </orderedlist>
  </example>

  <example xml:id="ex-ha-rear-config-sles-btrfs">
    <title>Backing up Btrfs subvolumes with <command>tar</command></title>
    <para>
     Btrfs is set up with subvolumes, but <command>tar</command>
     creates backups with the <option>--one-file-system</option> option, which excludes subvolumes.
     Therefore, the subvolumes must be explicitly included in the &rear; configuration.
    </para>
    <para>
     Add this configuration snippet to <filename>/etc/rear/local.conf</filename> and
    adjust it according to your setup. For more information and additional options, see the
    example files at <filename>/usr/share/rear/conf/examples/SLE*-btrfs-example.conf</filename>.
    </para>
<screen>OUTPUT=ISO
BACKUP=NETFS
BACKUP_URL=nfs://<replaceable>host.&exampledomain;/path/to/rear/backup</replaceable>
BACKUP_PROG_INCLUDE=( /root /boot/grub2/i386-pc /tmp /opt /var /boot/grub2/x86_64-efi /srv /usr/local )</screen>
    <tip>
      <title>Directories for <literal>BACKUP_PROG_INCLUDE</literal></title>
      <para>
        You can find the directories for your specific system by running the following command:
      </para>
<screen>&prompt.root;<command>findmnt -n -r -o TARGET -t btrfs | grep -v '^/$' | egrep -v 'snapshots|crash'</command></screen>
    </tip>
  </example>

  <example xml:id="ex-ha-rear-config-EMC">
   <title>Using third-party backup tools like EMC NetWorker</title>
   <para>
    Using third-party backup tools instead of <command>tar</command>
    requires appropriate settings in the &rear; configuration file.
   </para>
   <para>
    The following is an example configuration for EMC NetWorker. Add this
    configuration snippet to <filename>/etc/rear/local.conf</filename> and
    adjust it according to your setup:
   </para>
<screen>BACKUP=NSR
OUTPUT=ISO
BACKUP_URL=nfs://<replaceable>host.&exampledomain;/path/to/rear/backup</replaceable>
OUTPUT_URL=nfs://<replaceable>host.&exampledomain;/path/to/rear/backup</replaceable>
NSRSERVER=<replaceable>backupserver.&exampledomain;</replaceable>
RETENTION_TIME="Month"</screen>
   <para>
    For more information about supported third-party backup tools, see
    <command>man rear</command>, section <citetitle>BACKUP SOFTWARE INTEGRATION</citetitle>.
   </para>
  </example>

  <example xml:id="ex-ha-rear-config-multipath">
    <title>Backing up multipath devices</title>
    <para>
     By default, &rear; ignores file systems on multipath devices because it assumes they are
     on shared storage, not part of the local system. You can make &rear; include these
     file systems by adding the following line to <filename>/etc/rear/local.conf</filename>:
    </para>
    <screen>AUTOEXCLUDE_MULTIPATH=n</screen>
  </example>

  <example xml:id="ex-ex-ha-rear-config-UEFI">
    <title>Booting your system with UEFI</title>
    <para>
      If your system boots with a UEFI boot loader, additional configuration is required:
    </para>
    <orderedlist>
      <listitem>
        <para>
          Install the package <package>ebiso</package>:
        </para>
<screen>&prompt.root;<command>zypper install ebiso</command></screen>
      </listitem>
      <listitem>
        <para>
          Add the following line to <filename>/etc/rear/local.conf</filename>:
        </para>
<screen>ISO_MKISOFS_BIN="/usr/bin/ebiso"</screen>
      </listitem>
      <listitem>
        <para>
          If your system boots with &uefisecboot;, you must also add the following line:
        </para>
<screen>SECURE_BOOT_BOOTLOADER="/boot/efi/EFI/sles/shim.efi"</screen>
      </listitem>
    </orderedlist>
    <para>
     For more information about &rear; configuration variables for UEFI, see the
     <filename>/usr/share/rear/conf/default.conf</filename> file.
    </para>
  </example>
 </sect1>
 <sect1 xml:id="sec-ha-rear-mkbackup">
  <title>Creating the recovery installation system</title>
  <para>
   After you have configured &rear; as described in
   <xref linkend="sec-ha-rear-config" xrefstyle="select:label"/>, create the
   recovery installation system (including the &rear; recovery installer) plus the file backup.
  </para>
  <example xml:id="ex-ha-rear-mkbackup">
    <title>Creating a recovery system with a basic <command>tar</command> backup</title>
    <para>
      Run the <command>rear mkbackup</command> command:
    </para>
<screen>&prompt.root;<command>rear -d -D mkbackup</command></screen>
    <para>
     This command performs the following steps:
    </para>
    <itemizedlist>
      <listitem>
        <para>
        Analyzing the target system and gathering information, in particular
        about the disk layout (partitioning, file systems, mount points) and
        about the boot loader.
        </para>
      </listitem>
      <listitem>
        <para>
        Creating a bootable recovery system with the information gathered in
        the first step. The resulting &rear; recovery installer is
        <emphasis>specific</emphasis> to the system that you want to protect
        from disaster. It can only be used to re-create this specific system.
        </para>
      </listitem>
      <listitem>
        <para>
        Calling the internal backup tool to back up system files and user files.
        </para>
      </listitem>
    </itemizedlist>
  </example>
  <example xml:id="ex-ha-rear-mkrescue">
    <title>Creating a recovery system with a third-party backup</title>
    <orderedlist>
      <listitem>
        <para>
          Run the <command>rear mkrescue</command> command:
        </para>
<screen>&prompt.root;<command>rear -d -D mkrescue</command></screen>
        <para>
          This command analyzes the target and creates a recovery system, but
          does <emphasis>not</emphasis> create a backup of the files.
        </para>
      </listitem>
      <listitem>
        <para>
          Create a file backup using your third-party backup tool.
        </para>
      </listitem>
    </orderedlist>
  </example>
 </sect1>

 <sect1 xml:id="sec-ha-rear-testing">
  <title>Testing the recovery process</title>

  <para>
   After having created the recovery system, test the recovery process on a
   test machine with identical hardware. See also
   <xref linkend="sec-ha-rear-concept-requirements"/>. Make sure the test
   machine is correctly set up and can serve as a replacement for your main
   machine.
  </para>

  <warning>
   <title>Extensive testing on identical hardware</title>
   <para>
    Thorough testing of the disaster recovery process on machines is
    required. Test the recovery procedure on a regular basis to ensure
    everything works as expected.
   </para>
  </warning>

  <procedure xml:id="pro-ha-rear-testing">
   <title>Performing a disaster recovery on a test machine</title>
   <step>
    <para>
     Create a recovery medium by burning the recovery system that you have
     created in
     <xref linkend="sec-ha-rear-mkbackup" xrefstyle="select:label"/> to a
     DVD or CD. Alternatively, you can use a network boot via PXE.
    </para>
   </step>
   <step>
    <para>
     Boot the test machine from the recovery medium.
    </para>
   </step>
   <step>
    <para>
     From the menu, select <guimenu>Recover</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Log in as &rootuser; (no password needed).
    </para>
   </step>
   <step>
    <para>
     Enter the following command to start the recovery installer:
    </para>
<screen>rear -d -D recover</screen>
    <para>
     For details about the steps that &rear; takes during the process,
     see <xref linkend="ol-ha-rear-recovers-steps"/>.
    </para>
   </step>
   <step>
    <para>
     After the recovery process has finished, check whether the system has been
     successfully re-created and can serve as a replacement for your original
     system in the production environment.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-ha-rear-recover">
  <title>Recovering from disaster</title>

  <para>
   In case a disaster has occurred, replace any broken hardware if
   necessary. Then proceed as described in
   <xref linkend="pro-ha-rear-testing" xrefstyle="select:label"/>, using
   either the repaired machine (or a tested, identical machine that can
   serve as a replacement for your original system).
  </para>

  <para>
   The <command>rear recover</command> command executes the following
   steps:
  </para>

  <orderedlist xml:id="ol-ha-rear-recovers-steps" spacing="normal">
   <title>Recovery process</title>
   <listitem>
    <para>
     Restoring the disk layout (partitions, file systems, and mount points).
    </para>
   </listitem>
   <listitem>
    <para>
     Restoring the system and user files from the backup.
    </para>
   </listitem>
   <listitem>
    <para>
     Restoring the boot loader.
    </para>
   </listitem>
  </orderedlist>
 </sect1>
 <sect1 xml:id="sec-ha-rear-more">
  <title>For more information</title>

<!-- http://rear.github.com/documentation/ -->

  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="https://en.opensuse.org/SDB:Disaster_Recovery"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>rear</command> man page
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>/usr/share/doc/packages/rear/</filename>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
