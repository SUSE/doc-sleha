<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xml:id="cha-ha-manage-resources" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Managing Cluster Resources</title>
 <info>
  <abstract>
   <para>
    After configuring the resources in the cluster, use the cluster management tools
    to start, stop, clean up, remove or migrate the resources. This chapter describes
    how to use &hawk2; or &crmsh; for resource management tasks.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-ha-resource-show">
  <title>Showing Cluster Resources</title>
  <sect2 xml:id="sec-ha-manual-config-show">
   <title>Showing Cluster Resources with &crmsh;</title>
   <para>
    When administering a cluster the command <command>crm configure show</command>
    lists the current CIB objects like cluster configuration, global options,
    primitives, and others:
   </para>
   <screen>&prompt.root;<command>crm configure show</command>
node 178326192: &node1;
node 178326448: &node2;
primitive admin_addr IPaddr2 \
        params ip=&subnetII;.1 \
        op monitor interval=10 timeout=20
primitive stonith-sbd stonith:external/sbd \
        params pcmk_delay_max=30
property cib-bootstrap-options: \
        have-watchdog=true \
        dc-version=1.1.15-17.1-e174ec8 \
        cluster-infrastructure=corosync \
        cluster-name=hacluster \
        stonith-enabled=true \
        placement-strategy=balanced \
        standby-mode=true
rsc_defaults rsc-options: \
        resource-stickiness=1 \
        migration-threshold=3
op_defaults op-options: \
        timeout=600 \
        record-pending=true</screen>
   <para>
    If you have lots of resources, the output of <command>show</command>
    is too verbose. To restrict the output, use the name of the resource.
    For example, to list the properties of the primitive
    <systemitem>admin_addr</systemitem> only, append the resource name to
    <command>show</command>:
   </para>
   <screen>&prompt.root;<command>crm configure show admin_addr</command>
primitive admin_addr IPaddr2 \
        params ip=&subnetII;.1 \
        op monitor interval=10 timeout=20</screen>
   <para>
    However, in some cases, you want to limit the output of specific resources
    even more. This can be achieved with <emphasis>filters</emphasis>. Filters
    limit the output to specific components. For example, to list the
    nodes only, use <literal>type:node</literal>:
   </para>
   <screen>&prompt.root;<command>crm configure show type:node</command>
node 178326192: &node1;
node 178326448: &node2;</screen>
   <para>If you are also interested in primitives, use the
   <literal>or</literal> operator:</para>
   <screen>&prompt.root;<command>crm configure show type:node or type:primitive</command>
node 178326192: &node1;
node 178326448: &node2;
primitive admin_addr IPaddr2 \
        params ip=&subnetII;.1 \
        op monitor interval=10 timeout=20
primitive stonith-sbd stonith:external/sbd \
        params pcmk_delay_max=30</screen>
   <para>
    Furthermore, to search for an object that starts with a certain string,
    use this notation:</para>
   <screen>&prompt.root;<command>crm configure show type:primitive and 'admin*'</command>
primitive admin_addr IPaddr2 \
        params ip=&subnetII;.1 \
        op monitor interval=10 timeout=20</screen>
   <para>
    To list all available types, enter <command>crm configure show type:</command>
    and press the <keycap function="tab"/> key. The Bash completion will give
    you a list of all types.
   </para>
  </sect2>
</sect1>

<sect1 xml:id="sec-ha-resource-edit">
 <title>Editing Resources and Groups</title>
 <para>
  You can edit resources or groups using either &hawk2; or &crmsh;.
 </para>
 <sect2 xml:id="sec-conf-hawk2-manage-edit">
  <title>Editing Resources and Groups with &hawk2;</title>
  <para>
   If you have created a resource, you can edit its configuration at any time
   by adjusting parameters, operations, or meta attributes as needed.
  </para>
  <procedure xml:id="pro-conf-hawk2-rsc-modify">
   <title>Modifying Parameters, Operations, or Meta Attributes for a Resource</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     On the &hawk2; <guimenu>Status</guimenu> screen, go to the
     <guimenu>Resources</guimenu> list.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>Operations</guimenu> column, click the arrow down icon
     next to the resource or group you want to modify and select
     <guimenu>Edit</guimenu>.
    </para>
    <para>
     The resource configuration screen opens.
    </para>
    <figure>
     <title>&hawk2;&mdash;Editing A Primitive Resource</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-primitive-edit.png" width="100%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-primitive-edit.png" width="100%"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     At the top of the configuration screen, you can select operations to perform.
    </para>
    <para>
     If you edit a primitive resource, the following
     operations are available:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Copying the resource.
      </para>
     </listitem>
     <listitem>
      <para>
       Renaming the resource (changing its ID).
      </para>
     </listitem>
     <listitem>
      <para>
       Deleting the resource.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     If you edit a group, the following operations are available:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Creating a new primitive which will be added to this group.
      </para>
     </listitem>
     <listitem>
      <para>
       Renaming the group (changing its ID).
      </para>
     </listitem>
     <listitem>
      <para>
       Re-sort group members by dragging and dropping them into the order you
       want using the <quote>handle</quote> icon on the right.
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step xml:id="step-hawk2-rsc-modify-params">
    <para>
     To add a new parameter, operation, or meta attribute, select an entry from
     the empty drop-down box.
    </para>
   </step>
   <step>
    <para>
     To edit any values in the <guimenu>Operations</guimenu> category, click
     the <guimenu>Edit</guimenu> icon of the respective entry, enter a
     different value for the operation, and click <guimenu>Apply</guimenu>.
    </para>
   </step>
   <step>
    <para>
     When you are finished, click the <guimenu>Apply</guimenu> button in the
     resource configuration screen to confirm your changes to the parameters,
     operations, or meta attributes.
    </para>
    <para>
     A message at the top of the screen shows if the action has been
     successful.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-conf-crm-manage-edit">
  <title>Editing Groups with &crmsh;</title>
  <para>
   To change the order of a group member, use the
   <command>modgroup</command> command from the
   <command>configure</command> subcommand. For example, use the following commands to
   move the primitive <literal>Email</literal> before
   <literal>Public-IP</literal>.
  </para>
<screen>&prompt.crm.conf;<command>modgroup g-mailsvc add Email before Public-IP</command></screen>
  <para>
   In case you want to remove a resource from a group (for example,
   <literal>Email</literal>), use this command:
  </para>
<screen>&prompt.crm.conf;<command>modgroup g-mailsvc remove Email</command></screen>
 </sect2>
 </sect1>

 <sect1 xml:id="sec-ha-resource-start">
  <title>Starting Cluster Resources</title>
  <para>
   Before you start a cluster resource, make sure it is set up correctly. For
   example, if you use an Apache server as a cluster resource, set up the
   Apache server first. Complete the Apache configuration before starting the
   respective resource in your cluster.
  </para>
  <note>
   <title>Do Not Touch Services Managed by the Cluster</title>
   <para>
    When managing a resource via the &hasi;, the resource must not be started
    or stopped otherwise (outside of the cluster, for example manually or on
    boot or reboot). The &hasi; software is responsible for all service start
    or stop actions.
   </para>
   <para>
    However, if you want to check if the service is configured properly, start
    it manually, but make sure that it is stopped again before the &hasi; takes
    over.
   </para>
   <para>
    For interventions in resources that are currently managed by the cluster,
    set the resource to <literal>maintenance mode</literal> first. For details,
    see <xref linkend="pro-ha-maint-mode-rsc-hawk2"/>.
   </para>
  </note>
  <para>
   You can start a cluster resource using either &hawk2; or &crmsh;.
  </para>
 <sect2 xml:id="sec-conf-hawk2-manage-start">
  <title>Starting Cluster Resources with &hawk2;</title>
  <para>
   When creating a resource with &hawk2;, you can set its initial state with
   the <literal>target-role</literal> meta attribute. If you set its value to
   <literal>stopped</literal>, the resource does not start automatically after
   being created.
  </para>
  <procedure xml:id="pro-hawk2-rsc-start">
   <title>Starting A New Resource</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     From the left navigation bar, select <menuchoice><guimenu>Monitoring</guimenu>
     <guimenu>Status</guimenu></menuchoice>. The list of
     <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select the resource to start. In its <guimenu>Operations</guimenu> column
     click the <guimenu>Start</guimenu> icon. To continue, confirm the message
     that appears.
    </para>
    <para>
     When the resource has started, &hawk2; changes the resource's
     <guimenu>Status</guimenu> to green and shows on which node it is running.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-manual-config-start">
  <title>Starting Cluster Resources with &crmsh;</title>
  <para>
   To start a new cluster resource you need the respective identifier.
   Proceed as follows:
  </para>
  <procedure>
   <step>
    <para>
     Log in as &rootuser; and start the <command>crm</command>
     interactive shell:
    </para>
<screen>&prompt.root;<command>crm</command></screen>
   </step>
   <step>
    <para>
     Switch to the resource level:
    </para>
<screen>&prompt.crm;<command>resource</command></screen>
   </step>
   <step>
    <para>
     Start the resource with <command>start</command> and press the
     <keycap function="tab"/> key to show all known resources:
    </para>
<screen>&prompt.crm.res;<command>start <replaceable>ID</replaceable></command></screen>
   </step>
  </procedure>
 </sect2>
 </sect1>

 <sect1 xml:id="sec-ha-resource-stop">
  <title>Stopping Cluster Resources</title>
  <sect2 xml:id="sec-ha-manual-config-stop">
   <title>Stopping Cluster Resources with &crmsh;</title>
   <para>
    To stop one or more existing cluster resources you need the respective identifier(s).
    Proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Log in as &rootuser; and start the <command>crm</command>
      interactive shell:
     </para>
<screen>&prompt.root;<command>crm</command></screen>
    </step>
    <step>
     <para>
      Switch to the resource level:
     </para>
<screen>&prompt.crm;<command>resource</command></screen>
    </step>
    <step>
     <para>
      Stop the resource with <command>stop</command> and press the
      <keycap function="tab"/> key to show all known resources:
     </para>
<screen>&prompt.crm.res;<command>stop <replaceable>ID</replaceable></command></screen>
     <para>
      You can stop multiple resources at once:
     </para>
     <screen>&prompt.crm.res;<command>stop <replaceable>ID1</replaceable> <replaceable>ID2</replaceable></command> ...</screen>
    </step>
   </procedure>
  </sect2>
</sect1>

<sect1 xml:id="sec-ha-resource-clean">
 <title>Cleaning Up Cluster Resources</title>
  <para>
   A resource will be automatically restarted if it fails, but each failure
   increases the resource's failcount.
  </para>
  <para>
   If a <literal>migration-threshold</literal> has been set for the resource,
   the node will no longer run the resource when the number of failures reaches
   the migration threshold.
  </para>
  <para>
   A resource's failcount can either be reset automatically (by setting a
   <literal>failure-timeout</literal> option for the resource) or it can be
   reset manually using either &hawk2; or &crmsh;.
  </para>
 <sect2 xml:id="sec-conf-hawk2-manage-cleanup">
  <title>Cleaning Up Resources with &hawk2;</title>
  <procedure xml:id="pro-hawk2-clean">
   <title>Cleaning Up A Resource</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     From the left navigation bar, select <guimenu>Status</guimenu>. The list of
     <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Go to the resource to clean up. In the <guimenu>Operations</guimenu>
     column click the arrow down button and select <guimenu>Cleanup</guimenu>.
     To continue, confirm the message that appears.
    </para>
    <para>
     This executes the command <command>crm resource cleanup</command> and
     cleans up the resource on all nodes.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-manual-config-cleanup">
  <title>Cleaning Up Cluster Resources with &crmsh;</title>
  <procedure>
   <step>
    <para>
     Open a shell and log in as user &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Get a list of all your resources:
    </para>
<screen>&prompt.root;<command>crm resource list</command>
 ...
Resource Group: dlm-clvm:1
        dlm:1  (ocf:pacemaker:controld) Started
        clvm:1 (ocf:heartbeat:lvmlockd) Started</screen>
   </step>
   <step>
    <para>
     To clean up the resource <literal>dlm</literal>, for example:
    </para>
<screen>&prompt.root;<command>crm resource cleanup dlm</command></screen>
   </step>
  </procedure>
 </sect2>
</sect1>

<sect1 xml:id="sec-ha-resource-remove">
 <title>Removing Cluster Resources</title>
  <para>
   To remove a resource from the cluster, follow either the
   &hawk2; or &crmsh; procedure below to avoid configuration errors:
  </para>
 <sect2 xml:id="sec-conf-hawk2-manage-remove">
  <title>Removing Cluster Resources with &hawk2;</title>
  <procedure xml:id="pro-hawk2-rsc-rm">
   <title>Removing a Cluster Resource</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     Clean up the resource on all nodes as described in
     <xref linkend="pro-hawk2-clean"/>.
    </para>
   </step>
   <step>
    <para>
     Stop the resource:
    </para>
    <substeps>
     <step>
      <para>
       From the left navigation bar, select <menuchoice><guimenu>Monitoring</guimenu>
       <guimenu>Status</guimenu></menuchoice>. The list
       of <guimenu>Resources</guimenu> also shows the
       <guimenu>Status</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Operations</guimenu> column click the
       <guimenu>Stop</guimenu> button next to the resource.
      </para>
     </step>
     <step>
      <para>
       To continue, confirm the message that appears.
      </para>
      <para>
       The <guimenu>Status</guimenu> column will reflect the change when the
       resource is stopped.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Delete the resource:
    </para>
    <substeps>
     <step>
      <para>
       From the left navigation bar, select
       <menuchoice><guimenu>Configuration</guimenu> <guimenu>Edit
       Configuration</guimenu></menuchoice>.
      </para>
     </step>
     <step>
      <para>
       In the list of <guimenu>Resources</guimenu>, go to the respective
       resource. From the <guimenu>Operations</guimenu> column click the
       <guimenu>Delete</guimenu> icon next to the resource.
      </para>
     </step>
     <step>
      <para>
       To continue, confirm the message that appears.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-manual-config-remove">
  <title>Removing Cluster Resources with &crmsh;</title>
  <para>
   Proceed as follows to remove a cluster resource:
  </para>
  <procedure>
   <step>
    <para>
     Log in as &rootuser; and start the <command>crm</command>
     interactive shell:
    </para>
<screen>&prompt.root;<command>crm configure</command></screen>
   </step>
   <step>
    <para>
     Run the following command to get a list of your resources:
    </para>
<screen>&prompt.crm;<command>resource status</command></screen>
    <para>
     For example, the output can look like this (whereas myIP is the
     relevant identifier of your resource):
    </para>
<screen>myIP    (ocf:IPaddr:heartbeat) ...</screen>
   </step>
   <step>
    <para>
     Delete the resource with the relevant identifier (which implies a
     <command>commit</command> too):
    </para>
<screen>&prompt.crm;<command>configure delete <replaceable>YOUR_ID</replaceable></command></screen>
   </step>
   <step>
    <para>
     Commit the changes:
    </para>
<screen>&prompt.crm;<command>configure commit</command></screen>
   </step>
  </procedure>
 </sect2>
</sect1>

<sect1 xml:id="sec-ha-resource-migrate">
 <title>Migrating Cluster Resources</title>
  <para>
   The cluster will
   fail over (migrate) resources automatically in case of software or hardware
   failures, according to certain parameters you can define (for example,
   migration threshold or resource stickiness). You can also manually migrate a
   resource to another node in the cluster, or move the resource
   away from the current node and let the cluster decide where to put it.
  </para>
  <para>
   You can migrate a cluster resource using either &hawk2; or &crmsh;.
  </para>
 <sect2 xml:id="sec-conf-hawk2-manage-migrate">
  <title>Migrating Cluster Resources with &hawk2;</title>
  <procedure xml:id="pro-hawk2-rsc-migrate">
   <title>Manually Migrating a Resource</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     From the left navigation bar, select <menuchoice><guimenu>Monitoring</guimenu>
     <guimenu>Status</guimenu></menuchoice>. The list of
     <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the list of <guimenu>Resources</guimenu>, select the respective
     resource.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>Operations</guimenu> column click the arrow down button
     and select <guimenu>Migrate</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the window that opens you have the following choices:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <guimenu>Away from current node</guimenu>: This creates a location
       constraint with a <literal>-INFINITY</literal> score for the current
       node.
      </para>
     </listitem>
     <listitem>
      <para>
       Alternatively, you can move the resource to another node. This creates a
       location constraint with an <literal>INFINITY</literal> score for the
       destination node.
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     Confirm your choice.
    </para>
   </step>
  </procedure>
  <para>
   To allow a resource to move back again, proceed as follows:
  </para>
  <procedure xml:id="pro-hawk2-rsc-migrate-back">
   <title>Unmigrating a Resource</title>
   <step>
    <para>
     Log in to &hawk2;:
    </para>
<screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     From the left navigation bar, select <menuchoice><guimenu>Monitoring</guimenu>
     <guimenu>Status</guimenu></menuchoice>. The list of
     <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In the list of <guimenu>Resources</guimenu>, go to the respective
     resource.
    </para>
   </step>
   <step>
    <para>
     In the <guimenu>Operations</guimenu> column click the arrow down button
     and select <guimenu>Clear</guimenu>. To continue, confirm the message
     that appears.
    </para>
    <para>
     &hawk2; uses the <command>crm_resource --clear</command>
     command. The resource can move back to its original location or it may
     stay where it is (depending on resource stickiness).
    </para>
   </step>
  </procedure>
  <para>
   For more information, see &paceex;, available from
   <link
     xlink:href="http://www.clusterlabs.org/pacemaker/doc/"/>. Refer to section
   <citetitle>Resource Migration</citetitle>.
  </para>
 </sect2>

  <sect2 xml:id="sec-ha-manual-config-migrate">
   <title>Migrating Cluster Resources with &crmsh;</title>
   <para>
    Use the <command>move</command> command for this task. For example,
    to migrate the resource <literal>ipaddress1</literal> to a cluster node
    named <systemitem class="domainname">&node2;</systemitem>, use these
    commands:
   </para>
<screen>&prompt.root;<command>crm resource</command>
&prompt.crm.res;<command>move ipaddress1 &node2;</command></screen>
  </sect2>
</sect1>

 <sect1 xml:id="sec-ha-config-basics-tags">
  <title>Grouping Resources by Using Tags</title>
  <para>
   Tags are a way to refer to multiple resources at once, without creating any
   colocation or ordering relationship between them. This can be useful for
   grouping conceptually related resources. For example, if you have
   several resources related to a database, create a tag called
   <literal>databases</literal> and add all resources related to the
   database to this tag. This allows you to stop or start them all with a
   single command.
  </para>
  <para>
   Tags can also be used in constraints. For example, the following
   location constraint <literal>loc-db-prefer</literal> applies to the set
   of resources tagged with <literal>databases</literal>:
  </para>
<screen>location loc-db-prefer databases 100: &node1;</screen>
  <para>
   You can create tags using either &hawk2; or &crmsh;.
  </para>

  <sect2 xml:id="sec-conf-hawk2-rsc-tag">
   <title>Grouping Resources by Using Tags with &hawk2;</title>
   <procedure xml:id="pro-conf-hawk2-tag">
    <title>Adding a Tag</title>
    <step>
     <para>
      Log in to &hawk2;:
     </para>
 <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>
      From the left navigation bar, select <menuchoice>
      <guimenu>Configuration</guimenu> <guimenu>Add
      Resource</guimenu> <guimenu>Tag</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Tag ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Objects</guimenu> list, select the resources you want to
      refer to with the tag.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. A message at
      the top of the screen shows if the action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk2;&mdash;Tag</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-tag.png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-tag.png" width="100%"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 xml:id="sec-ha-manual-config-tag">
   <title>Grouping Resources by Using Tags with &crmsh;</title>
   <para>
    For example, if you have
    several resources related to a database, create a tag called
    <literal>databases</literal> and add all resources related to the
    database to this tag:
   </para>
<screen>&prompt.root;<command>crm configure tag databases: db1 db2 db3</command></screen>
   <para>
    This allows you to start them all with a single command:
   </para>
<screen>&prompt.root;<command>crm resource start databases</command></screen>
   <para>
    Similarly, you can stop them all too:
   </para>
<screen>&prompt.root;<command>crm resource stop databases</command></screen>
  </sect2>
</sect1>
</chapter>
